/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProvisioningApiUserDetailsQuota {
    #[serde(rename = "free", deserialize_with = "Option::deserialize")]
    pub free: Option<i64>,
    #[serde(rename = "quota")]
    pub quota: Box<crate::models::ProvisioningApiUserDetailsQuotaQuota>,
    #[serde(rename = "relative", deserialize_with = "Option::deserialize")]
    pub relative: Option<f32>,
    #[serde(rename = "total", deserialize_with = "Option::deserialize")]
    pub total: Option<i64>,
    #[serde(rename = "used")]
    pub used: i64,
}

impl ProvisioningApiUserDetailsQuota {
    pub fn new(free: Option<i64>, quota: crate::models::ProvisioningApiUserDetailsQuotaQuota, relative: Option<f32>, total: Option<i64>, used: i64) -> ProvisioningApiUserDetailsQuota {
        ProvisioningApiUserDetailsQuota {
            free,
            quota: Box::new(quota),
            relative,
            total,
            used,
        }
    }
}


