/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingFederation {
    #[serde(rename = "outgoing")]
    pub outgoing: bool,
    #[serde(rename = "incoming")]
    pub incoming: bool,
    #[serde(rename = "expire_date")]
    pub expire_date: Box<crate::models::CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingUserExpireDate>,
    #[serde(rename = "expire_date_supported")]
    pub expire_date_supported: Box<crate::models::CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingUserExpireDate>,
}

impl CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingFederation {
    pub fn new(outgoing: bool, incoming: bool, expire_date: crate::models::CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingUserExpireDate, expire_date_supported: crate::models::CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingUserExpireDate) -> CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingFederation {
        CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingFederation {
            outgoing,
            incoming,
            expire_date: Box::new(expire_date),
            expire_date_supported: Box::new(expire_date_supported),
        }
    }
}


