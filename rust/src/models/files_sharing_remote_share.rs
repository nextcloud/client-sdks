/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FilesSharingRemoteShare {
    #[serde(rename = "accepted")]
    pub accepted: bool,
    #[serde(rename = "file_id", deserialize_with = "Option::deserialize")]
    pub file_id: Option<i64>,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "mimetype", deserialize_with = "Option::deserialize")]
    pub mimetype: Option<String>,
    #[serde(rename = "mountpoint")]
    pub mountpoint: String,
    #[serde(rename = "mtime", deserialize_with = "Option::deserialize")]
    pub mtime: Option<i64>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "owner")]
    pub owner: String,
    #[serde(rename = "parent", deserialize_with = "Option::deserialize")]
    pub parent: Option<i64>,
    #[serde(rename = "permissions", deserialize_with = "Option::deserialize")]
    pub permissions: Option<i64>,
    #[serde(rename = "remote")]
    pub remote: String,
    #[serde(rename = "remote_id")]
    pub remote_id: String,
    #[serde(rename = "share_token")]
    pub share_token: String,
    #[serde(rename = "share_type")]
    pub share_type: i64,
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<String>,
    #[serde(rename = "user")]
    pub user: String,
}

impl FilesSharingRemoteShare {
    pub fn new(accepted: bool, file_id: Option<i64>, id: i64, mimetype: Option<String>, mountpoint: String, mtime: Option<i64>, name: String, owner: String, parent: Option<i64>, permissions: Option<i64>, remote: String, remote_id: String, share_token: String, share_type: i64, r#type: Option<String>, user: String) -> FilesSharingRemoteShare {
        FilesSharingRemoteShare {
            accepted,
            file_id,
            id,
            mimetype,
            mountpoint,
            mtime,
            name,
            owner,
            parent,
            permissions,
            remote,
            remote_id,
            share_token,
            share_type,
            r#type,
            user,
        }
    }
}


