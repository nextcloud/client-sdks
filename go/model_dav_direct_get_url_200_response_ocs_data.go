/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DavDirectGetUrl200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DavDirectGetUrl200ResponseOcsData{}

// DavDirectGetUrl200ResponseOcsData struct for DavDirectGetUrl200ResponseOcsData
type DavDirectGetUrl200ResponseOcsData struct {
	Url string `json:"url"`
}

// NewDavDirectGetUrl200ResponseOcsData instantiates a new DavDirectGetUrl200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDavDirectGetUrl200ResponseOcsData(url string) *DavDirectGetUrl200ResponseOcsData {
	this := DavDirectGetUrl200ResponseOcsData{}
	this.Url = url
	return &this
}

// NewDavDirectGetUrl200ResponseOcsDataWithDefaults instantiates a new DavDirectGetUrl200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDavDirectGetUrl200ResponseOcsDataWithDefaults() *DavDirectGetUrl200ResponseOcsData {
	this := DavDirectGetUrl200ResponseOcsData{}
	return &this
}

// GetUrl returns the Url field value
func (o *DavDirectGetUrl200ResponseOcsData) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *DavDirectGetUrl200ResponseOcsData) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *DavDirectGetUrl200ResponseOcsData) SetUrl(v string) {
	o.Url = v
}

func (o DavDirectGetUrl200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DavDirectGetUrl200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableDavDirectGetUrl200ResponseOcsData struct {
	value *DavDirectGetUrl200ResponseOcsData
	isSet bool
}

func (v NullableDavDirectGetUrl200ResponseOcsData) Get() *DavDirectGetUrl200ResponseOcsData {
	return v.value
}

func (v *NullableDavDirectGetUrl200ResponseOcsData) Set(val *DavDirectGetUrl200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableDavDirectGetUrl200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableDavDirectGetUrl200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDavDirectGetUrl200ResponseOcsData(val *DavDirectGetUrl200ResponseOcsData) *NullableDavDirectGetUrl200ResponseOcsData {
	return &NullableDavDirectGetUrl200ResponseOcsData{value: val, isSet: true}
}

func (v NullableDavDirectGetUrl200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDavDirectGetUrl200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


