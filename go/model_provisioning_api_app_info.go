/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProvisioningApiAppInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiAppInfo{}

// ProvisioningApiAppInfo struct for ProvisioningApiAppInfo
type ProvisioningApiAppInfo struct {
	Active NullableBool `json:"active"`
	Activity map[string]interface{} `json:"activity"`
	Author map[string]interface{} `json:"author"`
	BackgroundJobs map[string]interface{} `json:"background-jobs"`
	Bugs map[string]interface{} `json:"bugs"`
	Category map[string]interface{} `json:"category"`
	Collaboration map[string]interface{} `json:"collaboration"`
	Commands map[string]interface{} `json:"commands"`
	DefaultEnable map[string]interface{} `json:"default_enable"`
	Dependencies map[string]interface{} `json:"dependencies"`
	Description string `json:"description"`
	Discussion map[string]interface{} `json:"discussion"`
	Documentation map[string]interface{} `json:"documentation"`
	Groups map[string]interface{} `json:"groups"`
	Id string `json:"id"`
	Info map[string]interface{} `json:"info"`
	Internal NullableBool `json:"internal"`
	Level NullableInt64 `json:"level"`
	Licence map[string]interface{} `json:"licence"`
	Name string `json:"name"`
	Namespace map[string]interface{} `json:"namespace"`
	Navigations map[string]interface{} `json:"navigations"`
	Preview map[string]interface{} `json:"preview"`
	PreviewAsIcon NullableBool `json:"previewAsIcon"`
	Public map[string]interface{} `json:"public"`
	Remote map[string]interface{} `json:"remote"`
	Removable NullableBool `json:"removable"`
	RepairSteps map[string]interface{} `json:"repair-steps"`
	Repository map[string]interface{} `json:"repository"`
	Sabre map[string]interface{} `json:"sabre"`
	Screenshot map[string]interface{} `json:"screenshot"`
	Settings map[string]interface{} `json:"settings"`
	Summary string `json:"summary"`
	Trash map[string]interface{} `json:"trash"`
	TwoFactorProviders map[string]interface{} `json:"two-factor-providers"`
	Types map[string]interface{} `json:"types"`
	Version string `json:"version"`
	Versions map[string]interface{} `json:"versions"`
	Website map[string]interface{} `json:"website"`
}

// NewProvisioningApiAppInfo instantiates a new ProvisioningApiAppInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiAppInfo(active NullableBool, activity map[string]interface{}, author map[string]interface{}, backgroundJobs map[string]interface{}, bugs map[string]interface{}, category map[string]interface{}, collaboration map[string]interface{}, commands map[string]interface{}, defaultEnable map[string]interface{}, dependencies map[string]interface{}, description string, discussion map[string]interface{}, documentation map[string]interface{}, groups map[string]interface{}, id string, info map[string]interface{}, internal NullableBool, level NullableInt64, licence map[string]interface{}, name string, namespace map[string]interface{}, navigations map[string]interface{}, preview map[string]interface{}, previewAsIcon NullableBool, public map[string]interface{}, remote map[string]interface{}, removable NullableBool, repairSteps map[string]interface{}, repository map[string]interface{}, sabre map[string]interface{}, screenshot map[string]interface{}, settings map[string]interface{}, summary string, trash map[string]interface{}, twoFactorProviders map[string]interface{}, types map[string]interface{}, version string, versions map[string]interface{}, website map[string]interface{}) *ProvisioningApiAppInfo {
	this := ProvisioningApiAppInfo{}
	this.Active = active
	this.Activity = activity
	this.Author = author
	this.BackgroundJobs = backgroundJobs
	this.Bugs = bugs
	this.Category = category
	this.Collaboration = collaboration
	this.Commands = commands
	this.DefaultEnable = defaultEnable
	this.Dependencies = dependencies
	this.Description = description
	this.Discussion = discussion
	this.Documentation = documentation
	this.Groups = groups
	this.Id = id
	this.Info = info
	this.Internal = internal
	this.Level = level
	this.Licence = licence
	this.Name = name
	this.Namespace = namespace
	this.Navigations = navigations
	this.Preview = preview
	this.PreviewAsIcon = previewAsIcon
	this.Public = public
	this.Remote = remote
	this.Removable = removable
	this.RepairSteps = repairSteps
	this.Repository = repository
	this.Sabre = sabre
	this.Screenshot = screenshot
	this.Settings = settings
	this.Summary = summary
	this.Trash = trash
	this.TwoFactorProviders = twoFactorProviders
	this.Types = types
	this.Version = version
	this.Versions = versions
	this.Website = website
	return &this
}

// NewProvisioningApiAppInfoWithDefaults instantiates a new ProvisioningApiAppInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiAppInfoWithDefaults() *ProvisioningApiAppInfo {
	this := ProvisioningApiAppInfo{}
	return &this
}

// GetActive returns the Active field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ProvisioningApiAppInfo) GetActive() bool {
	if o == nil || o.Active.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Active.Get()
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Active.Get(), o.Active.IsSet()
}

// SetActive sets field value
func (o *ProvisioningApiAppInfo) SetActive(v bool) {
	o.Active.Set(&v)
}

// GetActivity returns the Activity field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetActivity() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Activity
}

// GetActivityOk returns a tuple with the Activity field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetActivityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Activity) {
		return map[string]interface{}{}, false
	}
	return o.Activity, true
}

// SetActivity sets field value
func (o *ProvisioningApiAppInfo) SetActivity(v map[string]interface{}) {
	o.Activity = v
}

// GetAuthor returns the Author field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetAuthor() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetAuthorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Author) {
		return map[string]interface{}{}, false
	}
	return o.Author, true
}

// SetAuthor sets field value
func (o *ProvisioningApiAppInfo) SetAuthor(v map[string]interface{}) {
	o.Author = v
}

// GetBackgroundJobs returns the BackgroundJobs field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetBackgroundJobs() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.BackgroundJobs
}

// GetBackgroundJobsOk returns a tuple with the BackgroundJobs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetBackgroundJobsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BackgroundJobs) {
		return map[string]interface{}{}, false
	}
	return o.BackgroundJobs, true
}

// SetBackgroundJobs sets field value
func (o *ProvisioningApiAppInfo) SetBackgroundJobs(v map[string]interface{}) {
	o.BackgroundJobs = v
}

// GetBugs returns the Bugs field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetBugs() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Bugs
}

// GetBugsOk returns a tuple with the Bugs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetBugsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Bugs) {
		return map[string]interface{}{}, false
	}
	return o.Bugs, true
}

// SetBugs sets field value
func (o *ProvisioningApiAppInfo) SetBugs(v map[string]interface{}) {
	o.Bugs = v
}

// GetCategory returns the Category field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetCategory() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetCategoryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Category) {
		return map[string]interface{}{}, false
	}
	return o.Category, true
}

// SetCategory sets field value
func (o *ProvisioningApiAppInfo) SetCategory(v map[string]interface{}) {
	o.Category = v
}

// GetCollaboration returns the Collaboration field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetCollaboration() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Collaboration
}

// GetCollaborationOk returns a tuple with the Collaboration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetCollaborationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Collaboration) {
		return map[string]interface{}{}, false
	}
	return o.Collaboration, true
}

// SetCollaboration sets field value
func (o *ProvisioningApiAppInfo) SetCollaboration(v map[string]interface{}) {
	o.Collaboration = v
}

// GetCommands returns the Commands field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetCommands() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Commands
}

// GetCommandsOk returns a tuple with the Commands field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetCommandsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Commands) {
		return map[string]interface{}{}, false
	}
	return o.Commands, true
}

// SetCommands sets field value
func (o *ProvisioningApiAppInfo) SetCommands(v map[string]interface{}) {
	o.Commands = v
}

// GetDefaultEnable returns the DefaultEnable field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetDefaultEnable() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.DefaultEnable
}

// GetDefaultEnableOk returns a tuple with the DefaultEnable field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetDefaultEnableOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DefaultEnable) {
		return map[string]interface{}{}, false
	}
	return o.DefaultEnable, true
}

// SetDefaultEnable sets field value
func (o *ProvisioningApiAppInfo) SetDefaultEnable(v map[string]interface{}) {
	o.DefaultEnable = v
}

// GetDependencies returns the Dependencies field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetDependencies() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetDependenciesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Dependencies) {
		return map[string]interface{}{}, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *ProvisioningApiAppInfo) SetDependencies(v map[string]interface{}) {
	o.Dependencies = v
}

// GetDescription returns the Description field value
func (o *ProvisioningApiAppInfo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiAppInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ProvisioningApiAppInfo) SetDescription(v string) {
	o.Description = v
}

// GetDiscussion returns the Discussion field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetDiscussion() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Discussion
}

// GetDiscussionOk returns a tuple with the Discussion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetDiscussionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Discussion) {
		return map[string]interface{}{}, false
	}
	return o.Discussion, true
}

// SetDiscussion sets field value
func (o *ProvisioningApiAppInfo) SetDiscussion(v map[string]interface{}) {
	o.Discussion = v
}

// GetDocumentation returns the Documentation field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetDocumentation() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetDocumentationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Documentation) {
		return map[string]interface{}{}, false
	}
	return o.Documentation, true
}

// SetDocumentation sets field value
func (o *ProvisioningApiAppInfo) SetDocumentation(v map[string]interface{}) {
	o.Documentation = v
}

// GetGroups returns the Groups field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetGroups() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetGroupsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Groups) {
		return map[string]interface{}{}, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ProvisioningApiAppInfo) SetGroups(v map[string]interface{}) {
	o.Groups = v
}

// GetId returns the Id field value
func (o *ProvisioningApiAppInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiAppInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProvisioningApiAppInfo) SetId(v string) {
	o.Id = v
}

// GetInfo returns the Info field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetInfo() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Info) {
		return map[string]interface{}{}, false
	}
	return o.Info, true
}

// SetInfo sets field value
func (o *ProvisioningApiAppInfo) SetInfo(v map[string]interface{}) {
	o.Info = v
}

// GetInternal returns the Internal field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ProvisioningApiAppInfo) GetInternal() bool {
	if o == nil || o.Internal.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Internal.Get()
}

// GetInternalOk returns a tuple with the Internal field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetInternalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Internal.Get(), o.Internal.IsSet()
}

// SetInternal sets field value
func (o *ProvisioningApiAppInfo) SetInternal(v bool) {
	o.Internal.Set(&v)
}

// GetLevel returns the Level field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ProvisioningApiAppInfo) GetLevel() int64 {
	if o == nil || o.Level.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Level.Get()
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetLevelOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Level.Get(), o.Level.IsSet()
}

// SetLevel sets field value
func (o *ProvisioningApiAppInfo) SetLevel(v int64) {
	o.Level.Set(&v)
}

// GetLicence returns the Licence field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetLicence() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Licence
}

// GetLicenceOk returns a tuple with the Licence field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetLicenceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Licence) {
		return map[string]interface{}{}, false
	}
	return o.Licence, true
}

// SetLicence sets field value
func (o *ProvisioningApiAppInfo) SetLicence(v map[string]interface{}) {
	o.Licence = v
}

// GetName returns the Name field value
func (o *ProvisioningApiAppInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiAppInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProvisioningApiAppInfo) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetNamespace() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetNamespaceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Namespace) {
		return map[string]interface{}{}, false
	}
	return o.Namespace, true
}

// SetNamespace sets field value
func (o *ProvisioningApiAppInfo) SetNamespace(v map[string]interface{}) {
	o.Namespace = v
}

// GetNavigations returns the Navigations field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetNavigations() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Navigations
}

// GetNavigationsOk returns a tuple with the Navigations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetNavigationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Navigations) {
		return map[string]interface{}{}, false
	}
	return o.Navigations, true
}

// SetNavigations sets field value
func (o *ProvisioningApiAppInfo) SetNavigations(v map[string]interface{}) {
	o.Navigations = v
}

// GetPreview returns the Preview field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetPreview() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetPreviewOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Preview) {
		return map[string]interface{}{}, false
	}
	return o.Preview, true
}

// SetPreview sets field value
func (o *ProvisioningApiAppInfo) SetPreview(v map[string]interface{}) {
	o.Preview = v
}

// GetPreviewAsIcon returns the PreviewAsIcon field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ProvisioningApiAppInfo) GetPreviewAsIcon() bool {
	if o == nil || o.PreviewAsIcon.Get() == nil {
		var ret bool
		return ret
	}

	return *o.PreviewAsIcon.Get()
}

// GetPreviewAsIconOk returns a tuple with the PreviewAsIcon field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetPreviewAsIconOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviewAsIcon.Get(), o.PreviewAsIcon.IsSet()
}

// SetPreviewAsIcon sets field value
func (o *ProvisioningApiAppInfo) SetPreviewAsIcon(v bool) {
	o.PreviewAsIcon.Set(&v)
}

// GetPublic returns the Public field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetPublic() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetPublicOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Public) {
		return map[string]interface{}{}, false
	}
	return o.Public, true
}

// SetPublic sets field value
func (o *ProvisioningApiAppInfo) SetPublic(v map[string]interface{}) {
	o.Public = v
}

// GetRemote returns the Remote field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetRemote() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetRemoteOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Remote) {
		return map[string]interface{}{}, false
	}
	return o.Remote, true
}

// SetRemote sets field value
func (o *ProvisioningApiAppInfo) SetRemote(v map[string]interface{}) {
	o.Remote = v
}

// GetRemovable returns the Removable field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ProvisioningApiAppInfo) GetRemovable() bool {
	if o == nil || o.Removable.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Removable.Get()
}

// GetRemovableOk returns a tuple with the Removable field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetRemovableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Removable.Get(), o.Removable.IsSet()
}

// SetRemovable sets field value
func (o *ProvisioningApiAppInfo) SetRemovable(v bool) {
	o.Removable.Set(&v)
}

// GetRepairSteps returns the RepairSteps field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetRepairSteps() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RepairSteps
}

// GetRepairStepsOk returns a tuple with the RepairSteps field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetRepairStepsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RepairSteps) {
		return map[string]interface{}{}, false
	}
	return o.RepairSteps, true
}

// SetRepairSteps sets field value
func (o *ProvisioningApiAppInfo) SetRepairSteps(v map[string]interface{}) {
	o.RepairSteps = v
}

// GetRepository returns the Repository field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetRepository() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetRepositoryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Repository) {
		return map[string]interface{}{}, false
	}
	return o.Repository, true
}

// SetRepository sets field value
func (o *ProvisioningApiAppInfo) SetRepository(v map[string]interface{}) {
	o.Repository = v
}

// GetSabre returns the Sabre field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetSabre() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Sabre
}

// GetSabreOk returns a tuple with the Sabre field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetSabreOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Sabre) {
		return map[string]interface{}{}, false
	}
	return o.Sabre, true
}

// SetSabre sets field value
func (o *ProvisioningApiAppInfo) SetSabre(v map[string]interface{}) {
	o.Sabre = v
}

// GetScreenshot returns the Screenshot field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetScreenshot() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Screenshot
}

// GetScreenshotOk returns a tuple with the Screenshot field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetScreenshotOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Screenshot) {
		return map[string]interface{}{}, false
	}
	return o.Screenshot, true
}

// SetScreenshot sets field value
func (o *ProvisioningApiAppInfo) SetScreenshot(v map[string]interface{}) {
	o.Screenshot = v
}

// GetSettings returns the Settings field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetSettings() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return map[string]interface{}{}, false
	}
	return o.Settings, true
}

// SetSettings sets field value
func (o *ProvisioningApiAppInfo) SetSettings(v map[string]interface{}) {
	o.Settings = v
}

// GetSummary returns the Summary field value
func (o *ProvisioningApiAppInfo) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiAppInfo) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ProvisioningApiAppInfo) SetSummary(v string) {
	o.Summary = v
}

// GetTrash returns the Trash field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetTrash() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Trash
}

// GetTrashOk returns a tuple with the Trash field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetTrashOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Trash) {
		return map[string]interface{}{}, false
	}
	return o.Trash, true
}

// SetTrash sets field value
func (o *ProvisioningApiAppInfo) SetTrash(v map[string]interface{}) {
	o.Trash = v
}

// GetTwoFactorProviders returns the TwoFactorProviders field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetTwoFactorProviders() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.TwoFactorProviders
}

// GetTwoFactorProvidersOk returns a tuple with the TwoFactorProviders field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetTwoFactorProvidersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TwoFactorProviders) {
		return map[string]interface{}{}, false
	}
	return o.TwoFactorProviders, true
}

// SetTwoFactorProviders sets field value
func (o *ProvisioningApiAppInfo) SetTwoFactorProviders(v map[string]interface{}) {
	o.TwoFactorProviders = v
}

// GetTypes returns the Types field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetTypes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetTypesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Types) {
		return map[string]interface{}{}, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *ProvisioningApiAppInfo) SetTypes(v map[string]interface{}) {
	o.Types = v
}

// GetVersion returns the Version field value
func (o *ProvisioningApiAppInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiAppInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ProvisioningApiAppInfo) SetVersion(v string) {
	o.Version = v
}

// GetVersions returns the Versions field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetVersions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetVersionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Versions) {
		return map[string]interface{}{}, false
	}
	return o.Versions, true
}

// SetVersions sets field value
func (o *ProvisioningApiAppInfo) SetVersions(v map[string]interface{}) {
	o.Versions = v
}

// GetWebsite returns the Website field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProvisioningApiAppInfo) GetWebsite() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Website
}

// GetWebsiteOk returns a tuple with the Website field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiAppInfo) GetWebsiteOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Website) {
		return map[string]interface{}{}, false
	}
	return o.Website, true
}

// SetWebsite sets field value
func (o *ProvisioningApiAppInfo) SetWebsite(v map[string]interface{}) {
	o.Website = v
}

func (o ProvisioningApiAppInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiAppInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active.Get()
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	if o.Author != nil {
		toSerialize["author"] = o.Author
	}
	if o.BackgroundJobs != nil {
		toSerialize["background-jobs"] = o.BackgroundJobs
	}
	if o.Bugs != nil {
		toSerialize["bugs"] = o.Bugs
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Collaboration != nil {
		toSerialize["collaboration"] = o.Collaboration
	}
	if o.Commands != nil {
		toSerialize["commands"] = o.Commands
	}
	if o.DefaultEnable != nil {
		toSerialize["default_enable"] = o.DefaultEnable
	}
	if o.Dependencies != nil {
		toSerialize["dependencies"] = o.Dependencies
	}
	toSerialize["description"] = o.Description
	if o.Discussion != nil {
		toSerialize["discussion"] = o.Discussion
	}
	if o.Documentation != nil {
		toSerialize["documentation"] = o.Documentation
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	toSerialize["id"] = o.Id
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	toSerialize["internal"] = o.Internal.Get()
	toSerialize["level"] = o.Level.Get()
	if o.Licence != nil {
		toSerialize["licence"] = o.Licence
	}
	toSerialize["name"] = o.Name
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Navigations != nil {
		toSerialize["navigations"] = o.Navigations
	}
	if o.Preview != nil {
		toSerialize["preview"] = o.Preview
	}
	toSerialize["previewAsIcon"] = o.PreviewAsIcon.Get()
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.Remote != nil {
		toSerialize["remote"] = o.Remote
	}
	toSerialize["removable"] = o.Removable.Get()
	if o.RepairSteps != nil {
		toSerialize["repair-steps"] = o.RepairSteps
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Sabre != nil {
		toSerialize["sabre"] = o.Sabre
	}
	if o.Screenshot != nil {
		toSerialize["screenshot"] = o.Screenshot
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	toSerialize["summary"] = o.Summary
	if o.Trash != nil {
		toSerialize["trash"] = o.Trash
	}
	if o.TwoFactorProviders != nil {
		toSerialize["two-factor-providers"] = o.TwoFactorProviders
	}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	toSerialize["version"] = o.Version
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableProvisioningApiAppInfo struct {
	value *ProvisioningApiAppInfo
	isSet bool
}

func (v NullableProvisioningApiAppInfo) Get() *ProvisioningApiAppInfo {
	return v.value
}

func (v *NullableProvisioningApiAppInfo) Set(val *ProvisioningApiAppInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiAppInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiAppInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiAppInfo(val *ProvisioningApiAppInfo) *NullableProvisioningApiAppInfo {
	return &NullableProvisioningApiAppInfo{value: val, isSet: true}
}

func (v NullableProvisioningApiAppInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiAppInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


