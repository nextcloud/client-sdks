/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DavCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DavCapabilities{}

// DavCapabilities struct for DavCapabilities
type DavCapabilities struct {
	Dav CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav `json:"dav"`
}

// NewDavCapabilities instantiates a new DavCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDavCapabilities(dav CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav) *DavCapabilities {
	this := DavCapabilities{}
	this.Dav = dav
	return &this
}

// NewDavCapabilitiesWithDefaults instantiates a new DavCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDavCapabilitiesWithDefaults() *DavCapabilities {
	this := DavCapabilities{}
	return &this
}

// GetDav returns the Dav field value
func (o *DavCapabilities) GetDav() CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav {
	if o == nil {
		var ret CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav
		return ret
	}

	return o.Dav
}

// GetDavOk returns a tuple with the Dav field value
// and a boolean to check if the value has been set.
func (o *DavCapabilities) GetDavOk() (*CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dav, true
}

// SetDav sets field value
func (o *DavCapabilities) SetDav(v CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesDav) {
	o.Dav = v
}

func (o DavCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DavCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dav"] = o.Dav
	return toSerialize, nil
}

type NullableDavCapabilities struct {
	value *DavCapabilities
	isSet bool
}

func (v NullableDavCapabilities) Get() *DavCapabilities {
	return v.value
}

func (v *NullableDavCapabilities) Set(val *DavCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableDavCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableDavCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDavCapabilities(val *DavCapabilities) *NullableDavCapabilities {
	return &NullableDavCapabilities{value: val, isSet: true}
}

func (v NullableDavCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDavCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


