/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Oauth2OauthApiGetToken200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Oauth2OauthApiGetToken200Response{}

// Oauth2OauthApiGetToken200Response struct for Oauth2OauthApiGetToken200Response
type Oauth2OauthApiGetToken200Response struct {
	AccessToken string `json:"access_token"`
	TokenType string `json:"token_type"`
	ExpiresIn int64 `json:"expires_in"`
	RefreshToken string `json:"refresh_token"`
	UserId string `json:"user_id"`
}

// NewOauth2OauthApiGetToken200Response instantiates a new Oauth2OauthApiGetToken200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauth2OauthApiGetToken200Response(accessToken string, tokenType string, expiresIn int64, refreshToken string, userId string) *Oauth2OauthApiGetToken200Response {
	this := Oauth2OauthApiGetToken200Response{}
	this.AccessToken = accessToken
	this.TokenType = tokenType
	this.ExpiresIn = expiresIn
	this.RefreshToken = refreshToken
	this.UserId = userId
	return &this
}

// NewOauth2OauthApiGetToken200ResponseWithDefaults instantiates a new Oauth2OauthApiGetToken200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauth2OauthApiGetToken200ResponseWithDefaults() *Oauth2OauthApiGetToken200Response {
	this := Oauth2OauthApiGetToken200Response{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *Oauth2OauthApiGetToken200Response) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *Oauth2OauthApiGetToken200Response) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *Oauth2OauthApiGetToken200Response) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetTokenType returns the TokenType field value
func (o *Oauth2OauthApiGetToken200Response) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *Oauth2OauthApiGetToken200Response) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *Oauth2OauthApiGetToken200Response) SetTokenType(v string) {
	o.TokenType = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *Oauth2OauthApiGetToken200Response) GetExpiresIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *Oauth2OauthApiGetToken200Response) GetExpiresInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *Oauth2OauthApiGetToken200Response) SetExpiresIn(v int64) {
	o.ExpiresIn = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *Oauth2OauthApiGetToken200Response) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *Oauth2OauthApiGetToken200Response) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *Oauth2OauthApiGetToken200Response) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetUserId returns the UserId field value
func (o *Oauth2OauthApiGetToken200Response) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Oauth2OauthApiGetToken200Response) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Oauth2OauthApiGetToken200Response) SetUserId(v string) {
	o.UserId = v
}

func (o Oauth2OauthApiGetToken200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Oauth2OauthApiGetToken200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["token_type"] = o.TokenType
	toSerialize["expires_in"] = o.ExpiresIn
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

type NullableOauth2OauthApiGetToken200Response struct {
	value *Oauth2OauthApiGetToken200Response
	isSet bool
}

func (v NullableOauth2OauthApiGetToken200Response) Get() *Oauth2OauthApiGetToken200Response {
	return v.value
}

func (v *NullableOauth2OauthApiGetToken200Response) Set(val *Oauth2OauthApiGetToken200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOauth2OauthApiGetToken200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOauth2OauthApiGetToken200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauth2OauthApiGetToken200Response(val *Oauth2OauthApiGetToken200Response) *NullableOauth2OauthApiGetToken200Response {
	return &NullableOauth2OauthApiGetToken200Response{value: val, isSet: true}
}

func (v NullableOauth2OauthApiGetToken200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauth2OauthApiGetToken200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


