/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingLookup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingLookup{}

// FilesSharingLookup struct for FilesSharingLookup
type FilesSharingLookup struct {
	Value string `json:"value"`
	Verified int64 `json:"verified"`
}

// NewFilesSharingLookup instantiates a new FilesSharingLookup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingLookup(value string, verified int64) *FilesSharingLookup {
	this := FilesSharingLookup{}
	this.Value = value
	this.Verified = verified
	return &this
}

// NewFilesSharingLookupWithDefaults instantiates a new FilesSharingLookup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingLookupWithDefaults() *FilesSharingLookup {
	this := FilesSharingLookup{}
	return &this
}

// GetValue returns the Value field value
func (o *FilesSharingLookup) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FilesSharingLookup) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FilesSharingLookup) SetValue(v string) {
	o.Value = v
}

// GetVerified returns the Verified field value
func (o *FilesSharingLookup) GetVerified() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *FilesSharingLookup) GetVerifiedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *FilesSharingLookup) SetVerified(v int64) {
	o.Verified = v
}

func (o FilesSharingLookup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingLookup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	toSerialize["verified"] = o.Verified
	return toSerialize, nil
}

type NullableFilesSharingLookup struct {
	value *FilesSharingLookup
	isSet bool
}

func (v NullableFilesSharingLookup) Get() *FilesSharingLookup {
	return v.value
}

func (v *NullableFilesSharingLookup) Set(val *FilesSharingLookup) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingLookup) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingLookup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingLookup(val *FilesSharingLookup) *NullableFilesSharingLookup {
	return &NullableFilesSharingLookup{value: val, isSet: true}
}

func (v NullableFilesSharingLookup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingLookup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


