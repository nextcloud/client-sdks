/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingShareeCircle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeCircle{}

// FilesSharingShareeCircle struct for FilesSharingShareeCircle
type FilesSharingShareeCircle struct {
	Count NullableInt64 `json:"count"`
	Label string `json:"label"`
	ShareWithDescription string `json:"shareWithDescription"`
	Value FilesSharingShareeCircleAllOfValue `json:"value"`
}

// NewFilesSharingShareeCircle instantiates a new FilesSharingShareeCircle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeCircle(count NullableInt64, label string, shareWithDescription string, value FilesSharingShareeCircleAllOfValue) *FilesSharingShareeCircle {
	this := FilesSharingShareeCircle{}
	this.Count = count
	this.Label = label
	this.ShareWithDescription = shareWithDescription
	this.Value = value
	return &this
}

// NewFilesSharingShareeCircleWithDefaults instantiates a new FilesSharingShareeCircle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeCircleWithDefaults() *FilesSharingShareeCircle {
	this := FilesSharingShareeCircle{}
	return &this
}

// GetCount returns the Count field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *FilesSharingShareeCircle) GetCount() int64 {
	if o == nil || o.Count.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesSharingShareeCircle) GetCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// SetCount sets field value
func (o *FilesSharingShareeCircle) SetCount(v int64) {
	o.Count.Set(&v)
}

// GetLabel returns the Label field value
func (o *FilesSharingShareeCircle) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeCircle) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *FilesSharingShareeCircle) SetLabel(v string) {
	o.Label = v
}

// GetShareWithDescription returns the ShareWithDescription field value
func (o *FilesSharingShareeCircle) GetShareWithDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareWithDescription
}

// GetShareWithDescriptionOk returns a tuple with the ShareWithDescription field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeCircle) GetShareWithDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareWithDescription, true
}

// SetShareWithDescription sets field value
func (o *FilesSharingShareeCircle) SetShareWithDescription(v string) {
	o.ShareWithDescription = v
}

// GetValue returns the Value field value
func (o *FilesSharingShareeCircle) GetValue() FilesSharingShareeCircleAllOfValue {
	if o == nil {
		var ret FilesSharingShareeCircleAllOfValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeCircle) GetValueOk() (*FilesSharingShareeCircleAllOfValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FilesSharingShareeCircle) SetValue(v FilesSharingShareeCircleAllOfValue) {
	o.Value = v
}

func (o FilesSharingShareeCircle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeCircle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count.Get()
	toSerialize["label"] = o.Label
	toSerialize["shareWithDescription"] = o.ShareWithDescription
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableFilesSharingShareeCircle struct {
	value *FilesSharingShareeCircle
	isSet bool
}

func (v NullableFilesSharingShareeCircle) Get() *FilesSharingShareeCircle {
	return v.value
}

func (v *NullableFilesSharingShareeCircle) Set(val *FilesSharingShareeCircle) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeCircle) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeCircle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeCircle(val *FilesSharingShareeCircle) *NullableFilesSharingShareeCircle {
	return &NullableFilesSharingShareeCircle{value: val, isSet: true}
}

func (v NullableFilesSharingShareeCircle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeCircle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


