/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingShareeRemoteGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeRemoteGroup{}

// FilesSharingShareeRemoteGroup struct for FilesSharingShareeRemoteGroup
type FilesSharingShareeRemoteGroup struct {
	Count NullableInt64 `json:"count"`
	Label string `json:"label"`
	Guid string `json:"guid"`
	Name string `json:"name"`
	Value FilesSharingShareeRemoteAllOfValue `json:"value"`
}

// NewFilesSharingShareeRemoteGroup instantiates a new FilesSharingShareeRemoteGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeRemoteGroup(count NullableInt64, label string, guid string, name string, value FilesSharingShareeRemoteAllOfValue) *FilesSharingShareeRemoteGroup {
	this := FilesSharingShareeRemoteGroup{}
	this.Count = count
	this.Label = label
	this.Guid = guid
	this.Name = name
	this.Value = value
	return &this
}

// NewFilesSharingShareeRemoteGroupWithDefaults instantiates a new FilesSharingShareeRemoteGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeRemoteGroupWithDefaults() *FilesSharingShareeRemoteGroup {
	this := FilesSharingShareeRemoteGroup{}
	return &this
}

// GetCount returns the Count field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *FilesSharingShareeRemoteGroup) GetCount() int64 {
	if o == nil || o.Count.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesSharingShareeRemoteGroup) GetCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// SetCount sets field value
func (o *FilesSharingShareeRemoteGroup) SetCount(v int64) {
	o.Count.Set(&v)
}

// GetLabel returns the Label field value
func (o *FilesSharingShareeRemoteGroup) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteGroup) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *FilesSharingShareeRemoteGroup) SetLabel(v string) {
	o.Label = v
}

// GetGuid returns the Guid field value
func (o *FilesSharingShareeRemoteGroup) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteGroup) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *FilesSharingShareeRemoteGroup) SetGuid(v string) {
	o.Guid = v
}

// GetName returns the Name field value
func (o *FilesSharingShareeRemoteGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FilesSharingShareeRemoteGroup) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *FilesSharingShareeRemoteGroup) GetValue() FilesSharingShareeRemoteAllOfValue {
	if o == nil {
		var ret FilesSharingShareeRemoteAllOfValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteGroup) GetValueOk() (*FilesSharingShareeRemoteAllOfValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FilesSharingShareeRemoteGroup) SetValue(v FilesSharingShareeRemoteAllOfValue) {
	o.Value = v
}

func (o FilesSharingShareeRemoteGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeRemoteGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count.Get()
	toSerialize["label"] = o.Label
	toSerialize["guid"] = o.Guid
	toSerialize["name"] = o.Name
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableFilesSharingShareeRemoteGroup struct {
	value *FilesSharingShareeRemoteGroup
	isSet bool
}

func (v NullableFilesSharingShareeRemoteGroup) Get() *FilesSharingShareeRemoteGroup {
	return v.value
}

func (v *NullableFilesSharingShareeRemoteGroup) Set(val *FilesSharingShareeRemoteGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeRemoteGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeRemoteGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeRemoteGroup(val *FilesSharingShareeRemoteGroup) *NullableFilesSharingShareeRemoteGroup {
	return &NullableFilesSharingShareeRemoteGroup{value: val, isSet: true}
}

func (v NullableFilesSharingShareeRemoteGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeRemoteGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


