/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WeatherStatusForecastDataNext6HoursDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecastDataNext6HoursDetails{}

// WeatherStatusForecastDataNext6HoursDetails struct for WeatherStatusForecastDataNext6HoursDetails
type WeatherStatusForecastDataNext6HoursDetails struct {
	AirTemperatureMax float32 `json:"air_temperature_max"`
	AirTemperatureMin float32 `json:"air_temperature_min"`
	PrecipitationAmount float32 `json:"precipitation_amount"`
	PrecipitationAmountMax float32 `json:"precipitation_amount_max"`
	PrecipitationAmountMin float32 `json:"precipitation_amount_min"`
	ProbabilityOfPrecipitation float32 `json:"probability_of_precipitation"`
}

// NewWeatherStatusForecastDataNext6HoursDetails instantiates a new WeatherStatusForecastDataNext6HoursDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecastDataNext6HoursDetails(airTemperatureMax float32, airTemperatureMin float32, precipitationAmount float32, precipitationAmountMax float32, precipitationAmountMin float32, probabilityOfPrecipitation float32) *WeatherStatusForecastDataNext6HoursDetails {
	this := WeatherStatusForecastDataNext6HoursDetails{}
	this.AirTemperatureMax = airTemperatureMax
	this.AirTemperatureMin = airTemperatureMin
	this.PrecipitationAmount = precipitationAmount
	this.PrecipitationAmountMax = precipitationAmountMax
	this.PrecipitationAmountMin = precipitationAmountMin
	this.ProbabilityOfPrecipitation = probabilityOfPrecipitation
	return &this
}

// NewWeatherStatusForecastDataNext6HoursDetailsWithDefaults instantiates a new WeatherStatusForecastDataNext6HoursDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastDataNext6HoursDetailsWithDefaults() *WeatherStatusForecastDataNext6HoursDetails {
	this := WeatherStatusForecastDataNext6HoursDetails{}
	return &this
}

// GetAirTemperatureMax returns the AirTemperatureMax field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetAirTemperatureMax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AirTemperatureMax
}

// GetAirTemperatureMaxOk returns a tuple with the AirTemperatureMax field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetAirTemperatureMaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AirTemperatureMax, true
}

// SetAirTemperatureMax sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetAirTemperatureMax(v float32) {
	o.AirTemperatureMax = v
}

// GetAirTemperatureMin returns the AirTemperatureMin field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetAirTemperatureMin() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AirTemperatureMin
}

// GetAirTemperatureMinOk returns a tuple with the AirTemperatureMin field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetAirTemperatureMinOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AirTemperatureMin, true
}

// SetAirTemperatureMin sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetAirTemperatureMin(v float32) {
	o.AirTemperatureMin = v
}

// GetPrecipitationAmount returns the PrecipitationAmount field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PrecipitationAmount
}

// GetPrecipitationAmountOk returns a tuple with the PrecipitationAmount field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrecipitationAmount, true
}

// SetPrecipitationAmount sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetPrecipitationAmount(v float32) {
	o.PrecipitationAmount = v
}

// GetPrecipitationAmountMax returns the PrecipitationAmountMax field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmountMax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PrecipitationAmountMax
}

// GetPrecipitationAmountMaxOk returns a tuple with the PrecipitationAmountMax field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmountMaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrecipitationAmountMax, true
}

// SetPrecipitationAmountMax sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetPrecipitationAmountMax(v float32) {
	o.PrecipitationAmountMax = v
}

// GetPrecipitationAmountMin returns the PrecipitationAmountMin field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmountMin() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PrecipitationAmountMin
}

// GetPrecipitationAmountMinOk returns a tuple with the PrecipitationAmountMin field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetPrecipitationAmountMinOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrecipitationAmountMin, true
}

// SetPrecipitationAmountMin sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetPrecipitationAmountMin(v float32) {
	o.PrecipitationAmountMin = v
}

// GetProbabilityOfPrecipitation returns the ProbabilityOfPrecipitation field value
func (o *WeatherStatusForecastDataNext6HoursDetails) GetProbabilityOfPrecipitation() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProbabilityOfPrecipitation
}

// GetProbabilityOfPrecipitationOk returns a tuple with the ProbabilityOfPrecipitation field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext6HoursDetails) GetProbabilityOfPrecipitationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProbabilityOfPrecipitation, true
}

// SetProbabilityOfPrecipitation sets field value
func (o *WeatherStatusForecastDataNext6HoursDetails) SetProbabilityOfPrecipitation(v float32) {
	o.ProbabilityOfPrecipitation = v
}

func (o WeatherStatusForecastDataNext6HoursDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecastDataNext6HoursDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["air_temperature_max"] = o.AirTemperatureMax
	toSerialize["air_temperature_min"] = o.AirTemperatureMin
	toSerialize["precipitation_amount"] = o.PrecipitationAmount
	toSerialize["precipitation_amount_max"] = o.PrecipitationAmountMax
	toSerialize["precipitation_amount_min"] = o.PrecipitationAmountMin
	toSerialize["probability_of_precipitation"] = o.ProbabilityOfPrecipitation
	return toSerialize, nil
}

type NullableWeatherStatusForecastDataNext6HoursDetails struct {
	value *WeatherStatusForecastDataNext6HoursDetails
	isSet bool
}

func (v NullableWeatherStatusForecastDataNext6HoursDetails) Get() *WeatherStatusForecastDataNext6HoursDetails {
	return v.value
}

func (v *NullableWeatherStatusForecastDataNext6HoursDetails) Set(val *WeatherStatusForecastDataNext6HoursDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecastDataNext6HoursDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecastDataNext6HoursDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecastDataNext6HoursDetails(val *WeatherStatusForecastDataNext6HoursDetails) *NullableWeatherStatusForecastDataNext6HoursDetails {
	return &NullableWeatherStatusForecastDataNext6HoursDetails{value: val, isSet: true}
}

func (v NullableWeatherStatusForecastDataNext6HoursDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecastDataNext6HoursDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


