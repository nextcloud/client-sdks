/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CoreAutocompleteResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreAutocompleteResult{}

// CoreAutocompleteResult struct for CoreAutocompleteResult
type CoreAutocompleteResult struct {
	Id string `json:"id"`
	Label string `json:"label"`
	Icon string `json:"icon"`
	Source string `json:"source"`
	Status string `json:"status"`
	Subline string `json:"subline"`
	ShareWithDisplayNameUnique string `json:"shareWithDisplayNameUnique"`
}

// NewCoreAutocompleteResult instantiates a new CoreAutocompleteResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreAutocompleteResult(id string, label string, icon string, source string, status string, subline string, shareWithDisplayNameUnique string) *CoreAutocompleteResult {
	this := CoreAutocompleteResult{}
	this.Id = id
	this.Label = label
	this.Icon = icon
	this.Source = source
	this.Status = status
	this.Subline = subline
	this.ShareWithDisplayNameUnique = shareWithDisplayNameUnique
	return &this
}

// NewCoreAutocompleteResultWithDefaults instantiates a new CoreAutocompleteResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreAutocompleteResultWithDefaults() *CoreAutocompleteResult {
	this := CoreAutocompleteResult{}
	return &this
}

// GetId returns the Id field value
func (o *CoreAutocompleteResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CoreAutocompleteResult) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *CoreAutocompleteResult) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CoreAutocompleteResult) SetLabel(v string) {
	o.Label = v
}

// GetIcon returns the Icon field value
func (o *CoreAutocompleteResult) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *CoreAutocompleteResult) SetIcon(v string) {
	o.Icon = v
}

// GetSource returns the Source field value
func (o *CoreAutocompleteResult) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *CoreAutocompleteResult) SetSource(v string) {
	o.Source = v
}

// GetStatus returns the Status field value
func (o *CoreAutocompleteResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CoreAutocompleteResult) SetStatus(v string) {
	o.Status = v
}

// GetSubline returns the Subline field value
func (o *CoreAutocompleteResult) GetSubline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subline
}

// GetSublineOk returns a tuple with the Subline field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetSublineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subline, true
}

// SetSubline sets field value
func (o *CoreAutocompleteResult) SetSubline(v string) {
	o.Subline = v
}

// GetShareWithDisplayNameUnique returns the ShareWithDisplayNameUnique field value
func (o *CoreAutocompleteResult) GetShareWithDisplayNameUnique() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareWithDisplayNameUnique
}

// GetShareWithDisplayNameUniqueOk returns a tuple with the ShareWithDisplayNameUnique field value
// and a boolean to check if the value has been set.
func (o *CoreAutocompleteResult) GetShareWithDisplayNameUniqueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareWithDisplayNameUnique, true
}

// SetShareWithDisplayNameUnique sets field value
func (o *CoreAutocompleteResult) SetShareWithDisplayNameUnique(v string) {
	o.ShareWithDisplayNameUnique = v
}

func (o CoreAutocompleteResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreAutocompleteResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["icon"] = o.Icon
	toSerialize["source"] = o.Source
	toSerialize["status"] = o.Status
	toSerialize["subline"] = o.Subline
	toSerialize["shareWithDisplayNameUnique"] = o.ShareWithDisplayNameUnique
	return toSerialize, nil
}

type NullableCoreAutocompleteResult struct {
	value *CoreAutocompleteResult
	isSet bool
}

func (v NullableCoreAutocompleteResult) Get() *CoreAutocompleteResult {
	return v.value
}

func (v *NullableCoreAutocompleteResult) Set(val *CoreAutocompleteResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreAutocompleteResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreAutocompleteResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreAutocompleteResult(val *CoreAutocompleteResult) *NullableCoreAutocompleteResult {
	return &NullableCoreAutocompleteResult{value: val, isSet: true}
}

func (v NullableCoreAutocompleteResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreAutocompleteResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


