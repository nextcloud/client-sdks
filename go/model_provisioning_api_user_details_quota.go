/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProvisioningApiUserDetailsQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiUserDetailsQuota{}

// ProvisioningApiUserDetailsQuota struct for ProvisioningApiUserDetailsQuota
type ProvisioningApiUserDetailsQuota struct {
	Free NullableInt64 `json:"free"`
	Quota ProvisioningApiUserDetailsQuotaQuota `json:"quota"`
	Relative NullableFloat32 `json:"relative"`
	Total NullableInt64 `json:"total"`
	Used int64 `json:"used"`
}

// NewProvisioningApiUserDetailsQuota instantiates a new ProvisioningApiUserDetailsQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiUserDetailsQuota(free NullableInt64, quota ProvisioningApiUserDetailsQuotaQuota, relative NullableFloat32, total NullableInt64, used int64) *ProvisioningApiUserDetailsQuota {
	this := ProvisioningApiUserDetailsQuota{}
	this.Free = free
	this.Quota = quota
	this.Relative = relative
	this.Total = total
	this.Used = used
	return &this
}

// NewProvisioningApiUserDetailsQuotaWithDefaults instantiates a new ProvisioningApiUserDetailsQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiUserDetailsQuotaWithDefaults() *ProvisioningApiUserDetailsQuota {
	this := ProvisioningApiUserDetailsQuota{}
	return &this
}

// GetFree returns the Free field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ProvisioningApiUserDetailsQuota) GetFree() int64 {
	if o == nil || o.Free.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Free.Get()
}

// GetFreeOk returns a tuple with the Free field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiUserDetailsQuota) GetFreeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Free.Get(), o.Free.IsSet()
}

// SetFree sets field value
func (o *ProvisioningApiUserDetailsQuota) SetFree(v int64) {
	o.Free.Set(&v)
}

// GetQuota returns the Quota field value
func (o *ProvisioningApiUserDetailsQuota) GetQuota() ProvisioningApiUserDetailsQuotaQuota {
	if o == nil {
		var ret ProvisioningApiUserDetailsQuotaQuota
		return ret
	}

	return o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetailsQuota) GetQuotaOk() (*ProvisioningApiUserDetailsQuotaQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quota, true
}

// SetQuota sets field value
func (o *ProvisioningApiUserDetailsQuota) SetQuota(v ProvisioningApiUserDetailsQuotaQuota) {
	o.Quota = v
}

// GetRelative returns the Relative field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *ProvisioningApiUserDetailsQuota) GetRelative() float32 {
	if o == nil || o.Relative.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Relative.Get()
}

// GetRelativeOk returns a tuple with the Relative field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiUserDetailsQuota) GetRelativeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Relative.Get(), o.Relative.IsSet()
}

// SetRelative sets field value
func (o *ProvisioningApiUserDetailsQuota) SetRelative(v float32) {
	o.Relative.Set(&v)
}

// GetTotal returns the Total field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ProvisioningApiUserDetailsQuota) GetTotal() int64 {
	if o == nil || o.Total.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiUserDetailsQuota) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// SetTotal sets field value
func (o *ProvisioningApiUserDetailsQuota) SetTotal(v int64) {
	o.Total.Set(&v)
}

// GetUsed returns the Used field value
func (o *ProvisioningApiUserDetailsQuota) GetUsed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Used
}

// GetUsedOk returns a tuple with the Used field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetailsQuota) GetUsedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Used, true
}

// SetUsed sets field value
func (o *ProvisioningApiUserDetailsQuota) SetUsed(v int64) {
	o.Used = v
}

func (o ProvisioningApiUserDetailsQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiUserDetailsQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["free"] = o.Free.Get()
	toSerialize["quota"] = o.Quota
	toSerialize["relative"] = o.Relative.Get()
	toSerialize["total"] = o.Total.Get()
	toSerialize["used"] = o.Used
	return toSerialize, nil
}

type NullableProvisioningApiUserDetailsQuota struct {
	value *ProvisioningApiUserDetailsQuota
	isSet bool
}

func (v NullableProvisioningApiUserDetailsQuota) Get() *ProvisioningApiUserDetailsQuota {
	return v.value
}

func (v *NullableProvisioningApiUserDetailsQuota) Set(val *ProvisioningApiUserDetailsQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiUserDetailsQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiUserDetailsQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiUserDetailsQuota(val *ProvisioningApiUserDetailsQuota) *NullableProvisioningApiUserDetailsQuota {
	return &NullableProvisioningApiUserDetailsQuota{value: val, isSet: true}
}

func (v NullableProvisioningApiUserDetailsQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiUserDetailsQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


