/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingShareeUserAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeUserAllOf{}

// FilesSharingShareeUserAllOf struct for FilesSharingShareeUserAllOf
type FilesSharingShareeUserAllOf struct {
	Subline string `json:"subline"`
	Icon string `json:"icon"`
	ShareWithDisplayNameUnique string `json:"shareWithDisplayNameUnique"`
	Status FilesSharingShareeUserAllOfStatus `json:"status"`
	Value FilesSharingShareeValue `json:"value"`
}

// NewFilesSharingShareeUserAllOf instantiates a new FilesSharingShareeUserAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeUserAllOf(subline string, icon string, shareWithDisplayNameUnique string, status FilesSharingShareeUserAllOfStatus, value FilesSharingShareeValue) *FilesSharingShareeUserAllOf {
	this := FilesSharingShareeUserAllOf{}
	this.Subline = subline
	this.Icon = icon
	this.ShareWithDisplayNameUnique = shareWithDisplayNameUnique
	this.Status = status
	this.Value = value
	return &this
}

// NewFilesSharingShareeUserAllOfWithDefaults instantiates a new FilesSharingShareeUserAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeUserAllOfWithDefaults() *FilesSharingShareeUserAllOf {
	this := FilesSharingShareeUserAllOf{}
	return &this
}

// GetSubline returns the Subline field value
func (o *FilesSharingShareeUserAllOf) GetSubline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subline
}

// GetSublineOk returns a tuple with the Subline field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOf) GetSublineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subline, true
}

// SetSubline sets field value
func (o *FilesSharingShareeUserAllOf) SetSubline(v string) {
	o.Subline = v
}

// GetIcon returns the Icon field value
func (o *FilesSharingShareeUserAllOf) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOf) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *FilesSharingShareeUserAllOf) SetIcon(v string) {
	o.Icon = v
}

// GetShareWithDisplayNameUnique returns the ShareWithDisplayNameUnique field value
func (o *FilesSharingShareeUserAllOf) GetShareWithDisplayNameUnique() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareWithDisplayNameUnique
}

// GetShareWithDisplayNameUniqueOk returns a tuple with the ShareWithDisplayNameUnique field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOf) GetShareWithDisplayNameUniqueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareWithDisplayNameUnique, true
}

// SetShareWithDisplayNameUnique sets field value
func (o *FilesSharingShareeUserAllOf) SetShareWithDisplayNameUnique(v string) {
	o.ShareWithDisplayNameUnique = v
}

// GetStatus returns the Status field value
func (o *FilesSharingShareeUserAllOf) GetStatus() FilesSharingShareeUserAllOfStatus {
	if o == nil {
		var ret FilesSharingShareeUserAllOfStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOf) GetStatusOk() (*FilesSharingShareeUserAllOfStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FilesSharingShareeUserAllOf) SetStatus(v FilesSharingShareeUserAllOfStatus) {
	o.Status = v
}

// GetValue returns the Value field value
func (o *FilesSharingShareeUserAllOf) GetValue() FilesSharingShareeValue {
	if o == nil {
		var ret FilesSharingShareeValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOf) GetValueOk() (*FilesSharingShareeValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FilesSharingShareeUserAllOf) SetValue(v FilesSharingShareeValue) {
	o.Value = v
}

func (o FilesSharingShareeUserAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeUserAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subline"] = o.Subline
	toSerialize["icon"] = o.Icon
	toSerialize["shareWithDisplayNameUnique"] = o.ShareWithDisplayNameUnique
	toSerialize["status"] = o.Status
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableFilesSharingShareeUserAllOf struct {
	value *FilesSharingShareeUserAllOf
	isSet bool
}

func (v NullableFilesSharingShareeUserAllOf) Get() *FilesSharingShareeUserAllOf {
	return v.value
}

func (v *NullableFilesSharingShareeUserAllOf) Set(val *FilesSharingShareeUserAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeUserAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeUserAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeUserAllOf(val *FilesSharingShareeUserAllOf) *NullableFilesSharingShareeUserAllOf {
	return &NullableFilesSharingShareeUserAllOf{value: val, isSet: true}
}

func (v NullableFilesSharingShareeUserAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeUserAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


