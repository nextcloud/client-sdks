/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserStatusPredefined type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserStatusPredefined{}

// UserStatusPredefined struct for UserStatusPredefined
type UserStatusPredefined struct {
	Id string `json:"id"`
	Icon string `json:"icon"`
	Message string `json:"message"`
	ClearAt UserStatusClearAt `json:"clearAt"`
	Visible NullableBool `json:"visible"`
}

// NewUserStatusPredefined instantiates a new UserStatusPredefined object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserStatusPredefined(id string, icon string, message string, clearAt UserStatusClearAt, visible NullableBool) *UserStatusPredefined {
	this := UserStatusPredefined{}
	this.Id = id
	this.Icon = icon
	this.Message = message
	this.ClearAt = clearAt
	this.Visible = visible
	return &this
}

// NewUserStatusPredefinedWithDefaults instantiates a new UserStatusPredefined object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserStatusPredefinedWithDefaults() *UserStatusPredefined {
	this := UserStatusPredefined{}
	return &this
}

// GetId returns the Id field value
func (o *UserStatusPredefined) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserStatusPredefined) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserStatusPredefined) SetId(v string) {
	o.Id = v
}

// GetIcon returns the Icon field value
func (o *UserStatusPredefined) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *UserStatusPredefined) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *UserStatusPredefined) SetIcon(v string) {
	o.Icon = v
}

// GetMessage returns the Message field value
func (o *UserStatusPredefined) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UserStatusPredefined) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *UserStatusPredefined) SetMessage(v string) {
	o.Message = v
}

// GetClearAt returns the ClearAt field value
func (o *UserStatusPredefined) GetClearAt() UserStatusClearAt {
	if o == nil {
		var ret UserStatusClearAt
		return ret
	}

	return o.ClearAt
}

// GetClearAtOk returns a tuple with the ClearAt field value
// and a boolean to check if the value has been set.
func (o *UserStatusPredefined) GetClearAtOk() (*UserStatusClearAt, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClearAt, true
}

// SetClearAt sets field value
func (o *UserStatusPredefined) SetClearAt(v UserStatusClearAt) {
	o.ClearAt = v
}

// GetVisible returns the Visible field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *UserStatusPredefined) GetVisible() bool {
	if o == nil || o.Visible.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Visible.Get()
}

// GetVisibleOk returns a tuple with the Visible field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserStatusPredefined) GetVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Visible.Get(), o.Visible.IsSet()
}

// SetVisible sets field value
func (o *UserStatusPredefined) SetVisible(v bool) {
	o.Visible.Set(&v)
}

func (o UserStatusPredefined) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserStatusPredefined) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["icon"] = o.Icon
	toSerialize["message"] = o.Message
	toSerialize["clearAt"] = o.ClearAt
	toSerialize["visible"] = o.Visible.Get()
	return toSerialize, nil
}

type NullableUserStatusPredefined struct {
	value *UserStatusPredefined
	isSet bool
}

func (v NullableUserStatusPredefined) Get() *UserStatusPredefined {
	return v.value
}

func (v *NullableUserStatusPredefined) Set(val *UserStatusPredefined) {
	v.value = val
	v.isSet = true
}

func (v NullableUserStatusPredefined) IsSet() bool {
	return v.isSet
}

func (v *NullableUserStatusPredefined) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserStatusPredefined(val *UserStatusPredefined) *NullableUserStatusPredefined {
	return &NullableUserStatusPredefined{value: val, isSet: true}
}

func (v NullableUserStatusPredefined) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserStatusPredefined) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


