/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CoreTranslationApiLanguages200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTranslationApiLanguages200ResponseOcsData{}

// CoreTranslationApiLanguages200ResponseOcsData struct for CoreTranslationApiLanguages200ResponseOcsData
type CoreTranslationApiLanguages200ResponseOcsData struct {
	Languages []CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner `json:"languages"`
	LanguageDetection bool `json:"languageDetection"`
}

// NewCoreTranslationApiLanguages200ResponseOcsData instantiates a new CoreTranslationApiLanguages200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTranslationApiLanguages200ResponseOcsData(languages []CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner, languageDetection bool) *CoreTranslationApiLanguages200ResponseOcsData {
	this := CoreTranslationApiLanguages200ResponseOcsData{}
	this.Languages = languages
	this.LanguageDetection = languageDetection
	return &this
}

// NewCoreTranslationApiLanguages200ResponseOcsDataWithDefaults instantiates a new CoreTranslationApiLanguages200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTranslationApiLanguages200ResponseOcsDataWithDefaults() *CoreTranslationApiLanguages200ResponseOcsData {
	this := CoreTranslationApiLanguages200ResponseOcsData{}
	return &this
}

// GetLanguages returns the Languages field value
func (o *CoreTranslationApiLanguages200ResponseOcsData) GetLanguages() []CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner {
	if o == nil {
		var ret []CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner
		return ret
	}

	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value
// and a boolean to check if the value has been set.
func (o *CoreTranslationApiLanguages200ResponseOcsData) GetLanguagesOk() ([]CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Languages, true
}

// SetLanguages sets field value
func (o *CoreTranslationApiLanguages200ResponseOcsData) SetLanguages(v []CoreTranslationApiLanguages200ResponseOcsDataLanguagesInner) {
	o.Languages = v
}

// GetLanguageDetection returns the LanguageDetection field value
func (o *CoreTranslationApiLanguages200ResponseOcsData) GetLanguageDetection() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LanguageDetection
}

// GetLanguageDetectionOk returns a tuple with the LanguageDetection field value
// and a boolean to check if the value has been set.
func (o *CoreTranslationApiLanguages200ResponseOcsData) GetLanguageDetectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LanguageDetection, true
}

// SetLanguageDetection sets field value
func (o *CoreTranslationApiLanguages200ResponseOcsData) SetLanguageDetection(v bool) {
	o.LanguageDetection = v
}

func (o CoreTranslationApiLanguages200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTranslationApiLanguages200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["languages"] = o.Languages
	toSerialize["languageDetection"] = o.LanguageDetection
	return toSerialize, nil
}

type NullableCoreTranslationApiLanguages200ResponseOcsData struct {
	value *CoreTranslationApiLanguages200ResponseOcsData
	isSet bool
}

func (v NullableCoreTranslationApiLanguages200ResponseOcsData) Get() *CoreTranslationApiLanguages200ResponseOcsData {
	return v.value
}

func (v *NullableCoreTranslationApiLanguages200ResponseOcsData) Set(val *CoreTranslationApiLanguages200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTranslationApiLanguages200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTranslationApiLanguages200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTranslationApiLanguages200ResponseOcsData(val *CoreTranslationApiLanguages200ResponseOcsData) *NullableCoreTranslationApiLanguages200ResponseOcsData {
	return &NullableCoreTranslationApiLanguages200ResponseOcsData{value: val, isSet: true}
}

func (v NullableCoreTranslationApiLanguages200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTranslationApiLanguages200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


