/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate{}

// CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate struct for CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate
type CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate struct {
	Enabled bool `json:"enabled"`
	Days *int64 `json:"days,omitempty"`
	Enforced *bool `json:"enforced,omitempty"`
}

// NewCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate instantiates a new CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate(enabled bool) *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate {
	this := CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate{}
	this.Enabled = enabled
	return &this
}

// NewCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDateWithDefaults instantiates a new CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDateWithDefaults() *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate {
	this := CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetDays() int64 {
	if o == nil || IsNil(o.Days) {
		var ret int64
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int64 and assigns it to the Days field.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) SetDays(v int64) {
	o.Days = &v
}

// GetEnforced returns the Enforced field value if set, zero value otherwise.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetEnforced() bool {
	if o == nil || IsNil(o.Enforced) {
		var ret bool
		return ret
	}
	return *o.Enforced
}

// GetEnforcedOk returns a tuple with the Enforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) GetEnforcedOk() (*bool, bool) {
	if o == nil || IsNil(o.Enforced) {
		return nil, false
	}
	return o.Enforced, true
}

// HasEnforced returns a boolean if a field has been set.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) HasEnforced() bool {
	if o != nil && !IsNil(o.Enforced) {
		return true
	}

	return false
}

// SetEnforced gets a reference to the given bool and assigns it to the Enforced field.
func (o *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) SetEnforced(v bool) {
	o.Enforced = &v
}

func (o CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Enforced) {
		toSerialize["enforced"] = o.Enforced
	}
	return toSerialize, nil
}

type NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate struct {
	value *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate
	isSet bool
}

func (v NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) Get() *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate {
	return v.value
}

func (v *NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) Set(val *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate(val *CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) *NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate {
	return &NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate{value: val, isSet: true}
}

func (v NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharingPublicExpireDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


