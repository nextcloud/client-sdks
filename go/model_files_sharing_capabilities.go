/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingCapabilities{}

// FilesSharingCapabilities struct for FilesSharingCapabilities
type FilesSharingCapabilities struct {
	FilesSharing CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing `json:"files_sharing"`
}

// NewFilesSharingCapabilities instantiates a new FilesSharingCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingCapabilities(filesSharing CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing) *FilesSharingCapabilities {
	this := FilesSharingCapabilities{}
	this.FilesSharing = filesSharing
	return &this
}

// NewFilesSharingCapabilitiesWithDefaults instantiates a new FilesSharingCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingCapabilitiesWithDefaults() *FilesSharingCapabilities {
	this := FilesSharingCapabilities{}
	return &this
}

// GetFilesSharing returns the FilesSharing field value
func (o *FilesSharingCapabilities) GetFilesSharing() CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing {
	if o == nil {
		var ret CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing
		return ret
	}

	return o.FilesSharing
}

// GetFilesSharingOk returns a tuple with the FilesSharing field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilities) GetFilesSharingOk() (*CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesSharing, true
}

// SetFilesSharing sets field value
func (o *FilesSharingCapabilities) SetFilesSharing(v CoreOcsGetCapabilities200ResponseOcsDataCapabilitiesFilesSharing) {
	o.FilesSharing = v
}

func (o FilesSharingCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files_sharing"] = o.FilesSharing
	return toSerialize, nil
}

type NullableFilesSharingCapabilities struct {
	value *FilesSharingCapabilities
	isSet bool
}

func (v NullableFilesSharingCapabilities) Get() *FilesSharingCapabilities {
	return v.value
}

func (v *NullableFilesSharingCapabilities) Set(val *FilesSharingCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingCapabilities(val *FilesSharingCapabilities) *NullableFilesSharingCapabilities {
	return &NullableFilesSharingCapabilities{value: val, isSet: true}
}

func (v NullableFilesSharingCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


