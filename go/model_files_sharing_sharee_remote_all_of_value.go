/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FilesSharingShareeRemoteAllOfValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeRemoteAllOfValue{}

// FilesSharingShareeRemoteAllOfValue struct for FilesSharingShareeRemoteAllOfValue
type FilesSharingShareeRemoteAllOfValue struct {
	ShareType int64 `json:"shareType"`
	ShareWith string `json:"shareWith"`
	Server string `json:"server"`
}

// NewFilesSharingShareeRemoteAllOfValue instantiates a new FilesSharingShareeRemoteAllOfValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeRemoteAllOfValue(shareType int64, shareWith string, server string) *FilesSharingShareeRemoteAllOfValue {
	this := FilesSharingShareeRemoteAllOfValue{}
	this.ShareType = shareType
	this.ShareWith = shareWith
	this.Server = server
	return &this
}

// NewFilesSharingShareeRemoteAllOfValueWithDefaults instantiates a new FilesSharingShareeRemoteAllOfValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeRemoteAllOfValueWithDefaults() *FilesSharingShareeRemoteAllOfValue {
	this := FilesSharingShareeRemoteAllOfValue{}
	return &this
}

// GetShareType returns the ShareType field value
func (o *FilesSharingShareeRemoteAllOfValue) GetShareType() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShareType
}

// GetShareTypeOk returns a tuple with the ShareType field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteAllOfValue) GetShareTypeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareType, true
}

// SetShareType sets field value
func (o *FilesSharingShareeRemoteAllOfValue) SetShareType(v int64) {
	o.ShareType = v
}

// GetShareWith returns the ShareWith field value
func (o *FilesSharingShareeRemoteAllOfValue) GetShareWith() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareWith
}

// GetShareWithOk returns a tuple with the ShareWith field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteAllOfValue) GetShareWithOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareWith, true
}

// SetShareWith sets field value
func (o *FilesSharingShareeRemoteAllOfValue) SetShareWith(v string) {
	o.ShareWith = v
}

// GetServer returns the Server field value
func (o *FilesSharingShareeRemoteAllOfValue) GetServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeRemoteAllOfValue) GetServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *FilesSharingShareeRemoteAllOfValue) SetServer(v string) {
	o.Server = v
}

func (o FilesSharingShareeRemoteAllOfValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeRemoteAllOfValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shareType"] = o.ShareType
	toSerialize["shareWith"] = o.ShareWith
	toSerialize["server"] = o.Server
	return toSerialize, nil
}

type NullableFilesSharingShareeRemoteAllOfValue struct {
	value *FilesSharingShareeRemoteAllOfValue
	isSet bool
}

func (v NullableFilesSharingShareeRemoteAllOfValue) Get() *FilesSharingShareeRemoteAllOfValue {
	return v.value
}

func (v *NullableFilesSharingShareeRemoteAllOfValue) Set(val *FilesSharingShareeRemoteAllOfValue) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeRemoteAllOfValue) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeRemoteAllOfValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeRemoteAllOfValue(val *FilesSharingShareeRemoteAllOfValue) *NullableFilesSharingShareeRemoteAllOfValue {
	return &NullableFilesSharingShareeRemoteAllOfValue{value: val, isSet: true}
}

func (v NullableFilesSharingShareeRemoteAllOfValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeRemoteAllOfValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


