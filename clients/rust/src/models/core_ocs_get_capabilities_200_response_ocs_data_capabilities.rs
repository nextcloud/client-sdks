/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreOcsGetCapabilities200ResponseOcsDataCapabilities {
    #[serde(rename = "files")]
    pub files: Box<crate::models::FilesVersionsCapabilitiesFiles>,
    #[serde(rename = "dav")]
    pub dav: Box<crate::models::DavCapabilitiesDav>,
    #[serde(rename = "files_sharing")]
    pub files_sharing: Box<crate::models::SharebymailCapabilitiesFilesSharing>,
    #[serde(rename = "provisioning_api")]
    pub provisioning_api: Box<crate::models::ProvisioningApiCapabilitiesProvisioningApi>,
    #[serde(rename = "theming")]
    pub theming: Box<crate::models::ThemingPublicCapabilitiesTheming>,
    #[serde(rename = "user_status")]
    pub user_status: Box<crate::models::UserStatusCapabilitiesUserStatus>,
    #[serde(rename = "weather_status")]
    pub weather_status: Box<crate::models::FilesSharingCapabilitiesFilesSharingUserExpireDate>,
}

impl CoreOcsGetCapabilities200ResponseOcsDataCapabilities {
    pub fn new(files: crate::models::FilesVersionsCapabilitiesFiles, dav: crate::models::DavCapabilitiesDav, files_sharing: crate::models::SharebymailCapabilitiesFilesSharing, provisioning_api: crate::models::ProvisioningApiCapabilitiesProvisioningApi, theming: crate::models::ThemingPublicCapabilitiesTheming, user_status: crate::models::UserStatusCapabilitiesUserStatus, weather_status: crate::models::FilesSharingCapabilitiesFilesSharingUserExpireDate) -> CoreOcsGetCapabilities200ResponseOcsDataCapabilities {
        CoreOcsGetCapabilities200ResponseOcsDataCapabilities {
            files: Box::new(files),
            dav: Box::new(dav),
            files_sharing: Box::new(files_sharing),
            provisioning_api: Box::new(provisioning_api),
            theming: Box::new(theming),
            user_status: Box::new(user_status),
            weather_status: Box::new(weather_status),
        }
    }
}


