/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DashboardWidget {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "order")]
    pub order: i64,
    #[serde(rename = "icon_class")]
    pub icon_class: String,
    #[serde(rename = "icon_url")]
    pub icon_url: String,
    #[serde(rename = "widget_url", deserialize_with = "Option::deserialize")]
    pub widget_url: Option<String>,
    #[serde(rename = "item_icons_round")]
    pub item_icons_round: bool,
    #[serde(rename = "item_api_versions")]
    pub item_api_versions: Vec<i64>,
    #[serde(rename = "reload_interval")]
    pub reload_interval: i64,
    #[serde(rename = "buttons", skip_serializing_if = "Option::is_none")]
    pub buttons: Option<Vec<crate::models::DashboardWidgetButtonsInner>>,
}

impl DashboardWidget {
    pub fn new(id: String, title: String, order: i64, icon_class: String, icon_url: String, widget_url: Option<String>, item_icons_round: bool, item_api_versions: Vec<i64>, reload_interval: i64) -> DashboardWidget {
        DashboardWidget {
            id,
            title,
            order,
            icon_class,
            icon_url,
            widget_url,
            item_icons_round,
            item_api_versions,
            reload_interval,
            buttons: None,
        }
    }
}


