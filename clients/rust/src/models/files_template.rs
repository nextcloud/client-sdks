/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FilesTemplate {
    #[serde(rename = "templateType")]
    pub template_type: String,
    #[serde(rename = "templateId")]
    pub template_id: String,
    #[serde(rename = "basename")]
    pub basename: String,
    #[serde(rename = "etag")]
    pub etag: String,
    #[serde(rename = "fileid")]
    pub fileid: i64,
    #[serde(rename = "filename")]
    pub filename: String,
    #[serde(rename = "lastmod")]
    pub lastmod: i64,
    #[serde(rename = "mime")]
    pub mime: String,
    #[serde(rename = "size")]
    pub size: i64,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "hasPreview")]
    pub has_preview: bool,
    #[serde(rename = "previewUrl", deserialize_with = "Option::deserialize")]
    pub preview_url: Option<String>,
}

impl FilesTemplate {
    pub fn new(template_type: String, template_id: String, basename: String, etag: String, fileid: i64, filename: String, lastmod: i64, mime: String, size: i64, r#type: String, has_preview: bool, preview_url: Option<String>) -> FilesTemplate {
        FilesTemplate {
            template_type,
            template_id,
            basename,
            etag,
            fileid,
            filename,
            lastmod,
            mime,
            size,
            r#type,
            has_preview,
            preview_url,
        }
    }
}


