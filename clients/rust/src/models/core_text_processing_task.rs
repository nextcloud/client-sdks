/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreTextProcessingTask {
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<i64>,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "status")]
    pub status: i64,
    #[serde(rename = "userId", deserialize_with = "Option::deserialize")]
    pub user_id: Option<String>,
    #[serde(rename = "appId")]
    pub app_id: String,
    #[serde(rename = "input")]
    pub input: String,
    #[serde(rename = "output", deserialize_with = "Option::deserialize")]
    pub output: Option<String>,
    #[serde(rename = "identifier")]
    pub identifier: String,
}

impl CoreTextProcessingTask {
    pub fn new(id: Option<i64>, r#type: String, status: i64, user_id: Option<String>, app_id: String, input: String, output: Option<String>, identifier: String) -> CoreTextProcessingTask {
        CoreTextProcessingTask {
            id,
            r#type,
            status,
            user_id,
            app_id,
            input,
            output,
            identifier,
        }
    }
}


