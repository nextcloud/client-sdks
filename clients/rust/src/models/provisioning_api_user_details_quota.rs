/*
 * nextcloud
 *
 * Nextcloud APIs
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProvisioningApiUserDetailsQuota {
    #[serde(rename = "free", skip_serializing_if = "Option::is_none")]
    pub free: Option<f32>,
    #[serde(rename = "quota", skip_serializing_if = "Option::is_none")]
    pub quota: Option<Box<crate::models::ProvisioningApiUserDetailsQuotaQuota>>,
    #[serde(rename = "relative", skip_serializing_if = "Option::is_none")]
    pub relative: Option<f32>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f32>,
    #[serde(rename = "used", skip_serializing_if = "Option::is_none")]
    pub used: Option<f32>,
}

impl ProvisioningApiUserDetailsQuota {
    pub fn new() -> ProvisioningApiUserDetailsQuota {
        ProvisioningApiUserDetailsQuota {
            free: None,
            quota: None,
            relative: None,
            total: None,
            used: None,
        }
    }
}


