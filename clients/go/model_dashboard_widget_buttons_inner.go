/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the DashboardWidgetButtonsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardWidgetButtonsInner{}

// DashboardWidgetButtonsInner struct for DashboardWidgetButtonsInner
type DashboardWidgetButtonsInner struct {
	Type string `json:"type"`
	Text string `json:"text"`
	Link string `json:"link"`
	AdditionalProperties map[string]interface{}
}

type _DashboardWidgetButtonsInner DashboardWidgetButtonsInner

// NewDashboardWidgetButtonsInner instantiates a new DashboardWidgetButtonsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardWidgetButtonsInner(type_ string, text string, link string) *DashboardWidgetButtonsInner {
	this := DashboardWidgetButtonsInner{}
	this.Type = type_
	this.Text = text
	this.Link = link
	return &this
}

// NewDashboardWidgetButtonsInnerWithDefaults instantiates a new DashboardWidgetButtonsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardWidgetButtonsInnerWithDefaults() *DashboardWidgetButtonsInner {
	this := DashboardWidgetButtonsInner{}
	return &this
}

// GetType returns the Type field value
func (o *DashboardWidgetButtonsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetButtonsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DashboardWidgetButtonsInner) SetType(v string) {
	o.Type = v
}

// GetText returns the Text field value
func (o *DashboardWidgetButtonsInner) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetButtonsInner) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *DashboardWidgetButtonsInner) SetText(v string) {
	o.Text = v
}

// GetLink returns the Link field value
func (o *DashboardWidgetButtonsInner) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetButtonsInner) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *DashboardWidgetButtonsInner) SetLink(v string) {
	o.Link = v
}

func (o DashboardWidgetButtonsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardWidgetButtonsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["text"] = o.Text
	toSerialize["link"] = o.Link

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DashboardWidgetButtonsInner) UnmarshalJSON(bytes []byte) (err error) {
	varDashboardWidgetButtonsInner := _DashboardWidgetButtonsInner{}

	if err = json.Unmarshal(bytes, &varDashboardWidgetButtonsInner); err == nil {
		*o = DashboardWidgetButtonsInner(varDashboardWidgetButtonsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "text")
		delete(additionalProperties, "link")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDashboardWidgetButtonsInner struct {
	value *DashboardWidgetButtonsInner
	isSet bool
}

func (v NullableDashboardWidgetButtonsInner) Get() *DashboardWidgetButtonsInner {
	return v.value
}

func (v *NullableDashboardWidgetButtonsInner) Set(val *DashboardWidgetButtonsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardWidgetButtonsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardWidgetButtonsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardWidgetButtonsInner(val *DashboardWidgetButtonsInner) *NullableDashboardWidgetButtonsInner {
	return &NullableDashboardWidgetButtonsInner{value: val, isSet: true}
}

func (v NullableDashboardWidgetButtonsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardWidgetButtonsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


