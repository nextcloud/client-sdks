/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusForecastDataNext1Hours type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecastDataNext1Hours{}

// WeatherStatusForecastDataNext1Hours struct for WeatherStatusForecastDataNext1Hours
type WeatherStatusForecastDataNext1Hours struct {
	Summary WeatherStatusForecastDataNext12HoursSummary `json:"summary"`
	Details WeatherStatusForecastDataNext1HoursDetails `json:"details"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusForecastDataNext1Hours WeatherStatusForecastDataNext1Hours

// NewWeatherStatusForecastDataNext1Hours instantiates a new WeatherStatusForecastDataNext1Hours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecastDataNext1Hours(summary WeatherStatusForecastDataNext12HoursSummary, details WeatherStatusForecastDataNext1HoursDetails) *WeatherStatusForecastDataNext1Hours {
	this := WeatherStatusForecastDataNext1Hours{}
	this.Summary = summary
	this.Details = details
	return &this
}

// NewWeatherStatusForecastDataNext1HoursWithDefaults instantiates a new WeatherStatusForecastDataNext1Hours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastDataNext1HoursWithDefaults() *WeatherStatusForecastDataNext1Hours {
	this := WeatherStatusForecastDataNext1Hours{}
	return &this
}

// GetSummary returns the Summary field value
func (o *WeatherStatusForecastDataNext1Hours) GetSummary() WeatherStatusForecastDataNext12HoursSummary {
	if o == nil {
		var ret WeatherStatusForecastDataNext12HoursSummary
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext1Hours) GetSummaryOk() (*WeatherStatusForecastDataNext12HoursSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *WeatherStatusForecastDataNext1Hours) SetSummary(v WeatherStatusForecastDataNext12HoursSummary) {
	o.Summary = v
}

// GetDetails returns the Details field value
func (o *WeatherStatusForecastDataNext1Hours) GetDetails() WeatherStatusForecastDataNext1HoursDetails {
	if o == nil {
		var ret WeatherStatusForecastDataNext1HoursDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext1Hours) GetDetailsOk() (*WeatherStatusForecastDataNext1HoursDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *WeatherStatusForecastDataNext1Hours) SetDetails(v WeatherStatusForecastDataNext1HoursDetails) {
	o.Details = v
}

func (o WeatherStatusForecastDataNext1Hours) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecastDataNext1Hours) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["summary"] = o.Summary
	toSerialize["details"] = o.Details

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusForecastDataNext1Hours) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusForecastDataNext1Hours := _WeatherStatusForecastDataNext1Hours{}

	if err = json.Unmarshal(bytes, &varWeatherStatusForecastDataNext1Hours); err == nil {
		*o = WeatherStatusForecastDataNext1Hours(varWeatherStatusForecastDataNext1Hours)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "summary")
		delete(additionalProperties, "details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusForecastDataNext1Hours struct {
	value *WeatherStatusForecastDataNext1Hours
	isSet bool
}

func (v NullableWeatherStatusForecastDataNext1Hours) Get() *WeatherStatusForecastDataNext1Hours {
	return v.value
}

func (v *NullableWeatherStatusForecastDataNext1Hours) Set(val *WeatherStatusForecastDataNext1Hours) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecastDataNext1Hours) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecastDataNext1Hours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecastDataNext1Hours(val *WeatherStatusForecastDataNext1Hours) *NullableWeatherStatusForecastDataNext1Hours {
	return &NullableWeatherStatusForecastDataNext1Hours{value: val, isSet: true}
}

func (v NullableWeatherStatusForecastDataNext1Hours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecastDataNext1Hours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


