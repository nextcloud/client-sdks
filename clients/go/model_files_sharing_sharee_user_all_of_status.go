/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingShareeUserAllOfStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeUserAllOfStatus{}

// FilesSharingShareeUserAllOfStatus struct for FilesSharingShareeUserAllOfStatus
type FilesSharingShareeUserAllOfStatus struct {
	Status string `json:"status"`
	Message string `json:"message"`
	Icon string `json:"icon"`
	ClearAt NullableInt64 `json:"clearAt"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingShareeUserAllOfStatus FilesSharingShareeUserAllOfStatus

// NewFilesSharingShareeUserAllOfStatus instantiates a new FilesSharingShareeUserAllOfStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeUserAllOfStatus(status string, message string, icon string, clearAt NullableInt64) *FilesSharingShareeUserAllOfStatus {
	this := FilesSharingShareeUserAllOfStatus{}
	this.Status = status
	this.Message = message
	this.Icon = icon
	this.ClearAt = clearAt
	return &this
}

// NewFilesSharingShareeUserAllOfStatusWithDefaults instantiates a new FilesSharingShareeUserAllOfStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeUserAllOfStatusWithDefaults() *FilesSharingShareeUserAllOfStatus {
	this := FilesSharingShareeUserAllOfStatus{}
	return &this
}

// GetStatus returns the Status field value
func (o *FilesSharingShareeUserAllOfStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOfStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FilesSharingShareeUserAllOfStatus) SetStatus(v string) {
	o.Status = v
}

// GetMessage returns the Message field value
func (o *FilesSharingShareeUserAllOfStatus) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOfStatus) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *FilesSharingShareeUserAllOfStatus) SetMessage(v string) {
	o.Message = v
}

// GetIcon returns the Icon field value
func (o *FilesSharingShareeUserAllOfStatus) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeUserAllOfStatus) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *FilesSharingShareeUserAllOfStatus) SetIcon(v string) {
	o.Icon = v
}

// GetClearAt returns the ClearAt field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *FilesSharingShareeUserAllOfStatus) GetClearAt() int64 {
	if o == nil || o.ClearAt.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ClearAt.Get()
}

// GetClearAtOk returns a tuple with the ClearAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesSharingShareeUserAllOfStatus) GetClearAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClearAt.Get(), o.ClearAt.IsSet()
}

// SetClearAt sets field value
func (o *FilesSharingShareeUserAllOfStatus) SetClearAt(v int64) {
	o.ClearAt.Set(&v)
}

func (o FilesSharingShareeUserAllOfStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeUserAllOfStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["message"] = o.Message
	toSerialize["icon"] = o.Icon
	toSerialize["clearAt"] = o.ClearAt.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingShareeUserAllOfStatus) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingShareeUserAllOfStatus := _FilesSharingShareeUserAllOfStatus{}

	if err = json.Unmarshal(bytes, &varFilesSharingShareeUserAllOfStatus); err == nil {
		*o = FilesSharingShareeUserAllOfStatus(varFilesSharingShareeUserAllOfStatus)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "message")
		delete(additionalProperties, "icon")
		delete(additionalProperties, "clearAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingShareeUserAllOfStatus struct {
	value *FilesSharingShareeUserAllOfStatus
	isSet bool
}

func (v NullableFilesSharingShareeUserAllOfStatus) Get() *FilesSharingShareeUserAllOfStatus {
	return v.value
}

func (v *NullableFilesSharingShareeUserAllOfStatus) Set(val *FilesSharingShareeUserAllOfStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeUserAllOfStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeUserAllOfStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeUserAllOfStatus(val *FilesSharingShareeUserAllOfStatus) *NullableFilesSharingShareeUserAllOfStatus {
	return &NullableFilesSharingShareeUserAllOfStatus{value: val, isSet: true}
}

func (v NullableFilesSharingShareeUserAllOfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeUserAllOfStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


