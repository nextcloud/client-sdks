/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusForecastData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecastData{}

// WeatherStatusForecastData struct for WeatherStatusForecastData
type WeatherStatusForecastData struct {
	Instant WeatherStatusForecastDataInstant `json:"instant"`
	Next12Hours WeatherStatusForecastDataNext12Hours `json:"next_12_hours"`
	Next1Hours WeatherStatusForecastDataNext1Hours `json:"next_1_hours"`
	Next6Hours WeatherStatusForecastDataNext6Hours `json:"next_6_hours"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusForecastData WeatherStatusForecastData

// NewWeatherStatusForecastData instantiates a new WeatherStatusForecastData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecastData(instant WeatherStatusForecastDataInstant, next12Hours WeatherStatusForecastDataNext12Hours, next1Hours WeatherStatusForecastDataNext1Hours, next6Hours WeatherStatusForecastDataNext6Hours) *WeatherStatusForecastData {
	this := WeatherStatusForecastData{}
	this.Instant = instant
	this.Next12Hours = next12Hours
	this.Next1Hours = next1Hours
	this.Next6Hours = next6Hours
	return &this
}

// NewWeatherStatusForecastDataWithDefaults instantiates a new WeatherStatusForecastData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastDataWithDefaults() *WeatherStatusForecastData {
	this := WeatherStatusForecastData{}
	return &this
}

// GetInstant returns the Instant field value
func (o *WeatherStatusForecastData) GetInstant() WeatherStatusForecastDataInstant {
	if o == nil {
		var ret WeatherStatusForecastDataInstant
		return ret
	}

	return o.Instant
}

// GetInstantOk returns a tuple with the Instant field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastData) GetInstantOk() (*WeatherStatusForecastDataInstant, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instant, true
}

// SetInstant sets field value
func (o *WeatherStatusForecastData) SetInstant(v WeatherStatusForecastDataInstant) {
	o.Instant = v
}

// GetNext12Hours returns the Next12Hours field value
func (o *WeatherStatusForecastData) GetNext12Hours() WeatherStatusForecastDataNext12Hours {
	if o == nil {
		var ret WeatherStatusForecastDataNext12Hours
		return ret
	}

	return o.Next12Hours
}

// GetNext12HoursOk returns a tuple with the Next12Hours field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastData) GetNext12HoursOk() (*WeatherStatusForecastDataNext12Hours, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next12Hours, true
}

// SetNext12Hours sets field value
func (o *WeatherStatusForecastData) SetNext12Hours(v WeatherStatusForecastDataNext12Hours) {
	o.Next12Hours = v
}

// GetNext1Hours returns the Next1Hours field value
func (o *WeatherStatusForecastData) GetNext1Hours() WeatherStatusForecastDataNext1Hours {
	if o == nil {
		var ret WeatherStatusForecastDataNext1Hours
		return ret
	}

	return o.Next1Hours
}

// GetNext1HoursOk returns a tuple with the Next1Hours field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastData) GetNext1HoursOk() (*WeatherStatusForecastDataNext1Hours, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next1Hours, true
}

// SetNext1Hours sets field value
func (o *WeatherStatusForecastData) SetNext1Hours(v WeatherStatusForecastDataNext1Hours) {
	o.Next1Hours = v
}

// GetNext6Hours returns the Next6Hours field value
func (o *WeatherStatusForecastData) GetNext6Hours() WeatherStatusForecastDataNext6Hours {
	if o == nil {
		var ret WeatherStatusForecastDataNext6Hours
		return ret
	}

	return o.Next6Hours
}

// GetNext6HoursOk returns a tuple with the Next6Hours field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastData) GetNext6HoursOk() (*WeatherStatusForecastDataNext6Hours, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next6Hours, true
}

// SetNext6Hours sets field value
func (o *WeatherStatusForecastData) SetNext6Hours(v WeatherStatusForecastDataNext6Hours) {
	o.Next6Hours = v
}

func (o WeatherStatusForecastData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecastData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instant"] = o.Instant
	toSerialize["next_12_hours"] = o.Next12Hours
	toSerialize["next_1_hours"] = o.Next1Hours
	toSerialize["next_6_hours"] = o.Next6Hours

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusForecastData) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusForecastData := _WeatherStatusForecastData{}

	if err = json.Unmarshal(bytes, &varWeatherStatusForecastData); err == nil {
		*o = WeatherStatusForecastData(varWeatherStatusForecastData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "instant")
		delete(additionalProperties, "next_12_hours")
		delete(additionalProperties, "next_1_hours")
		delete(additionalProperties, "next_6_hours")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusForecastData struct {
	value *WeatherStatusForecastData
	isSet bool
}

func (v NullableWeatherStatusForecastData) Get() *WeatherStatusForecastData {
	return v.value
}

func (v *NullableWeatherStatusForecastData) Set(val *WeatherStatusForecastData) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecastData) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecastData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecastData(val *WeatherStatusForecastData) *NullableWeatherStatusForecastData {
	return &NullableWeatherStatusForecastData{value: val, isSet: true}
}

func (v NullableWeatherStatusForecastData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecastData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


