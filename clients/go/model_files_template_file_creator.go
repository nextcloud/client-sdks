/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesTemplateFileCreator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesTemplateFileCreator{}

// FilesTemplateFileCreator struct for FilesTemplateFileCreator
type FilesTemplateFileCreator struct {
	App string `json:"app"`
	Label string `json:"label"`
	Extension string `json:"extension"`
	IconClass NullableString `json:"iconClass"`
	Mimetypes []string `json:"mimetypes"`
	Ratio NullableFloat32 `json:"ratio"`
	ActionLabel string `json:"actionLabel"`
	AdditionalProperties map[string]interface{}
}

type _FilesTemplateFileCreator FilesTemplateFileCreator

// NewFilesTemplateFileCreator instantiates a new FilesTemplateFileCreator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesTemplateFileCreator(app string, label string, extension string, iconClass NullableString, mimetypes []string, ratio NullableFloat32, actionLabel string) *FilesTemplateFileCreator {
	this := FilesTemplateFileCreator{}
	this.App = app
	this.Label = label
	this.Extension = extension
	this.IconClass = iconClass
	this.Mimetypes = mimetypes
	this.Ratio = ratio
	this.ActionLabel = actionLabel
	return &this
}

// NewFilesTemplateFileCreatorWithDefaults instantiates a new FilesTemplateFileCreator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesTemplateFileCreatorWithDefaults() *FilesTemplateFileCreator {
	this := FilesTemplateFileCreator{}
	return &this
}

// GetApp returns the App field value
func (o *FilesTemplateFileCreator) GetApp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.App
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
func (o *FilesTemplateFileCreator) GetAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.App, true
}

// SetApp sets field value
func (o *FilesTemplateFileCreator) SetApp(v string) {
	o.App = v
}

// GetLabel returns the Label field value
func (o *FilesTemplateFileCreator) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *FilesTemplateFileCreator) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *FilesTemplateFileCreator) SetLabel(v string) {
	o.Label = v
}

// GetExtension returns the Extension field value
func (o *FilesTemplateFileCreator) GetExtension() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value
// and a boolean to check if the value has been set.
func (o *FilesTemplateFileCreator) GetExtensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extension, true
}

// SetExtension sets field value
func (o *FilesTemplateFileCreator) SetExtension(v string) {
	o.Extension = v
}

// GetIconClass returns the IconClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FilesTemplateFileCreator) GetIconClass() string {
	if o == nil || o.IconClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.IconClass.Get()
}

// GetIconClassOk returns a tuple with the IconClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesTemplateFileCreator) GetIconClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconClass.Get(), o.IconClass.IsSet()
}

// SetIconClass sets field value
func (o *FilesTemplateFileCreator) SetIconClass(v string) {
	o.IconClass.Set(&v)
}

// GetMimetypes returns the Mimetypes field value
func (o *FilesTemplateFileCreator) GetMimetypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Mimetypes
}

// GetMimetypesOk returns a tuple with the Mimetypes field value
// and a boolean to check if the value has been set.
func (o *FilesTemplateFileCreator) GetMimetypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mimetypes, true
}

// SetMimetypes sets field value
func (o *FilesTemplateFileCreator) SetMimetypes(v []string) {
	o.Mimetypes = v
}

// GetRatio returns the Ratio field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *FilesTemplateFileCreator) GetRatio() float32 {
	if o == nil || o.Ratio.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Ratio.Get()
}

// GetRatioOk returns a tuple with the Ratio field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesTemplateFileCreator) GetRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ratio.Get(), o.Ratio.IsSet()
}

// SetRatio sets field value
func (o *FilesTemplateFileCreator) SetRatio(v float32) {
	o.Ratio.Set(&v)
}

// GetActionLabel returns the ActionLabel field value
func (o *FilesTemplateFileCreator) GetActionLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionLabel
}

// GetActionLabelOk returns a tuple with the ActionLabel field value
// and a boolean to check if the value has been set.
func (o *FilesTemplateFileCreator) GetActionLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionLabel, true
}

// SetActionLabel sets field value
func (o *FilesTemplateFileCreator) SetActionLabel(v string) {
	o.ActionLabel = v
}

func (o FilesTemplateFileCreator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesTemplateFileCreator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app"] = o.App
	toSerialize["label"] = o.Label
	toSerialize["extension"] = o.Extension
	toSerialize["iconClass"] = o.IconClass.Get()
	toSerialize["mimetypes"] = o.Mimetypes
	toSerialize["ratio"] = o.Ratio.Get()
	toSerialize["actionLabel"] = o.ActionLabel

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesTemplateFileCreator) UnmarshalJSON(bytes []byte) (err error) {
	varFilesTemplateFileCreator := _FilesTemplateFileCreator{}

	if err = json.Unmarshal(bytes, &varFilesTemplateFileCreator); err == nil {
		*o = FilesTemplateFileCreator(varFilesTemplateFileCreator)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "app")
		delete(additionalProperties, "label")
		delete(additionalProperties, "extension")
		delete(additionalProperties, "iconClass")
		delete(additionalProperties, "mimetypes")
		delete(additionalProperties, "ratio")
		delete(additionalProperties, "actionLabel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesTemplateFileCreator struct {
	value *FilesTemplateFileCreator
	isSet bool
}

func (v NullableFilesTemplateFileCreator) Get() *FilesTemplateFileCreator {
	return v.value
}

func (v *NullableFilesTemplateFileCreator) Set(val *FilesTemplateFileCreator) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesTemplateFileCreator) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesTemplateFileCreator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesTemplateFileCreator(val *FilesTemplateFileCreator) *NullableFilesTemplateFileCreator {
	return &NullableFilesTemplateFileCreator{value: val, isSet: true}
}

func (v NullableFilesTemplateFileCreator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesTemplateFileCreator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


