/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusForecast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecast{}

// WeatherStatusForecast struct for WeatherStatusForecast
type WeatherStatusForecast struct {
	Time string `json:"time"`
	Data WeatherStatusForecastData `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusForecast WeatherStatusForecast

// NewWeatherStatusForecast instantiates a new WeatherStatusForecast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecast(time string, data WeatherStatusForecastData) *WeatherStatusForecast {
	this := WeatherStatusForecast{}
	this.Time = time
	this.Data = data
	return &this
}

// NewWeatherStatusForecastWithDefaults instantiates a new WeatherStatusForecast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastWithDefaults() *WeatherStatusForecast {
	this := WeatherStatusForecast{}
	return &this
}

// GetTime returns the Time field value
func (o *WeatherStatusForecast) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecast) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *WeatherStatusForecast) SetTime(v string) {
	o.Time = v
}

// GetData returns the Data field value
func (o *WeatherStatusForecast) GetData() WeatherStatusForecastData {
	if o == nil {
		var ret WeatherStatusForecastData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecast) GetDataOk() (*WeatherStatusForecastData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *WeatherStatusForecast) SetData(v WeatherStatusForecastData) {
	o.Data = v
}

func (o WeatherStatusForecast) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["time"] = o.Time
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusForecast) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusForecast := _WeatherStatusForecast{}

	if err = json.Unmarshal(bytes, &varWeatherStatusForecast); err == nil {
		*o = WeatherStatusForecast(varWeatherStatusForecast)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "time")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusForecast struct {
	value *WeatherStatusForecast
	isSet bool
}

func (v NullableWeatherStatusForecast) Get() *WeatherStatusForecast {
	return v.value
}

func (v *NullableWeatherStatusForecast) Set(val *WeatherStatusForecast) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecast) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecast(val *WeatherStatusForecast) *NullableWeatherStatusForecast {
	return &NullableWeatherStatusForecast{value: val, isSet: true}
}

func (v NullableWeatherStatusForecast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


