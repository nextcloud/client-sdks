/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the ProvisioningApiCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiCapabilities{}

// ProvisioningApiCapabilities struct for ProvisioningApiCapabilities
type ProvisioningApiCapabilities struct {
	ProvisioningApi ProvisioningApiCapabilitiesProvisioningApi `json:"provisioning_api"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningApiCapabilities ProvisioningApiCapabilities

// NewProvisioningApiCapabilities instantiates a new ProvisioningApiCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiCapabilities(provisioningApi ProvisioningApiCapabilitiesProvisioningApi) *ProvisioningApiCapabilities {
	this := ProvisioningApiCapabilities{}
	this.ProvisioningApi = provisioningApi
	return &this
}

// NewProvisioningApiCapabilitiesWithDefaults instantiates a new ProvisioningApiCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiCapabilitiesWithDefaults() *ProvisioningApiCapabilities {
	this := ProvisioningApiCapabilities{}
	return &this
}

// GetProvisioningApi returns the ProvisioningApi field value
func (o *ProvisioningApiCapabilities) GetProvisioningApi() ProvisioningApiCapabilitiesProvisioningApi {
	if o == nil {
		var ret ProvisioningApiCapabilitiesProvisioningApi
		return ret
	}

	return o.ProvisioningApi
}

// GetProvisioningApiOk returns a tuple with the ProvisioningApi field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiCapabilities) GetProvisioningApiOk() (*ProvisioningApiCapabilitiesProvisioningApi, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningApi, true
}

// SetProvisioningApi sets field value
func (o *ProvisioningApiCapabilities) SetProvisioningApi(v ProvisioningApiCapabilitiesProvisioningApi) {
	o.ProvisioningApi = v
}

func (o ProvisioningApiCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provisioning_api"] = o.ProvisioningApi

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningApiCapabilities) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningApiCapabilities := _ProvisioningApiCapabilities{}

	if err = json.Unmarshal(bytes, &varProvisioningApiCapabilities); err == nil {
		*o = ProvisioningApiCapabilities(varProvisioningApiCapabilities)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "provisioning_api")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningApiCapabilities struct {
	value *ProvisioningApiCapabilities
	isSet bool
}

func (v NullableProvisioningApiCapabilities) Get() *ProvisioningApiCapabilities {
	return v.value
}

func (v *NullableProvisioningApiCapabilities) Set(val *ProvisioningApiCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiCapabilities(val *ProvisioningApiCapabilities) *NullableProvisioningApiCapabilities {
	return &NullableProvisioningApiCapabilities{value: val, isSet: true}
}

func (v NullableProvisioningApiCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


