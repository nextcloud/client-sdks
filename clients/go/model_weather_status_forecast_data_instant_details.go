/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusForecastDataInstantDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecastDataInstantDetails{}

// WeatherStatusForecastDataInstantDetails struct for WeatherStatusForecastDataInstantDetails
type WeatherStatusForecastDataInstantDetails struct {
	AirPressureAtSeaLevel float32 `json:"air_pressure_at_sea_level"`
	AirTemperature float32 `json:"air_temperature"`
	CloudAreaFraction float32 `json:"cloud_area_fraction"`
	CloudAreaFractionHigh float32 `json:"cloud_area_fraction_high"`
	CloudAreaFractionLow float32 `json:"cloud_area_fraction_low"`
	CloudAreaFractionMedium float32 `json:"cloud_area_fraction_medium"`
	DewPointTemperature float32 `json:"dew_point_temperature"`
	FogAreaFraction float32 `json:"fog_area_fraction"`
	RelativeHumidity float32 `json:"relative_humidity"`
	UltravioletIndexClearSky float32 `json:"ultraviolet_index_clear_sky"`
	WindFromDirection float32 `json:"wind_from_direction"`
	WindSpeed float32 `json:"wind_speed"`
	WindSpeedOfGust float32 `json:"wind_speed_of_gust"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusForecastDataInstantDetails WeatherStatusForecastDataInstantDetails

// NewWeatherStatusForecastDataInstantDetails instantiates a new WeatherStatusForecastDataInstantDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecastDataInstantDetails(airPressureAtSeaLevel float32, airTemperature float32, cloudAreaFraction float32, cloudAreaFractionHigh float32, cloudAreaFractionLow float32, cloudAreaFractionMedium float32, dewPointTemperature float32, fogAreaFraction float32, relativeHumidity float32, ultravioletIndexClearSky float32, windFromDirection float32, windSpeed float32, windSpeedOfGust float32) *WeatherStatusForecastDataInstantDetails {
	this := WeatherStatusForecastDataInstantDetails{}
	this.AirPressureAtSeaLevel = airPressureAtSeaLevel
	this.AirTemperature = airTemperature
	this.CloudAreaFraction = cloudAreaFraction
	this.CloudAreaFractionHigh = cloudAreaFractionHigh
	this.CloudAreaFractionLow = cloudAreaFractionLow
	this.CloudAreaFractionMedium = cloudAreaFractionMedium
	this.DewPointTemperature = dewPointTemperature
	this.FogAreaFraction = fogAreaFraction
	this.RelativeHumidity = relativeHumidity
	this.UltravioletIndexClearSky = ultravioletIndexClearSky
	this.WindFromDirection = windFromDirection
	this.WindSpeed = windSpeed
	this.WindSpeedOfGust = windSpeedOfGust
	return &this
}

// NewWeatherStatusForecastDataInstantDetailsWithDefaults instantiates a new WeatherStatusForecastDataInstantDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastDataInstantDetailsWithDefaults() *WeatherStatusForecastDataInstantDetails {
	this := WeatherStatusForecastDataInstantDetails{}
	return &this
}

// GetAirPressureAtSeaLevel returns the AirPressureAtSeaLevel field value
func (o *WeatherStatusForecastDataInstantDetails) GetAirPressureAtSeaLevel() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AirPressureAtSeaLevel
}

// GetAirPressureAtSeaLevelOk returns a tuple with the AirPressureAtSeaLevel field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetAirPressureAtSeaLevelOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AirPressureAtSeaLevel, true
}

// SetAirPressureAtSeaLevel sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetAirPressureAtSeaLevel(v float32) {
	o.AirPressureAtSeaLevel = v
}

// GetAirTemperature returns the AirTemperature field value
func (o *WeatherStatusForecastDataInstantDetails) GetAirTemperature() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AirTemperature
}

// GetAirTemperatureOk returns a tuple with the AirTemperature field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetAirTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AirTemperature, true
}

// SetAirTemperature sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetAirTemperature(v float32) {
	o.AirTemperature = v
}

// GetCloudAreaFraction returns the CloudAreaFraction field value
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFraction() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CloudAreaFraction
}

// GetCloudAreaFractionOk returns a tuple with the CloudAreaFraction field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAreaFraction, true
}

// SetCloudAreaFraction sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetCloudAreaFraction(v float32) {
	o.CloudAreaFraction = v
}

// GetCloudAreaFractionHigh returns the CloudAreaFractionHigh field value
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionHigh() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CloudAreaFractionHigh
}

// GetCloudAreaFractionHighOk returns a tuple with the CloudAreaFractionHigh field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionHighOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAreaFractionHigh, true
}

// SetCloudAreaFractionHigh sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetCloudAreaFractionHigh(v float32) {
	o.CloudAreaFractionHigh = v
}

// GetCloudAreaFractionLow returns the CloudAreaFractionLow field value
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionLow() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CloudAreaFractionLow
}

// GetCloudAreaFractionLowOk returns a tuple with the CloudAreaFractionLow field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionLowOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAreaFractionLow, true
}

// SetCloudAreaFractionLow sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetCloudAreaFractionLow(v float32) {
	o.CloudAreaFractionLow = v
}

// GetCloudAreaFractionMedium returns the CloudAreaFractionMedium field value
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionMedium() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CloudAreaFractionMedium
}

// GetCloudAreaFractionMediumOk returns a tuple with the CloudAreaFractionMedium field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetCloudAreaFractionMediumOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudAreaFractionMedium, true
}

// SetCloudAreaFractionMedium sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetCloudAreaFractionMedium(v float32) {
	o.CloudAreaFractionMedium = v
}

// GetDewPointTemperature returns the DewPointTemperature field value
func (o *WeatherStatusForecastDataInstantDetails) GetDewPointTemperature() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DewPointTemperature
}

// GetDewPointTemperatureOk returns a tuple with the DewPointTemperature field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetDewPointTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DewPointTemperature, true
}

// SetDewPointTemperature sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetDewPointTemperature(v float32) {
	o.DewPointTemperature = v
}

// GetFogAreaFraction returns the FogAreaFraction field value
func (o *WeatherStatusForecastDataInstantDetails) GetFogAreaFraction() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FogAreaFraction
}

// GetFogAreaFractionOk returns a tuple with the FogAreaFraction field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetFogAreaFractionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FogAreaFraction, true
}

// SetFogAreaFraction sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetFogAreaFraction(v float32) {
	o.FogAreaFraction = v
}

// GetRelativeHumidity returns the RelativeHumidity field value
func (o *WeatherStatusForecastDataInstantDetails) GetRelativeHumidity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RelativeHumidity
}

// GetRelativeHumidityOk returns a tuple with the RelativeHumidity field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetRelativeHumidityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeHumidity, true
}

// SetRelativeHumidity sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetRelativeHumidity(v float32) {
	o.RelativeHumidity = v
}

// GetUltravioletIndexClearSky returns the UltravioletIndexClearSky field value
func (o *WeatherStatusForecastDataInstantDetails) GetUltravioletIndexClearSky() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UltravioletIndexClearSky
}

// GetUltravioletIndexClearSkyOk returns a tuple with the UltravioletIndexClearSky field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetUltravioletIndexClearSkyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UltravioletIndexClearSky, true
}

// SetUltravioletIndexClearSky sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetUltravioletIndexClearSky(v float32) {
	o.UltravioletIndexClearSky = v
}

// GetWindFromDirection returns the WindFromDirection field value
func (o *WeatherStatusForecastDataInstantDetails) GetWindFromDirection() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WindFromDirection
}

// GetWindFromDirectionOk returns a tuple with the WindFromDirection field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetWindFromDirectionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindFromDirection, true
}

// SetWindFromDirection sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetWindFromDirection(v float32) {
	o.WindFromDirection = v
}

// GetWindSpeed returns the WindSpeed field value
func (o *WeatherStatusForecastDataInstantDetails) GetWindSpeed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WindSpeed
}

// GetWindSpeedOk returns a tuple with the WindSpeed field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetWindSpeedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindSpeed, true
}

// SetWindSpeed sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetWindSpeed(v float32) {
	o.WindSpeed = v
}

// GetWindSpeedOfGust returns the WindSpeedOfGust field value
func (o *WeatherStatusForecastDataInstantDetails) GetWindSpeedOfGust() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WindSpeedOfGust
}

// GetWindSpeedOfGustOk returns a tuple with the WindSpeedOfGust field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataInstantDetails) GetWindSpeedOfGustOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindSpeedOfGust, true
}

// SetWindSpeedOfGust sets field value
func (o *WeatherStatusForecastDataInstantDetails) SetWindSpeedOfGust(v float32) {
	o.WindSpeedOfGust = v
}

func (o WeatherStatusForecastDataInstantDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecastDataInstantDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["air_pressure_at_sea_level"] = o.AirPressureAtSeaLevel
	toSerialize["air_temperature"] = o.AirTemperature
	toSerialize["cloud_area_fraction"] = o.CloudAreaFraction
	toSerialize["cloud_area_fraction_high"] = o.CloudAreaFractionHigh
	toSerialize["cloud_area_fraction_low"] = o.CloudAreaFractionLow
	toSerialize["cloud_area_fraction_medium"] = o.CloudAreaFractionMedium
	toSerialize["dew_point_temperature"] = o.DewPointTemperature
	toSerialize["fog_area_fraction"] = o.FogAreaFraction
	toSerialize["relative_humidity"] = o.RelativeHumidity
	toSerialize["ultraviolet_index_clear_sky"] = o.UltravioletIndexClearSky
	toSerialize["wind_from_direction"] = o.WindFromDirection
	toSerialize["wind_speed"] = o.WindSpeed
	toSerialize["wind_speed_of_gust"] = o.WindSpeedOfGust

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusForecastDataInstantDetails) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusForecastDataInstantDetails := _WeatherStatusForecastDataInstantDetails{}

	if err = json.Unmarshal(bytes, &varWeatherStatusForecastDataInstantDetails); err == nil {
		*o = WeatherStatusForecastDataInstantDetails(varWeatherStatusForecastDataInstantDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "air_pressure_at_sea_level")
		delete(additionalProperties, "air_temperature")
		delete(additionalProperties, "cloud_area_fraction")
		delete(additionalProperties, "cloud_area_fraction_high")
		delete(additionalProperties, "cloud_area_fraction_low")
		delete(additionalProperties, "cloud_area_fraction_medium")
		delete(additionalProperties, "dew_point_temperature")
		delete(additionalProperties, "fog_area_fraction")
		delete(additionalProperties, "relative_humidity")
		delete(additionalProperties, "ultraviolet_index_clear_sky")
		delete(additionalProperties, "wind_from_direction")
		delete(additionalProperties, "wind_speed")
		delete(additionalProperties, "wind_speed_of_gust")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusForecastDataInstantDetails struct {
	value *WeatherStatusForecastDataInstantDetails
	isSet bool
}

func (v NullableWeatherStatusForecastDataInstantDetails) Get() *WeatherStatusForecastDataInstantDetails {
	return v.value
}

func (v *NullableWeatherStatusForecastDataInstantDetails) Set(val *WeatherStatusForecastDataInstantDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecastDataInstantDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecastDataInstantDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecastDataInstantDetails(val *WeatherStatusForecastDataInstantDetails) *NullableWeatherStatusForecastDataInstantDetails {
	return &NullableWeatherStatusForecastDataInstantDetails{value: val, isSet: true}
}

func (v NullableWeatherStatusForecastDataInstantDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecastDataInstantDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


