/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the UpdatenotificationApiGetAppList200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatenotificationApiGetAppList200ResponseOcsData{}

// UpdatenotificationApiGetAppList200ResponseOcsData struct for UpdatenotificationApiGetAppList200ResponseOcsData
type UpdatenotificationApiGetAppList200ResponseOcsData struct {
	Missing []UpdatenotificationApp `json:"missing"`
	Available []UpdatenotificationApp `json:"available"`
	AdditionalProperties map[string]interface{}
}

type _UpdatenotificationApiGetAppList200ResponseOcsData UpdatenotificationApiGetAppList200ResponseOcsData

// NewUpdatenotificationApiGetAppList200ResponseOcsData instantiates a new UpdatenotificationApiGetAppList200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatenotificationApiGetAppList200ResponseOcsData(missing []UpdatenotificationApp, available []UpdatenotificationApp) *UpdatenotificationApiGetAppList200ResponseOcsData {
	this := UpdatenotificationApiGetAppList200ResponseOcsData{}
	this.Missing = missing
	this.Available = available
	return &this
}

// NewUpdatenotificationApiGetAppList200ResponseOcsDataWithDefaults instantiates a new UpdatenotificationApiGetAppList200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatenotificationApiGetAppList200ResponseOcsDataWithDefaults() *UpdatenotificationApiGetAppList200ResponseOcsData {
	this := UpdatenotificationApiGetAppList200ResponseOcsData{}
	return &this
}

// GetMissing returns the Missing field value
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) GetMissing() []UpdatenotificationApp {
	if o == nil {
		var ret []UpdatenotificationApp
		return ret
	}

	return o.Missing
}

// GetMissingOk returns a tuple with the Missing field value
// and a boolean to check if the value has been set.
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) GetMissingOk() ([]UpdatenotificationApp, bool) {
	if o == nil {
		return nil, false
	}
	return o.Missing, true
}

// SetMissing sets field value
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) SetMissing(v []UpdatenotificationApp) {
	o.Missing = v
}

// GetAvailable returns the Available field value
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) GetAvailable() []UpdatenotificationApp {
	if o == nil {
		var ret []UpdatenotificationApp
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) GetAvailableOk() ([]UpdatenotificationApp, bool) {
	if o == nil {
		return nil, false
	}
	return o.Available, true
}

// SetAvailable sets field value
func (o *UpdatenotificationApiGetAppList200ResponseOcsData) SetAvailable(v []UpdatenotificationApp) {
	o.Available = v
}

func (o UpdatenotificationApiGetAppList200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatenotificationApiGetAppList200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["missing"] = o.Missing
	toSerialize["available"] = o.Available

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdatenotificationApiGetAppList200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varUpdatenotificationApiGetAppList200ResponseOcsData := _UpdatenotificationApiGetAppList200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varUpdatenotificationApiGetAppList200ResponseOcsData); err == nil {
		*o = UpdatenotificationApiGetAppList200ResponseOcsData(varUpdatenotificationApiGetAppList200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "missing")
		delete(additionalProperties, "available")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdatenotificationApiGetAppList200ResponseOcsData struct {
	value *UpdatenotificationApiGetAppList200ResponseOcsData
	isSet bool
}

func (v NullableUpdatenotificationApiGetAppList200ResponseOcsData) Get() *UpdatenotificationApiGetAppList200ResponseOcsData {
	return v.value
}

func (v *NullableUpdatenotificationApiGetAppList200ResponseOcsData) Set(val *UpdatenotificationApiGetAppList200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatenotificationApiGetAppList200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatenotificationApiGetAppList200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatenotificationApiGetAppList200ResponseOcsData(val *UpdatenotificationApiGetAppList200ResponseOcsData) *NullableUpdatenotificationApiGetAppList200ResponseOcsData {
	return &NullableUpdatenotificationApiGetAppList200ResponseOcsData{value: val, isSet: true}
}

func (v NullableUpdatenotificationApiGetAppList200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatenotificationApiGetAppList200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


