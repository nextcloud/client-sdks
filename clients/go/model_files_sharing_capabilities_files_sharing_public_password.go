/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingCapabilitiesFilesSharingPublicPassword type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingCapabilitiesFilesSharingPublicPassword{}

// FilesSharingCapabilitiesFilesSharingPublicPassword struct for FilesSharingCapabilitiesFilesSharingPublicPassword
type FilesSharingCapabilitiesFilesSharingPublicPassword struct {
	Enforced bool `json:"enforced"`
	AskForOptionalPassword bool `json:"askForOptionalPassword"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingCapabilitiesFilesSharingPublicPassword FilesSharingCapabilitiesFilesSharingPublicPassword

// NewFilesSharingCapabilitiesFilesSharingPublicPassword instantiates a new FilesSharingCapabilitiesFilesSharingPublicPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingCapabilitiesFilesSharingPublicPassword(enforced bool, askForOptionalPassword bool) *FilesSharingCapabilitiesFilesSharingPublicPassword {
	this := FilesSharingCapabilitiesFilesSharingPublicPassword{}
	this.Enforced = enforced
	this.AskForOptionalPassword = askForOptionalPassword
	return &this
}

// NewFilesSharingCapabilitiesFilesSharingPublicPasswordWithDefaults instantiates a new FilesSharingCapabilitiesFilesSharingPublicPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingCapabilitiesFilesSharingPublicPasswordWithDefaults() *FilesSharingCapabilitiesFilesSharingPublicPassword {
	this := FilesSharingCapabilitiesFilesSharingPublicPassword{}
	return &this
}

// GetEnforced returns the Enforced field value
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) GetEnforced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enforced
}

// GetEnforcedOk returns a tuple with the Enforced field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) GetEnforcedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enforced, true
}

// SetEnforced sets field value
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) SetEnforced(v bool) {
	o.Enforced = v
}

// GetAskForOptionalPassword returns the AskForOptionalPassword field value
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) GetAskForOptionalPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AskForOptionalPassword
}

// GetAskForOptionalPasswordOk returns a tuple with the AskForOptionalPassword field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) GetAskForOptionalPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AskForOptionalPassword, true
}

// SetAskForOptionalPassword sets field value
func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) SetAskForOptionalPassword(v bool) {
	o.AskForOptionalPassword = v
}

func (o FilesSharingCapabilitiesFilesSharingPublicPassword) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingCapabilitiesFilesSharingPublicPassword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enforced"] = o.Enforced
	toSerialize["askForOptionalPassword"] = o.AskForOptionalPassword

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingCapabilitiesFilesSharingPublicPassword) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingCapabilitiesFilesSharingPublicPassword := _FilesSharingCapabilitiesFilesSharingPublicPassword{}

	if err = json.Unmarshal(bytes, &varFilesSharingCapabilitiesFilesSharingPublicPassword); err == nil {
		*o = FilesSharingCapabilitiesFilesSharingPublicPassword(varFilesSharingCapabilitiesFilesSharingPublicPassword)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "enforced")
		delete(additionalProperties, "askForOptionalPassword")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingCapabilitiesFilesSharingPublicPassword struct {
	value *FilesSharingCapabilitiesFilesSharingPublicPassword
	isSet bool
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicPassword) Get() *FilesSharingCapabilitiesFilesSharingPublicPassword {
	return v.value
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicPassword) Set(val *FilesSharingCapabilitiesFilesSharingPublicPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingCapabilitiesFilesSharingPublicPassword(val *FilesSharingCapabilitiesFilesSharingPublicPassword) *NullableFilesSharingCapabilitiesFilesSharingPublicPassword {
	return &NullableFilesSharingCapabilitiesFilesSharingPublicPassword{value: val, isSet: true}
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


