/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the ProvisioningApiUserDetailsBackendCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiUserDetailsBackendCapabilities{}

// ProvisioningApiUserDetailsBackendCapabilities struct for ProvisioningApiUserDetailsBackendCapabilities
type ProvisioningApiUserDetailsBackendCapabilities struct {
	SetDisplayName bool `json:"setDisplayName"`
	SetPassword bool `json:"setPassword"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningApiUserDetailsBackendCapabilities ProvisioningApiUserDetailsBackendCapabilities

// NewProvisioningApiUserDetailsBackendCapabilities instantiates a new ProvisioningApiUserDetailsBackendCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiUserDetailsBackendCapabilities(setDisplayName bool, setPassword bool) *ProvisioningApiUserDetailsBackendCapabilities {
	this := ProvisioningApiUserDetailsBackendCapabilities{}
	this.SetDisplayName = setDisplayName
	this.SetPassword = setPassword
	return &this
}

// NewProvisioningApiUserDetailsBackendCapabilitiesWithDefaults instantiates a new ProvisioningApiUserDetailsBackendCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiUserDetailsBackendCapabilitiesWithDefaults() *ProvisioningApiUserDetailsBackendCapabilities {
	this := ProvisioningApiUserDetailsBackendCapabilities{}
	return &this
}

// GetSetDisplayName returns the SetDisplayName field value
func (o *ProvisioningApiUserDetailsBackendCapabilities) GetSetDisplayName() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SetDisplayName
}

// GetSetDisplayNameOk returns a tuple with the SetDisplayName field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetailsBackendCapabilities) GetSetDisplayNameOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SetDisplayName, true
}

// SetSetDisplayName sets field value
func (o *ProvisioningApiUserDetailsBackendCapabilities) SetSetDisplayName(v bool) {
	o.SetDisplayName = v
}

// GetSetPassword returns the SetPassword field value
func (o *ProvisioningApiUserDetailsBackendCapabilities) GetSetPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SetPassword
}

// GetSetPasswordOk returns a tuple with the SetPassword field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetailsBackendCapabilities) GetSetPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SetPassword, true
}

// SetSetPassword sets field value
func (o *ProvisioningApiUserDetailsBackendCapabilities) SetSetPassword(v bool) {
	o.SetPassword = v
}

func (o ProvisioningApiUserDetailsBackendCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiUserDetailsBackendCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["setDisplayName"] = o.SetDisplayName
	toSerialize["setPassword"] = o.SetPassword

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningApiUserDetailsBackendCapabilities) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningApiUserDetailsBackendCapabilities := _ProvisioningApiUserDetailsBackendCapabilities{}

	if err = json.Unmarshal(bytes, &varProvisioningApiUserDetailsBackendCapabilities); err == nil {
		*o = ProvisioningApiUserDetailsBackendCapabilities(varProvisioningApiUserDetailsBackendCapabilities)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "setDisplayName")
		delete(additionalProperties, "setPassword")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningApiUserDetailsBackendCapabilities struct {
	value *ProvisioningApiUserDetailsBackendCapabilities
	isSet bool
}

func (v NullableProvisioningApiUserDetailsBackendCapabilities) Get() *ProvisioningApiUserDetailsBackendCapabilities {
	return v.value
}

func (v *NullableProvisioningApiUserDetailsBackendCapabilities) Set(val *ProvisioningApiUserDetailsBackendCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiUserDetailsBackendCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiUserDetailsBackendCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiUserDetailsBackendCapabilities(val *ProvisioningApiUserDetailsBackendCapabilities) *NullableProvisioningApiUserDetailsBackendCapabilities {
	return &NullableProvisioningApiUserDetailsBackendCapabilities{value: val, isSet: true}
}

func (v NullableProvisioningApiUserDetailsBackendCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiUserDetailsBackendCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


