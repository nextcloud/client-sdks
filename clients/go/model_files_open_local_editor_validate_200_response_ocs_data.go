/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesOpenLocalEditorValidate200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesOpenLocalEditorValidate200ResponseOcsData{}

// FilesOpenLocalEditorValidate200ResponseOcsData struct for FilesOpenLocalEditorValidate200ResponseOcsData
type FilesOpenLocalEditorValidate200ResponseOcsData struct {
	UserId string `json:"userId"`
	PathHash string `json:"pathHash"`
	ExpirationTime int64 `json:"expirationTime"`
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _FilesOpenLocalEditorValidate200ResponseOcsData FilesOpenLocalEditorValidate200ResponseOcsData

// NewFilesOpenLocalEditorValidate200ResponseOcsData instantiates a new FilesOpenLocalEditorValidate200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesOpenLocalEditorValidate200ResponseOcsData(userId string, pathHash string, expirationTime int64, token string) *FilesOpenLocalEditorValidate200ResponseOcsData {
	this := FilesOpenLocalEditorValidate200ResponseOcsData{}
	this.UserId = userId
	this.PathHash = pathHash
	this.ExpirationTime = expirationTime
	this.Token = token
	return &this
}

// NewFilesOpenLocalEditorValidate200ResponseOcsDataWithDefaults instantiates a new FilesOpenLocalEditorValidate200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesOpenLocalEditorValidate200ResponseOcsDataWithDefaults() *FilesOpenLocalEditorValidate200ResponseOcsData {
	this := FilesOpenLocalEditorValidate200ResponseOcsData{}
	return &this
}

// GetUserId returns the UserId field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) SetUserId(v string) {
	o.UserId = v
}

// GetPathHash returns the PathHash field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetPathHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PathHash
}

// GetPathHashOk returns a tuple with the PathHash field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetPathHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathHash, true
}

// SetPathHash sets field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) SetPathHash(v string) {
	o.PathHash = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetExpirationTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetExpirationTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) SetExpirationTime(v int64) {
	o.ExpirationTime = v
}

// GetToken returns the Token field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FilesOpenLocalEditorValidate200ResponseOcsData) SetToken(v string) {
	o.Token = v
}

func (o FilesOpenLocalEditorValidate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesOpenLocalEditorValidate200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["pathHash"] = o.PathHash
	toSerialize["expirationTime"] = o.ExpirationTime
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesOpenLocalEditorValidate200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varFilesOpenLocalEditorValidate200ResponseOcsData := _FilesOpenLocalEditorValidate200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varFilesOpenLocalEditorValidate200ResponseOcsData); err == nil {
		*o = FilesOpenLocalEditorValidate200ResponseOcsData(varFilesOpenLocalEditorValidate200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "userId")
		delete(additionalProperties, "pathHash")
		delete(additionalProperties, "expirationTime")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesOpenLocalEditorValidate200ResponseOcsData struct {
	value *FilesOpenLocalEditorValidate200ResponseOcsData
	isSet bool
}

func (v NullableFilesOpenLocalEditorValidate200ResponseOcsData) Get() *FilesOpenLocalEditorValidate200ResponseOcsData {
	return v.value
}

func (v *NullableFilesOpenLocalEditorValidate200ResponseOcsData) Set(val *FilesOpenLocalEditorValidate200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesOpenLocalEditorValidate200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesOpenLocalEditorValidate200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesOpenLocalEditorValidate200ResponseOcsData(val *FilesOpenLocalEditorValidate200ResponseOcsData) *NullableFilesOpenLocalEditorValidate200ResponseOcsData {
	return &NullableFilesOpenLocalEditorValidate200ResponseOcsData{value: val, isSet: true}
}

func (v NullableFilesOpenLocalEditorValidate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesOpenLocalEditorValidate200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


