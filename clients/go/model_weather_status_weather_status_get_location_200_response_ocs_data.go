/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusWeatherStatusGetLocation200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusWeatherStatusGetLocation200ResponseOcsData{}

// WeatherStatusWeatherStatusGetLocation200ResponseOcsData struct for WeatherStatusWeatherStatusGetLocation200ResponseOcsData
type WeatherStatusWeatherStatusGetLocation200ResponseOcsData struct {
	Lat float32 `json:"lat"`
	Lon float32 `json:"lon"`
	Address string `json:"address"`
	Mode int64 `json:"mode"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusWeatherStatusGetLocation200ResponseOcsData WeatherStatusWeatherStatusGetLocation200ResponseOcsData

// NewWeatherStatusWeatherStatusGetLocation200ResponseOcsData instantiates a new WeatherStatusWeatherStatusGetLocation200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusWeatherStatusGetLocation200ResponseOcsData(lat float32, lon float32, address string, mode int64) *WeatherStatusWeatherStatusGetLocation200ResponseOcsData {
	this := WeatherStatusWeatherStatusGetLocation200ResponseOcsData{}
	this.Lat = lat
	this.Lon = lon
	this.Address = address
	this.Mode = mode
	return &this
}

// NewWeatherStatusWeatherStatusGetLocation200ResponseOcsDataWithDefaults instantiates a new WeatherStatusWeatherStatusGetLocation200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusWeatherStatusGetLocation200ResponseOcsDataWithDefaults() *WeatherStatusWeatherStatusGetLocation200ResponseOcsData {
	this := WeatherStatusWeatherStatusGetLocation200ResponseOcsData{}
	return &this
}

// GetLat returns the Lat field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetLat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lat
}

// GetLatOk returns a tuple with the Lat field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetLatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lat, true
}

// SetLat sets field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) SetLat(v float32) {
	o.Lat = v
}

// GetLon returns the Lon field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetLon() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lon
}

// GetLonOk returns a tuple with the Lon field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetLonOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lon, true
}

// SetLon sets field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) SetLon(v float32) {
	o.Lon = v
}

// GetAddress returns the Address field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) SetAddress(v string) {
	o.Address = v
}

// GetMode returns the Mode field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetMode() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) GetModeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) SetMode(v int64) {
	o.Mode = v
}

func (o WeatherStatusWeatherStatusGetLocation200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusWeatherStatusGetLocation200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lat"] = o.Lat
	toSerialize["lon"] = o.Lon
	toSerialize["address"] = o.Address
	toSerialize["mode"] = o.Mode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusWeatherStatusGetLocation200ResponseOcsData := _WeatherStatusWeatherStatusGetLocation200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varWeatherStatusWeatherStatusGetLocation200ResponseOcsData); err == nil {
		*o = WeatherStatusWeatherStatusGetLocation200ResponseOcsData(varWeatherStatusWeatherStatusGetLocation200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "lat")
		delete(additionalProperties, "lon")
		delete(additionalProperties, "address")
		delete(additionalProperties, "mode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData struct {
	value *WeatherStatusWeatherStatusGetLocation200ResponseOcsData
	isSet bool
}

func (v NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) Get() *WeatherStatusWeatherStatusGetLocation200ResponseOcsData {
	return v.value
}

func (v *NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) Set(val *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData(val *WeatherStatusWeatherStatusGetLocation200ResponseOcsData) *NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData {
	return &NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData{value: val, isSet: true}
}

func (v NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusWeatherStatusGetLocation200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


