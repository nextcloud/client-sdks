/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingCapabilitiesFilesSharingUserExpireDate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingCapabilitiesFilesSharingUserExpireDate{}

// FilesSharingCapabilitiesFilesSharingUserExpireDate struct for FilesSharingCapabilitiesFilesSharingUserExpireDate
type FilesSharingCapabilitiesFilesSharingUserExpireDate struct {
	Enabled bool `json:"enabled"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingCapabilitiesFilesSharingUserExpireDate FilesSharingCapabilitiesFilesSharingUserExpireDate

// NewFilesSharingCapabilitiesFilesSharingUserExpireDate instantiates a new FilesSharingCapabilitiesFilesSharingUserExpireDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingCapabilitiesFilesSharingUserExpireDate(enabled bool) *FilesSharingCapabilitiesFilesSharingUserExpireDate {
	this := FilesSharingCapabilitiesFilesSharingUserExpireDate{}
	this.Enabled = enabled
	return &this
}

// NewFilesSharingCapabilitiesFilesSharingUserExpireDateWithDefaults instantiates a new FilesSharingCapabilitiesFilesSharingUserExpireDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingCapabilitiesFilesSharingUserExpireDateWithDefaults() *FilesSharingCapabilitiesFilesSharingUserExpireDate {
	this := FilesSharingCapabilitiesFilesSharingUserExpireDate{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *FilesSharingCapabilitiesFilesSharingUserExpireDate) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingUserExpireDate) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *FilesSharingCapabilitiesFilesSharingUserExpireDate) SetEnabled(v bool) {
	o.Enabled = v
}

func (o FilesSharingCapabilitiesFilesSharingUserExpireDate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingCapabilitiesFilesSharingUserExpireDate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingCapabilitiesFilesSharingUserExpireDate) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingCapabilitiesFilesSharingUserExpireDate := _FilesSharingCapabilitiesFilesSharingUserExpireDate{}

	if err = json.Unmarshal(bytes, &varFilesSharingCapabilitiesFilesSharingUserExpireDate); err == nil {
		*o = FilesSharingCapabilitiesFilesSharingUserExpireDate(varFilesSharingCapabilitiesFilesSharingUserExpireDate)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingCapabilitiesFilesSharingUserExpireDate struct {
	value *FilesSharingCapabilitiesFilesSharingUserExpireDate
	isSet bool
}

func (v NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) Get() *FilesSharingCapabilitiesFilesSharingUserExpireDate {
	return v.value
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) Set(val *FilesSharingCapabilitiesFilesSharingUserExpireDate) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingCapabilitiesFilesSharingUserExpireDate(val *FilesSharingCapabilitiesFilesSharingUserExpireDate) *NullableFilesSharingCapabilitiesFilesSharingUserExpireDate {
	return &NullableFilesSharingCapabilitiesFilesSharingUserExpireDate{value: val, isSet: true}
}

func (v NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUserExpireDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


