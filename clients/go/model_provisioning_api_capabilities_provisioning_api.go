/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the ProvisioningApiCapabilitiesProvisioningApi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiCapabilitiesProvisioningApi{}

// ProvisioningApiCapabilitiesProvisioningApi struct for ProvisioningApiCapabilitiesProvisioningApi
type ProvisioningApiCapabilitiesProvisioningApi struct {
	Version string `json:"version"`
	AccountPropertyScopesVersion int64 `json:"AccountPropertyScopesVersion"`
	AccountPropertyScopesFederatedEnabled bool `json:"AccountPropertyScopesFederatedEnabled"`
	AccountPropertyScopesPublishedEnabled bool `json:"AccountPropertyScopesPublishedEnabled"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningApiCapabilitiesProvisioningApi ProvisioningApiCapabilitiesProvisioningApi

// NewProvisioningApiCapabilitiesProvisioningApi instantiates a new ProvisioningApiCapabilitiesProvisioningApi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiCapabilitiesProvisioningApi(version string, accountPropertyScopesVersion int64, accountPropertyScopesFederatedEnabled bool, accountPropertyScopesPublishedEnabled bool) *ProvisioningApiCapabilitiesProvisioningApi {
	this := ProvisioningApiCapabilitiesProvisioningApi{}
	this.Version = version
	this.AccountPropertyScopesVersion = accountPropertyScopesVersion
	this.AccountPropertyScopesFederatedEnabled = accountPropertyScopesFederatedEnabled
	this.AccountPropertyScopesPublishedEnabled = accountPropertyScopesPublishedEnabled
	return &this
}

// NewProvisioningApiCapabilitiesProvisioningApiWithDefaults instantiates a new ProvisioningApiCapabilitiesProvisioningApi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiCapabilitiesProvisioningApiWithDefaults() *ProvisioningApiCapabilitiesProvisioningApi {
	this := ProvisioningApiCapabilitiesProvisioningApi{}
	return &this
}

// GetVersion returns the Version field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) SetVersion(v string) {
	o.Version = v
}

// GetAccountPropertyScopesVersion returns the AccountPropertyScopesVersion field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountPropertyScopesVersion
}

// GetAccountPropertyScopesVersionOk returns a tuple with the AccountPropertyScopesVersion field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountPropertyScopesVersion, true
}

// SetAccountPropertyScopesVersion sets field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) SetAccountPropertyScopesVersion(v int64) {
	o.AccountPropertyScopesVersion = v
}

// GetAccountPropertyScopesFederatedEnabled returns the AccountPropertyScopesFederatedEnabled field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesFederatedEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AccountPropertyScopesFederatedEnabled
}

// GetAccountPropertyScopesFederatedEnabledOk returns a tuple with the AccountPropertyScopesFederatedEnabled field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesFederatedEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountPropertyScopesFederatedEnabled, true
}

// SetAccountPropertyScopesFederatedEnabled sets field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) SetAccountPropertyScopesFederatedEnabled(v bool) {
	o.AccountPropertyScopesFederatedEnabled = v
}

// GetAccountPropertyScopesPublishedEnabled returns the AccountPropertyScopesPublishedEnabled field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesPublishedEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AccountPropertyScopesPublishedEnabled
}

// GetAccountPropertyScopesPublishedEnabledOk returns a tuple with the AccountPropertyScopesPublishedEnabled field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiCapabilitiesProvisioningApi) GetAccountPropertyScopesPublishedEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountPropertyScopesPublishedEnabled, true
}

// SetAccountPropertyScopesPublishedEnabled sets field value
func (o *ProvisioningApiCapabilitiesProvisioningApi) SetAccountPropertyScopesPublishedEnabled(v bool) {
	o.AccountPropertyScopesPublishedEnabled = v
}

func (o ProvisioningApiCapabilitiesProvisioningApi) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiCapabilitiesProvisioningApi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["AccountPropertyScopesVersion"] = o.AccountPropertyScopesVersion
	toSerialize["AccountPropertyScopesFederatedEnabled"] = o.AccountPropertyScopesFederatedEnabled
	toSerialize["AccountPropertyScopesPublishedEnabled"] = o.AccountPropertyScopesPublishedEnabled

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningApiCapabilitiesProvisioningApi) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningApiCapabilitiesProvisioningApi := _ProvisioningApiCapabilitiesProvisioningApi{}

	if err = json.Unmarshal(bytes, &varProvisioningApiCapabilitiesProvisioningApi); err == nil {
		*o = ProvisioningApiCapabilitiesProvisioningApi(varProvisioningApiCapabilitiesProvisioningApi)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "version")
		delete(additionalProperties, "AccountPropertyScopesVersion")
		delete(additionalProperties, "AccountPropertyScopesFederatedEnabled")
		delete(additionalProperties, "AccountPropertyScopesPublishedEnabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningApiCapabilitiesProvisioningApi struct {
	value *ProvisioningApiCapabilitiesProvisioningApi
	isSet bool
}

func (v NullableProvisioningApiCapabilitiesProvisioningApi) Get() *ProvisioningApiCapabilitiesProvisioningApi {
	return v.value
}

func (v *NullableProvisioningApiCapabilitiesProvisioningApi) Set(val *ProvisioningApiCapabilitiesProvisioningApi) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiCapabilitiesProvisioningApi) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiCapabilitiesProvisioningApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiCapabilitiesProvisioningApi(val *ProvisioningApiCapabilitiesProvisioningApi) *NullableProvisioningApiCapabilitiesProvisioningApi {
	return &NullableProvisioningApiCapabilitiesProvisioningApi{value: val, isSet: true}
}

func (v NullableProvisioningApiCapabilitiesProvisioningApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiCapabilitiesProvisioningApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


