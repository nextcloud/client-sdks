/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the ThemingPublicCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThemingPublicCapabilities{}

// ThemingPublicCapabilities struct for ThemingPublicCapabilities
type ThemingPublicCapabilities struct {
	Theming ThemingPublicCapabilitiesTheming `json:"theming"`
	AdditionalProperties map[string]interface{}
}

type _ThemingPublicCapabilities ThemingPublicCapabilities

// NewThemingPublicCapabilities instantiates a new ThemingPublicCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThemingPublicCapabilities(theming ThemingPublicCapabilitiesTheming) *ThemingPublicCapabilities {
	this := ThemingPublicCapabilities{}
	this.Theming = theming
	return &this
}

// NewThemingPublicCapabilitiesWithDefaults instantiates a new ThemingPublicCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThemingPublicCapabilitiesWithDefaults() *ThemingPublicCapabilities {
	this := ThemingPublicCapabilities{}
	return &this
}

// GetTheming returns the Theming field value
func (o *ThemingPublicCapabilities) GetTheming() ThemingPublicCapabilitiesTheming {
	if o == nil {
		var ret ThemingPublicCapabilitiesTheming
		return ret
	}

	return o.Theming
}

// GetThemingOk returns a tuple with the Theming field value
// and a boolean to check if the value has been set.
func (o *ThemingPublicCapabilities) GetThemingOk() (*ThemingPublicCapabilitiesTheming, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Theming, true
}

// SetTheming sets field value
func (o *ThemingPublicCapabilities) SetTheming(v ThemingPublicCapabilitiesTheming) {
	o.Theming = v
}

func (o ThemingPublicCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThemingPublicCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["theming"] = o.Theming

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ThemingPublicCapabilities) UnmarshalJSON(bytes []byte) (err error) {
	varThemingPublicCapabilities := _ThemingPublicCapabilities{}

	if err = json.Unmarshal(bytes, &varThemingPublicCapabilities); err == nil {
		*o = ThemingPublicCapabilities(varThemingPublicCapabilities)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "theming")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableThemingPublicCapabilities struct {
	value *ThemingPublicCapabilities
	isSet bool
}

func (v NullableThemingPublicCapabilities) Get() *ThemingPublicCapabilities {
	return v.value
}

func (v *NullableThemingPublicCapabilities) Set(val *ThemingPublicCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableThemingPublicCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableThemingPublicCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThemingPublicCapabilities(val *ThemingPublicCapabilities) *NullableThemingPublicCapabilities {
	return &NullableThemingPublicCapabilities{value: val, isSet: true}
}

func (v NullableThemingPublicCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThemingPublicCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


