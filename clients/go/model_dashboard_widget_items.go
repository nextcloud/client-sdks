/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the DashboardWidgetItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardWidgetItems{}

// DashboardWidgetItems struct for DashboardWidgetItems
type DashboardWidgetItems struct {
	Items []DashboardWidgetItem `json:"items"`
	EmptyContentMessage string `json:"emptyContentMessage"`
	HalfEmptyContentMessage string `json:"halfEmptyContentMessage"`
	AdditionalProperties map[string]interface{}
}

type _DashboardWidgetItems DashboardWidgetItems

// NewDashboardWidgetItems instantiates a new DashboardWidgetItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardWidgetItems(items []DashboardWidgetItem, emptyContentMessage string, halfEmptyContentMessage string) *DashboardWidgetItems {
	this := DashboardWidgetItems{}
	this.Items = items
	this.EmptyContentMessage = emptyContentMessage
	this.HalfEmptyContentMessage = halfEmptyContentMessage
	return &this
}

// NewDashboardWidgetItemsWithDefaults instantiates a new DashboardWidgetItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardWidgetItemsWithDefaults() *DashboardWidgetItems {
	this := DashboardWidgetItems{}
	return &this
}

// GetItems returns the Items field value
func (o *DashboardWidgetItems) GetItems() []DashboardWidgetItem {
	if o == nil {
		var ret []DashboardWidgetItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetItems) GetItemsOk() ([]DashboardWidgetItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *DashboardWidgetItems) SetItems(v []DashboardWidgetItem) {
	o.Items = v
}

// GetEmptyContentMessage returns the EmptyContentMessage field value
func (o *DashboardWidgetItems) GetEmptyContentMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmptyContentMessage
}

// GetEmptyContentMessageOk returns a tuple with the EmptyContentMessage field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetItems) GetEmptyContentMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmptyContentMessage, true
}

// SetEmptyContentMessage sets field value
func (o *DashboardWidgetItems) SetEmptyContentMessage(v string) {
	o.EmptyContentMessage = v
}

// GetHalfEmptyContentMessage returns the HalfEmptyContentMessage field value
func (o *DashboardWidgetItems) GetHalfEmptyContentMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HalfEmptyContentMessage
}

// GetHalfEmptyContentMessageOk returns a tuple with the HalfEmptyContentMessage field value
// and a boolean to check if the value has been set.
func (o *DashboardWidgetItems) GetHalfEmptyContentMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HalfEmptyContentMessage, true
}

// SetHalfEmptyContentMessage sets field value
func (o *DashboardWidgetItems) SetHalfEmptyContentMessage(v string) {
	o.HalfEmptyContentMessage = v
}

func (o DashboardWidgetItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardWidgetItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["emptyContentMessage"] = o.EmptyContentMessage
	toSerialize["halfEmptyContentMessage"] = o.HalfEmptyContentMessage

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DashboardWidgetItems) UnmarshalJSON(bytes []byte) (err error) {
	varDashboardWidgetItems := _DashboardWidgetItems{}

	if err = json.Unmarshal(bytes, &varDashboardWidgetItems); err == nil {
		*o = DashboardWidgetItems(varDashboardWidgetItems)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "items")
		delete(additionalProperties, "emptyContentMessage")
		delete(additionalProperties, "halfEmptyContentMessage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDashboardWidgetItems struct {
	value *DashboardWidgetItems
	isSet bool
}

func (v NullableDashboardWidgetItems) Get() *DashboardWidgetItems {
	return v.value
}

func (v *NullableDashboardWidgetItems) Set(val *DashboardWidgetItems) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardWidgetItems) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardWidgetItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardWidgetItems(val *DashboardWidgetItems) *NullableDashboardWidgetItems {
	return &NullableDashboardWidgetItems{value: val, isSet: true}
}

func (v NullableDashboardWidgetItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardWidgetItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


