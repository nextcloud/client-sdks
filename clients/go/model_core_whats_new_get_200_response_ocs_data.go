/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the CoreWhatsNewGet200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreWhatsNewGet200ResponseOcsData{}

// CoreWhatsNewGet200ResponseOcsData struct for CoreWhatsNewGet200ResponseOcsData
type CoreWhatsNewGet200ResponseOcsData struct {
	ChangelogURL string `json:"changelogURL"`
	Product string `json:"product"`
	Version string `json:"version"`
	WhatsNew *CoreWhatsNewGet200ResponseOcsDataWhatsNew `json:"whatsNew,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CoreWhatsNewGet200ResponseOcsData CoreWhatsNewGet200ResponseOcsData

// NewCoreWhatsNewGet200ResponseOcsData instantiates a new CoreWhatsNewGet200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreWhatsNewGet200ResponseOcsData(changelogURL string, product string, version string) *CoreWhatsNewGet200ResponseOcsData {
	this := CoreWhatsNewGet200ResponseOcsData{}
	this.ChangelogURL = changelogURL
	this.Product = product
	this.Version = version
	return &this
}

// NewCoreWhatsNewGet200ResponseOcsDataWithDefaults instantiates a new CoreWhatsNewGet200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreWhatsNewGet200ResponseOcsDataWithDefaults() *CoreWhatsNewGet200ResponseOcsData {
	this := CoreWhatsNewGet200ResponseOcsData{}
	return &this
}

// GetChangelogURL returns the ChangelogURL field value
func (o *CoreWhatsNewGet200ResponseOcsData) GetChangelogURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChangelogURL
}

// GetChangelogURLOk returns a tuple with the ChangelogURL field value
// and a boolean to check if the value has been set.
func (o *CoreWhatsNewGet200ResponseOcsData) GetChangelogURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangelogURL, true
}

// SetChangelogURL sets field value
func (o *CoreWhatsNewGet200ResponseOcsData) SetChangelogURL(v string) {
	o.ChangelogURL = v
}

// GetProduct returns the Product field value
func (o *CoreWhatsNewGet200ResponseOcsData) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *CoreWhatsNewGet200ResponseOcsData) GetProductOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *CoreWhatsNewGet200ResponseOcsData) SetProduct(v string) {
	o.Product = v
}

// GetVersion returns the Version field value
func (o *CoreWhatsNewGet200ResponseOcsData) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CoreWhatsNewGet200ResponseOcsData) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CoreWhatsNewGet200ResponseOcsData) SetVersion(v string) {
	o.Version = v
}

// GetWhatsNew returns the WhatsNew field value if set, zero value otherwise.
func (o *CoreWhatsNewGet200ResponseOcsData) GetWhatsNew() CoreWhatsNewGet200ResponseOcsDataWhatsNew {
	if o == nil || IsNil(o.WhatsNew) {
		var ret CoreWhatsNewGet200ResponseOcsDataWhatsNew
		return ret
	}
	return *o.WhatsNew
}

// GetWhatsNewOk returns a tuple with the WhatsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreWhatsNewGet200ResponseOcsData) GetWhatsNewOk() (*CoreWhatsNewGet200ResponseOcsDataWhatsNew, bool) {
	if o == nil || IsNil(o.WhatsNew) {
		return nil, false
	}
	return o.WhatsNew, true
}

// HasWhatsNew returns a boolean if a field has been set.
func (o *CoreWhatsNewGet200ResponseOcsData) HasWhatsNew() bool {
	if o != nil && !IsNil(o.WhatsNew) {
		return true
	}

	return false
}

// SetWhatsNew gets a reference to the given CoreWhatsNewGet200ResponseOcsDataWhatsNew and assigns it to the WhatsNew field.
func (o *CoreWhatsNewGet200ResponseOcsData) SetWhatsNew(v CoreWhatsNewGet200ResponseOcsDataWhatsNew) {
	o.WhatsNew = &v
}

func (o CoreWhatsNewGet200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreWhatsNewGet200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["changelogURL"] = o.ChangelogURL
	toSerialize["product"] = o.Product
	toSerialize["version"] = o.Version
	if !IsNil(o.WhatsNew) {
		toSerialize["whatsNew"] = o.WhatsNew
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CoreWhatsNewGet200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varCoreWhatsNewGet200ResponseOcsData := _CoreWhatsNewGet200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varCoreWhatsNewGet200ResponseOcsData); err == nil {
		*o = CoreWhatsNewGet200ResponseOcsData(varCoreWhatsNewGet200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "changelogURL")
		delete(additionalProperties, "product")
		delete(additionalProperties, "version")
		delete(additionalProperties, "whatsNew")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCoreWhatsNewGet200ResponseOcsData struct {
	value *CoreWhatsNewGet200ResponseOcsData
	isSet bool
}

func (v NullableCoreWhatsNewGet200ResponseOcsData) Get() *CoreWhatsNewGet200ResponseOcsData {
	return v.value
}

func (v *NullableCoreWhatsNewGet200ResponseOcsData) Set(val *CoreWhatsNewGet200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreWhatsNewGet200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreWhatsNewGet200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreWhatsNewGet200ResponseOcsData(val *CoreWhatsNewGet200ResponseOcsData) *NullableCoreWhatsNewGet200ResponseOcsData {
	return &NullableCoreWhatsNewGet200ResponseOcsData{value: val, isSet: true}
}

func (v NullableCoreWhatsNewGet200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreWhatsNewGet200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


