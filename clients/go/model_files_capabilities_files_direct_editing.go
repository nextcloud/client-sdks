/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesCapabilitiesFilesDirectEditing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesCapabilitiesFilesDirectEditing{}

// FilesCapabilitiesFilesDirectEditing struct for FilesCapabilitiesFilesDirectEditing
type FilesCapabilitiesFilesDirectEditing struct {
	Url string `json:"url"`
	Etag string `json:"etag"`
	SupportsFileId bool `json:"supportsFileId"`
	AdditionalProperties map[string]interface{}
}

type _FilesCapabilitiesFilesDirectEditing FilesCapabilitiesFilesDirectEditing

// NewFilesCapabilitiesFilesDirectEditing instantiates a new FilesCapabilitiesFilesDirectEditing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesCapabilitiesFilesDirectEditing(url string, etag string, supportsFileId bool) *FilesCapabilitiesFilesDirectEditing {
	this := FilesCapabilitiesFilesDirectEditing{}
	this.Url = url
	this.Etag = etag
	this.SupportsFileId = supportsFileId
	return &this
}

// NewFilesCapabilitiesFilesDirectEditingWithDefaults instantiates a new FilesCapabilitiesFilesDirectEditing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesCapabilitiesFilesDirectEditingWithDefaults() *FilesCapabilitiesFilesDirectEditing {
	this := FilesCapabilitiesFilesDirectEditing{}
	return &this
}

// GetUrl returns the Url field value
func (o *FilesCapabilitiesFilesDirectEditing) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FilesCapabilitiesFilesDirectEditing) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FilesCapabilitiesFilesDirectEditing) SetUrl(v string) {
	o.Url = v
}

// GetEtag returns the Etag field value
func (o *FilesCapabilitiesFilesDirectEditing) GetEtag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Etag
}

// GetEtagOk returns a tuple with the Etag field value
// and a boolean to check if the value has been set.
func (o *FilesCapabilitiesFilesDirectEditing) GetEtagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Etag, true
}

// SetEtag sets field value
func (o *FilesCapabilitiesFilesDirectEditing) SetEtag(v string) {
	o.Etag = v
}

// GetSupportsFileId returns the SupportsFileId field value
func (o *FilesCapabilitiesFilesDirectEditing) GetSupportsFileId() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SupportsFileId
}

// GetSupportsFileIdOk returns a tuple with the SupportsFileId field value
// and a boolean to check if the value has been set.
func (o *FilesCapabilitiesFilesDirectEditing) GetSupportsFileIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportsFileId, true
}

// SetSupportsFileId sets field value
func (o *FilesCapabilitiesFilesDirectEditing) SetSupportsFileId(v bool) {
	o.SupportsFileId = v
}

func (o FilesCapabilitiesFilesDirectEditing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesCapabilitiesFilesDirectEditing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["etag"] = o.Etag
	toSerialize["supportsFileId"] = o.SupportsFileId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesCapabilitiesFilesDirectEditing) UnmarshalJSON(bytes []byte) (err error) {
	varFilesCapabilitiesFilesDirectEditing := _FilesCapabilitiesFilesDirectEditing{}

	if err = json.Unmarshal(bytes, &varFilesCapabilitiesFilesDirectEditing); err == nil {
		*o = FilesCapabilitiesFilesDirectEditing(varFilesCapabilitiesFilesDirectEditing)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "etag")
		delete(additionalProperties, "supportsFileId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesCapabilitiesFilesDirectEditing struct {
	value *FilesCapabilitiesFilesDirectEditing
	isSet bool
}

func (v NullableFilesCapabilitiesFilesDirectEditing) Get() *FilesCapabilitiesFilesDirectEditing {
	return v.value
}

func (v *NullableFilesCapabilitiesFilesDirectEditing) Set(val *FilesCapabilitiesFilesDirectEditing) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesCapabilitiesFilesDirectEditing) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesCapabilitiesFilesDirectEditing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesCapabilitiesFilesDirectEditing(val *FilesCapabilitiesFilesDirectEditing) *NullableFilesCapabilitiesFilesDirectEditing {
	return &NullableFilesCapabilitiesFilesDirectEditing{value: val, isSet: true}
}

func (v NullableFilesCapabilitiesFilesDirectEditing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesCapabilitiesFilesDirectEditing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


