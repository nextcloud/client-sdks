/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the CoreTranslationApiTranslate200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTranslationApiTranslate200ResponseOcsData{}

// CoreTranslationApiTranslate200ResponseOcsData struct for CoreTranslationApiTranslate200ResponseOcsData
type CoreTranslationApiTranslate200ResponseOcsData struct {
	Text string `json:"text"`
	From NullableString `json:"from"`
	AdditionalProperties map[string]interface{}
}

type _CoreTranslationApiTranslate200ResponseOcsData CoreTranslationApiTranslate200ResponseOcsData

// NewCoreTranslationApiTranslate200ResponseOcsData instantiates a new CoreTranslationApiTranslate200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTranslationApiTranslate200ResponseOcsData(text string, from NullableString) *CoreTranslationApiTranslate200ResponseOcsData {
	this := CoreTranslationApiTranslate200ResponseOcsData{}
	this.Text = text
	this.From = from
	return &this
}

// NewCoreTranslationApiTranslate200ResponseOcsDataWithDefaults instantiates a new CoreTranslationApiTranslate200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTranslationApiTranslate200ResponseOcsDataWithDefaults() *CoreTranslationApiTranslate200ResponseOcsData {
	this := CoreTranslationApiTranslate200ResponseOcsData{}
	return &this
}

// GetText returns the Text field value
func (o *CoreTranslationApiTranslate200ResponseOcsData) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CoreTranslationApiTranslate200ResponseOcsData) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CoreTranslationApiTranslate200ResponseOcsData) SetText(v string) {
	o.Text = v
}

// GetFrom returns the From field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CoreTranslationApiTranslate200ResponseOcsData) GetFrom() string {
	if o == nil || o.From.Get() == nil {
		var ret string
		return ret
	}

	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoreTranslationApiTranslate200ResponseOcsData) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// SetFrom sets field value
func (o *CoreTranslationApiTranslate200ResponseOcsData) SetFrom(v string) {
	o.From.Set(&v)
}

func (o CoreTranslationApiTranslate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTranslationApiTranslate200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	toSerialize["from"] = o.From.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CoreTranslationApiTranslate200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varCoreTranslationApiTranslate200ResponseOcsData := _CoreTranslationApiTranslate200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varCoreTranslationApiTranslate200ResponseOcsData); err == nil {
		*o = CoreTranslationApiTranslate200ResponseOcsData(varCoreTranslationApiTranslate200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "text")
		delete(additionalProperties, "from")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCoreTranslationApiTranslate200ResponseOcsData struct {
	value *CoreTranslationApiTranslate200ResponseOcsData
	isSet bool
}

func (v NullableCoreTranslationApiTranslate200ResponseOcsData) Get() *CoreTranslationApiTranslate200ResponseOcsData {
	return v.value
}

func (v *NullableCoreTranslationApiTranslate200ResponseOcsData) Set(val *CoreTranslationApiTranslate200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTranslationApiTranslate200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTranslationApiTranslate200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTranslationApiTranslate200ResponseOcsData(val *CoreTranslationApiTranslate200ResponseOcsData) *NullableCoreTranslationApiTranslate200ResponseOcsData {
	return &NullableCoreTranslationApiTranslate200ResponseOcsData{value: val, isSet: true}
}

func (v NullableCoreTranslationApiTranslate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTranslationApiTranslate200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


