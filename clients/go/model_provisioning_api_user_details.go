/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the ProvisioningApiUserDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningApiUserDetails{}

// ProvisioningApiUserDetails struct for ProvisioningApiUserDetails
type ProvisioningApiUserDetails struct {
	AdditionalMail []string `json:"additional_mail"`
	AdditionalMailScope []string `json:"additional_mailScope,omitempty"`
	Address string `json:"address"`
	AddressScope *string `json:"addressScope,omitempty"`
	AvatarScope *string `json:"avatarScope,omitempty"`
	Backend string `json:"backend"`
	BackendCapabilities ProvisioningApiUserDetailsBackendCapabilities `json:"backendCapabilities"`
	Biography string `json:"biography"`
	BiographyScope *string `json:"biographyScope,omitempty"`
	DisplayName string `json:"display-name"`
	Displayname string `json:"displayname"`
	DisplaynameScope *string `json:"displaynameScope,omitempty"`
	Email NullableString `json:"email"`
	EmailScope *string `json:"emailScope,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Fediverse string `json:"fediverse"`
	FediverseScope *string `json:"fediverseScope,omitempty"`
	Groups []string `json:"groups"`
	Headline string `json:"headline"`
	HeadlineScope *string `json:"headlineScope,omitempty"`
	Id string `json:"id"`
	Language string `json:"language"`
	LastLogin int64 `json:"lastLogin"`
	Locale string `json:"locale"`
	Manager string `json:"manager"`
	NotifyEmail NullableString `json:"notify_email"`
	Organisation string `json:"organisation"`
	OrganisationScope *string `json:"organisationScope,omitempty"`
	Phone string `json:"phone"`
	PhoneScope *string `json:"phoneScope,omitempty"`
	ProfileEnabled string `json:"profile_enabled"`
	ProfileEnabledScope *string `json:"profile_enabledScope,omitempty"`
	Quota ProvisioningApiUserDetailsQuota `json:"quota"`
	Role string `json:"role"`
	RoleScope *string `json:"roleScope,omitempty"`
	StorageLocation *string `json:"storageLocation,omitempty"`
	Subadmin []string `json:"subadmin"`
	Twitter string `json:"twitter"`
	TwitterScope *string `json:"twitterScope,omitempty"`
	Website string `json:"website"`
	WebsiteScope *string `json:"websiteScope,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningApiUserDetails ProvisioningApiUserDetails

// NewProvisioningApiUserDetails instantiates a new ProvisioningApiUserDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningApiUserDetails(additionalMail []string, address string, backend string, backendCapabilities ProvisioningApiUserDetailsBackendCapabilities, biography string, displayName string, displayname string, email NullableString, fediverse string, groups []string, headline string, id string, language string, lastLogin int64, locale string, manager string, notifyEmail NullableString, organisation string, phone string, profileEnabled string, quota ProvisioningApiUserDetailsQuota, role string, subadmin []string, twitter string, website string) *ProvisioningApiUserDetails {
	this := ProvisioningApiUserDetails{}
	this.AdditionalMail = additionalMail
	this.Address = address
	this.Backend = backend
	this.BackendCapabilities = backendCapabilities
	this.Biography = biography
	this.DisplayName = displayName
	this.Displayname = displayname
	this.Email = email
	this.Fediverse = fediverse
	this.Groups = groups
	this.Headline = headline
	this.Id = id
	this.Language = language
	this.LastLogin = lastLogin
	this.Locale = locale
	this.Manager = manager
	this.NotifyEmail = notifyEmail
	this.Organisation = organisation
	this.Phone = phone
	this.ProfileEnabled = profileEnabled
	this.Quota = quota
	this.Role = role
	this.Subadmin = subadmin
	this.Twitter = twitter
	this.Website = website
	return &this
}

// NewProvisioningApiUserDetailsWithDefaults instantiates a new ProvisioningApiUserDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningApiUserDetailsWithDefaults() *ProvisioningApiUserDetails {
	this := ProvisioningApiUserDetails{}
	return &this
}

// GetAdditionalMail returns the AdditionalMail field value
func (o *ProvisioningApiUserDetails) GetAdditionalMail() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AdditionalMail
}

// GetAdditionalMailOk returns a tuple with the AdditionalMail field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetAdditionalMailOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdditionalMail, true
}

// SetAdditionalMail sets field value
func (o *ProvisioningApiUserDetails) SetAdditionalMail(v []string) {
	o.AdditionalMail = v
}

// GetAdditionalMailScope returns the AdditionalMailScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetAdditionalMailScope() []string {
	if o == nil || IsNil(o.AdditionalMailScope) {
		var ret []string
		return ret
	}
	return o.AdditionalMailScope
}

// GetAdditionalMailScopeOk returns a tuple with the AdditionalMailScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetAdditionalMailScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalMailScope) {
		return nil, false
	}
	return o.AdditionalMailScope, true
}

// HasAdditionalMailScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasAdditionalMailScope() bool {
	if o != nil && !IsNil(o.AdditionalMailScope) {
		return true
	}

	return false
}

// SetAdditionalMailScope gets a reference to the given []string and assigns it to the AdditionalMailScope field.
func (o *ProvisioningApiUserDetails) SetAdditionalMailScope(v []string) {
	o.AdditionalMailScope = v
}

// GetAddress returns the Address field value
func (o *ProvisioningApiUserDetails) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ProvisioningApiUserDetails) SetAddress(v string) {
	o.Address = v
}

// GetAddressScope returns the AddressScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetAddressScope() string {
	if o == nil || IsNil(o.AddressScope) {
		var ret string
		return ret
	}
	return *o.AddressScope
}

// GetAddressScopeOk returns a tuple with the AddressScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetAddressScopeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressScope) {
		return nil, false
	}
	return o.AddressScope, true
}

// HasAddressScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasAddressScope() bool {
	if o != nil && !IsNil(o.AddressScope) {
		return true
	}

	return false
}

// SetAddressScope gets a reference to the given string and assigns it to the AddressScope field.
func (o *ProvisioningApiUserDetails) SetAddressScope(v string) {
	o.AddressScope = &v
}

// GetAvatarScope returns the AvatarScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetAvatarScope() string {
	if o == nil || IsNil(o.AvatarScope) {
		var ret string
		return ret
	}
	return *o.AvatarScope
}

// GetAvatarScopeOk returns a tuple with the AvatarScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetAvatarScopeOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarScope) {
		return nil, false
	}
	return o.AvatarScope, true
}

// HasAvatarScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasAvatarScope() bool {
	if o != nil && !IsNil(o.AvatarScope) {
		return true
	}

	return false
}

// SetAvatarScope gets a reference to the given string and assigns it to the AvatarScope field.
func (o *ProvisioningApiUserDetails) SetAvatarScope(v string) {
	o.AvatarScope = &v
}

// GetBackend returns the Backend field value
func (o *ProvisioningApiUserDetails) GetBackend() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Backend
}

// GetBackendOk returns a tuple with the Backend field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetBackendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Backend, true
}

// SetBackend sets field value
func (o *ProvisioningApiUserDetails) SetBackend(v string) {
	o.Backend = v
}

// GetBackendCapabilities returns the BackendCapabilities field value
func (o *ProvisioningApiUserDetails) GetBackendCapabilities() ProvisioningApiUserDetailsBackendCapabilities {
	if o == nil {
		var ret ProvisioningApiUserDetailsBackendCapabilities
		return ret
	}

	return o.BackendCapabilities
}

// GetBackendCapabilitiesOk returns a tuple with the BackendCapabilities field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetBackendCapabilitiesOk() (*ProvisioningApiUserDetailsBackendCapabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackendCapabilities, true
}

// SetBackendCapabilities sets field value
func (o *ProvisioningApiUserDetails) SetBackendCapabilities(v ProvisioningApiUserDetailsBackendCapabilities) {
	o.BackendCapabilities = v
}

// GetBiography returns the Biography field value
func (o *ProvisioningApiUserDetails) GetBiography() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Biography
}

// GetBiographyOk returns a tuple with the Biography field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetBiographyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Biography, true
}

// SetBiography sets field value
func (o *ProvisioningApiUserDetails) SetBiography(v string) {
	o.Biography = v
}

// GetBiographyScope returns the BiographyScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetBiographyScope() string {
	if o == nil || IsNil(o.BiographyScope) {
		var ret string
		return ret
	}
	return *o.BiographyScope
}

// GetBiographyScopeOk returns a tuple with the BiographyScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetBiographyScopeOk() (*string, bool) {
	if o == nil || IsNil(o.BiographyScope) {
		return nil, false
	}
	return o.BiographyScope, true
}

// HasBiographyScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasBiographyScope() bool {
	if o != nil && !IsNil(o.BiographyScope) {
		return true
	}

	return false
}

// SetBiographyScope gets a reference to the given string and assigns it to the BiographyScope field.
func (o *ProvisioningApiUserDetails) SetBiographyScope(v string) {
	o.BiographyScope = &v
}

// GetDisplayName returns the DisplayName field value
func (o *ProvisioningApiUserDetails) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ProvisioningApiUserDetails) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDisplayname returns the Displayname field value
func (o *ProvisioningApiUserDetails) GetDisplayname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Displayname
}

// GetDisplaynameOk returns a tuple with the Displayname field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetDisplaynameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Displayname, true
}

// SetDisplayname sets field value
func (o *ProvisioningApiUserDetails) SetDisplayname(v string) {
	o.Displayname = v
}

// GetDisplaynameScope returns the DisplaynameScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetDisplaynameScope() string {
	if o == nil || IsNil(o.DisplaynameScope) {
		var ret string
		return ret
	}
	return *o.DisplaynameScope
}

// GetDisplaynameScopeOk returns a tuple with the DisplaynameScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetDisplaynameScopeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplaynameScope) {
		return nil, false
	}
	return o.DisplaynameScope, true
}

// HasDisplaynameScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasDisplaynameScope() bool {
	if o != nil && !IsNil(o.DisplaynameScope) {
		return true
	}

	return false
}

// SetDisplaynameScope gets a reference to the given string and assigns it to the DisplaynameScope field.
func (o *ProvisioningApiUserDetails) SetDisplaynameScope(v string) {
	o.DisplaynameScope = &v
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProvisioningApiUserDetails) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}

	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiUserDetails) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// SetEmail sets field value
func (o *ProvisioningApiUserDetails) SetEmail(v string) {
	o.Email.Set(&v)
}

// GetEmailScope returns the EmailScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetEmailScope() string {
	if o == nil || IsNil(o.EmailScope) {
		var ret string
		return ret
	}
	return *o.EmailScope
}

// GetEmailScopeOk returns a tuple with the EmailScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetEmailScopeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailScope) {
		return nil, false
	}
	return o.EmailScope, true
}

// HasEmailScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasEmailScope() bool {
	if o != nil && !IsNil(o.EmailScope) {
		return true
	}

	return false
}

// SetEmailScope gets a reference to the given string and assigns it to the EmailScope field.
func (o *ProvisioningApiUserDetails) SetEmailScope(v string) {
	o.EmailScope = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ProvisioningApiUserDetails) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFediverse returns the Fediverse field value
func (o *ProvisioningApiUserDetails) GetFediverse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fediverse
}

// GetFediverseOk returns a tuple with the Fediverse field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetFediverseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fediverse, true
}

// SetFediverse sets field value
func (o *ProvisioningApiUserDetails) SetFediverse(v string) {
	o.Fediverse = v
}

// GetFediverseScope returns the FediverseScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetFediverseScope() string {
	if o == nil || IsNil(o.FediverseScope) {
		var ret string
		return ret
	}
	return *o.FediverseScope
}

// GetFediverseScopeOk returns a tuple with the FediverseScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetFediverseScopeOk() (*string, bool) {
	if o == nil || IsNil(o.FediverseScope) {
		return nil, false
	}
	return o.FediverseScope, true
}

// HasFediverseScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasFediverseScope() bool {
	if o != nil && !IsNil(o.FediverseScope) {
		return true
	}

	return false
}

// SetFediverseScope gets a reference to the given string and assigns it to the FediverseScope field.
func (o *ProvisioningApiUserDetails) SetFediverseScope(v string) {
	o.FediverseScope = &v
}

// GetGroups returns the Groups field value
func (o *ProvisioningApiUserDetails) GetGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetGroupsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ProvisioningApiUserDetails) SetGroups(v []string) {
	o.Groups = v
}

// GetHeadline returns the Headline field value
func (o *ProvisioningApiUserDetails) GetHeadline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetHeadlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headline, true
}

// SetHeadline sets field value
func (o *ProvisioningApiUserDetails) SetHeadline(v string) {
	o.Headline = v
}

// GetHeadlineScope returns the HeadlineScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetHeadlineScope() string {
	if o == nil || IsNil(o.HeadlineScope) {
		var ret string
		return ret
	}
	return *o.HeadlineScope
}

// GetHeadlineScopeOk returns a tuple with the HeadlineScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetHeadlineScopeOk() (*string, bool) {
	if o == nil || IsNil(o.HeadlineScope) {
		return nil, false
	}
	return o.HeadlineScope, true
}

// HasHeadlineScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasHeadlineScope() bool {
	if o != nil && !IsNil(o.HeadlineScope) {
		return true
	}

	return false
}

// SetHeadlineScope gets a reference to the given string and assigns it to the HeadlineScope field.
func (o *ProvisioningApiUserDetails) SetHeadlineScope(v string) {
	o.HeadlineScope = &v
}

// GetId returns the Id field value
func (o *ProvisioningApiUserDetails) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProvisioningApiUserDetails) SetId(v string) {
	o.Id = v
}

// GetLanguage returns the Language field value
func (o *ProvisioningApiUserDetails) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *ProvisioningApiUserDetails) SetLanguage(v string) {
	o.Language = v
}

// GetLastLogin returns the LastLogin field value
func (o *ProvisioningApiUserDetails) GetLastLogin() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetLastLoginOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLogin, true
}

// SetLastLogin sets field value
func (o *ProvisioningApiUserDetails) SetLastLogin(v int64) {
	o.LastLogin = v
}

// GetLocale returns the Locale field value
func (o *ProvisioningApiUserDetails) GetLocale() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locale, true
}

// SetLocale sets field value
func (o *ProvisioningApiUserDetails) SetLocale(v string) {
	o.Locale = v
}

// GetManager returns the Manager field value
func (o *ProvisioningApiUserDetails) GetManager() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manager
}

// GetManagerOk returns a tuple with the Manager field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetManagerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manager, true
}

// SetManager sets field value
func (o *ProvisioningApiUserDetails) SetManager(v string) {
	o.Manager = v
}

// GetNotifyEmail returns the NotifyEmail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProvisioningApiUserDetails) GetNotifyEmail() string {
	if o == nil || o.NotifyEmail.Get() == nil {
		var ret string
		return ret
	}

	return *o.NotifyEmail.Get()
}

// GetNotifyEmailOk returns a tuple with the NotifyEmail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningApiUserDetails) GetNotifyEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyEmail.Get(), o.NotifyEmail.IsSet()
}

// SetNotifyEmail sets field value
func (o *ProvisioningApiUserDetails) SetNotifyEmail(v string) {
	o.NotifyEmail.Set(&v)
}

// GetOrganisation returns the Organisation field value
func (o *ProvisioningApiUserDetails) GetOrganisation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetOrganisationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organisation, true
}

// SetOrganisation sets field value
func (o *ProvisioningApiUserDetails) SetOrganisation(v string) {
	o.Organisation = v
}

// GetOrganisationScope returns the OrganisationScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetOrganisationScope() string {
	if o == nil || IsNil(o.OrganisationScope) {
		var ret string
		return ret
	}
	return *o.OrganisationScope
}

// GetOrganisationScopeOk returns a tuple with the OrganisationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetOrganisationScopeOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationScope) {
		return nil, false
	}
	return o.OrganisationScope, true
}

// HasOrganisationScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasOrganisationScope() bool {
	if o != nil && !IsNil(o.OrganisationScope) {
		return true
	}

	return false
}

// SetOrganisationScope gets a reference to the given string and assigns it to the OrganisationScope field.
func (o *ProvisioningApiUserDetails) SetOrganisationScope(v string) {
	o.OrganisationScope = &v
}

// GetPhone returns the Phone field value
func (o *ProvisioningApiUserDetails) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *ProvisioningApiUserDetails) SetPhone(v string) {
	o.Phone = v
}

// GetPhoneScope returns the PhoneScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetPhoneScope() string {
	if o == nil || IsNil(o.PhoneScope) {
		var ret string
		return ret
	}
	return *o.PhoneScope
}

// GetPhoneScopeOk returns a tuple with the PhoneScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetPhoneScopeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneScope) {
		return nil, false
	}
	return o.PhoneScope, true
}

// HasPhoneScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasPhoneScope() bool {
	if o != nil && !IsNil(o.PhoneScope) {
		return true
	}

	return false
}

// SetPhoneScope gets a reference to the given string and assigns it to the PhoneScope field.
func (o *ProvisioningApiUserDetails) SetPhoneScope(v string) {
	o.PhoneScope = &v
}

// GetProfileEnabled returns the ProfileEnabled field value
func (o *ProvisioningApiUserDetails) GetProfileEnabled() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileEnabled
}

// GetProfileEnabledOk returns a tuple with the ProfileEnabled field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetProfileEnabledOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileEnabled, true
}

// SetProfileEnabled sets field value
func (o *ProvisioningApiUserDetails) SetProfileEnabled(v string) {
	o.ProfileEnabled = v
}

// GetProfileEnabledScope returns the ProfileEnabledScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetProfileEnabledScope() string {
	if o == nil || IsNil(o.ProfileEnabledScope) {
		var ret string
		return ret
	}
	return *o.ProfileEnabledScope
}

// GetProfileEnabledScopeOk returns a tuple with the ProfileEnabledScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetProfileEnabledScopeOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileEnabledScope) {
		return nil, false
	}
	return o.ProfileEnabledScope, true
}

// HasProfileEnabledScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasProfileEnabledScope() bool {
	if o != nil && !IsNil(o.ProfileEnabledScope) {
		return true
	}

	return false
}

// SetProfileEnabledScope gets a reference to the given string and assigns it to the ProfileEnabledScope field.
func (o *ProvisioningApiUserDetails) SetProfileEnabledScope(v string) {
	o.ProfileEnabledScope = &v
}

// GetQuota returns the Quota field value
func (o *ProvisioningApiUserDetails) GetQuota() ProvisioningApiUserDetailsQuota {
	if o == nil {
		var ret ProvisioningApiUserDetailsQuota
		return ret
	}

	return o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetQuotaOk() (*ProvisioningApiUserDetailsQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quota, true
}

// SetQuota sets field value
func (o *ProvisioningApiUserDetails) SetQuota(v ProvisioningApiUserDetailsQuota) {
	o.Quota = v
}

// GetRole returns the Role field value
func (o *ProvisioningApiUserDetails) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ProvisioningApiUserDetails) SetRole(v string) {
	o.Role = v
}

// GetRoleScope returns the RoleScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetRoleScope() string {
	if o == nil || IsNil(o.RoleScope) {
		var ret string
		return ret
	}
	return *o.RoleScope
}

// GetRoleScopeOk returns a tuple with the RoleScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetRoleScopeOk() (*string, bool) {
	if o == nil || IsNil(o.RoleScope) {
		return nil, false
	}
	return o.RoleScope, true
}

// HasRoleScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasRoleScope() bool {
	if o != nil && !IsNil(o.RoleScope) {
		return true
	}

	return false
}

// SetRoleScope gets a reference to the given string and assigns it to the RoleScope field.
func (o *ProvisioningApiUserDetails) SetRoleScope(v string) {
	o.RoleScope = &v
}

// GetStorageLocation returns the StorageLocation field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetStorageLocation() string {
	if o == nil || IsNil(o.StorageLocation) {
		var ret string
		return ret
	}
	return *o.StorageLocation
}

// GetStorageLocationOk returns a tuple with the StorageLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetStorageLocationOk() (*string, bool) {
	if o == nil || IsNil(o.StorageLocation) {
		return nil, false
	}
	return o.StorageLocation, true
}

// HasStorageLocation returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasStorageLocation() bool {
	if o != nil && !IsNil(o.StorageLocation) {
		return true
	}

	return false
}

// SetStorageLocation gets a reference to the given string and assigns it to the StorageLocation field.
func (o *ProvisioningApiUserDetails) SetStorageLocation(v string) {
	o.StorageLocation = &v
}

// GetSubadmin returns the Subadmin field value
func (o *ProvisioningApiUserDetails) GetSubadmin() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Subadmin
}

// GetSubadminOk returns a tuple with the Subadmin field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetSubadminOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subadmin, true
}

// SetSubadmin sets field value
func (o *ProvisioningApiUserDetails) SetSubadmin(v []string) {
	o.Subadmin = v
}

// GetTwitter returns the Twitter field value
func (o *ProvisioningApiUserDetails) GetTwitter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetTwitterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Twitter, true
}

// SetTwitter sets field value
func (o *ProvisioningApiUserDetails) SetTwitter(v string) {
	o.Twitter = v
}

// GetTwitterScope returns the TwitterScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetTwitterScope() string {
	if o == nil || IsNil(o.TwitterScope) {
		var ret string
		return ret
	}
	return *o.TwitterScope
}

// GetTwitterScopeOk returns a tuple with the TwitterScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetTwitterScopeOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterScope) {
		return nil, false
	}
	return o.TwitterScope, true
}

// HasTwitterScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasTwitterScope() bool {
	if o != nil && !IsNil(o.TwitterScope) {
		return true
	}

	return false
}

// SetTwitterScope gets a reference to the given string and assigns it to the TwitterScope field.
func (o *ProvisioningApiUserDetails) SetTwitterScope(v string) {
	o.TwitterScope = &v
}

// GetWebsite returns the Website field value
func (o *ProvisioningApiUserDetails) GetWebsite() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Website
}

// GetWebsiteOk returns a tuple with the Website field value
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetWebsiteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Website, true
}

// SetWebsite sets field value
func (o *ProvisioningApiUserDetails) SetWebsite(v string) {
	o.Website = v
}

// GetWebsiteScope returns the WebsiteScope field value if set, zero value otherwise.
func (o *ProvisioningApiUserDetails) GetWebsiteScope() string {
	if o == nil || IsNil(o.WebsiteScope) {
		var ret string
		return ret
	}
	return *o.WebsiteScope
}

// GetWebsiteScopeOk returns a tuple with the WebsiteScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningApiUserDetails) GetWebsiteScopeOk() (*string, bool) {
	if o == nil || IsNil(o.WebsiteScope) {
		return nil, false
	}
	return o.WebsiteScope, true
}

// HasWebsiteScope returns a boolean if a field has been set.
func (o *ProvisioningApiUserDetails) HasWebsiteScope() bool {
	if o != nil && !IsNil(o.WebsiteScope) {
		return true
	}

	return false
}

// SetWebsiteScope gets a reference to the given string and assigns it to the WebsiteScope field.
func (o *ProvisioningApiUserDetails) SetWebsiteScope(v string) {
	o.WebsiteScope = &v
}

func (o ProvisioningApiUserDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningApiUserDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["additional_mail"] = o.AdditionalMail
	if !IsNil(o.AdditionalMailScope) {
		toSerialize["additional_mailScope"] = o.AdditionalMailScope
	}
	toSerialize["address"] = o.Address
	if !IsNil(o.AddressScope) {
		toSerialize["addressScope"] = o.AddressScope
	}
	if !IsNil(o.AvatarScope) {
		toSerialize["avatarScope"] = o.AvatarScope
	}
	toSerialize["backend"] = o.Backend
	toSerialize["backendCapabilities"] = o.BackendCapabilities
	toSerialize["biography"] = o.Biography
	if !IsNil(o.BiographyScope) {
		toSerialize["biographyScope"] = o.BiographyScope
	}
	toSerialize["display-name"] = o.DisplayName
	toSerialize["displayname"] = o.Displayname
	if !IsNil(o.DisplaynameScope) {
		toSerialize["displaynameScope"] = o.DisplaynameScope
	}
	toSerialize["email"] = o.Email.Get()
	if !IsNil(o.EmailScope) {
		toSerialize["emailScope"] = o.EmailScope
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["fediverse"] = o.Fediverse
	if !IsNil(o.FediverseScope) {
		toSerialize["fediverseScope"] = o.FediverseScope
	}
	toSerialize["groups"] = o.Groups
	toSerialize["headline"] = o.Headline
	if !IsNil(o.HeadlineScope) {
		toSerialize["headlineScope"] = o.HeadlineScope
	}
	toSerialize["id"] = o.Id
	toSerialize["language"] = o.Language
	toSerialize["lastLogin"] = o.LastLogin
	toSerialize["locale"] = o.Locale
	toSerialize["manager"] = o.Manager
	toSerialize["notify_email"] = o.NotifyEmail.Get()
	toSerialize["organisation"] = o.Organisation
	if !IsNil(o.OrganisationScope) {
		toSerialize["organisationScope"] = o.OrganisationScope
	}
	toSerialize["phone"] = o.Phone
	if !IsNil(o.PhoneScope) {
		toSerialize["phoneScope"] = o.PhoneScope
	}
	toSerialize["profile_enabled"] = o.ProfileEnabled
	if !IsNil(o.ProfileEnabledScope) {
		toSerialize["profile_enabledScope"] = o.ProfileEnabledScope
	}
	toSerialize["quota"] = o.Quota
	toSerialize["role"] = o.Role
	if !IsNil(o.RoleScope) {
		toSerialize["roleScope"] = o.RoleScope
	}
	if !IsNil(o.StorageLocation) {
		toSerialize["storageLocation"] = o.StorageLocation
	}
	toSerialize["subadmin"] = o.Subadmin
	toSerialize["twitter"] = o.Twitter
	if !IsNil(o.TwitterScope) {
		toSerialize["twitterScope"] = o.TwitterScope
	}
	toSerialize["website"] = o.Website
	if !IsNil(o.WebsiteScope) {
		toSerialize["websiteScope"] = o.WebsiteScope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningApiUserDetails) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningApiUserDetails := _ProvisioningApiUserDetails{}

	if err = json.Unmarshal(bytes, &varProvisioningApiUserDetails); err == nil {
		*o = ProvisioningApiUserDetails(varProvisioningApiUserDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_mail")
		delete(additionalProperties, "additional_mailScope")
		delete(additionalProperties, "address")
		delete(additionalProperties, "addressScope")
		delete(additionalProperties, "avatarScope")
		delete(additionalProperties, "backend")
		delete(additionalProperties, "backendCapabilities")
		delete(additionalProperties, "biography")
		delete(additionalProperties, "biographyScope")
		delete(additionalProperties, "display-name")
		delete(additionalProperties, "displayname")
		delete(additionalProperties, "displaynameScope")
		delete(additionalProperties, "email")
		delete(additionalProperties, "emailScope")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "fediverse")
		delete(additionalProperties, "fediverseScope")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "headline")
		delete(additionalProperties, "headlineScope")
		delete(additionalProperties, "id")
		delete(additionalProperties, "language")
		delete(additionalProperties, "lastLogin")
		delete(additionalProperties, "locale")
		delete(additionalProperties, "manager")
		delete(additionalProperties, "notify_email")
		delete(additionalProperties, "organisation")
		delete(additionalProperties, "organisationScope")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "phoneScope")
		delete(additionalProperties, "profile_enabled")
		delete(additionalProperties, "profile_enabledScope")
		delete(additionalProperties, "quota")
		delete(additionalProperties, "role")
		delete(additionalProperties, "roleScope")
		delete(additionalProperties, "storageLocation")
		delete(additionalProperties, "subadmin")
		delete(additionalProperties, "twitter")
		delete(additionalProperties, "twitterScope")
		delete(additionalProperties, "website")
		delete(additionalProperties, "websiteScope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningApiUserDetails struct {
	value *ProvisioningApiUserDetails
	isSet bool
}

func (v NullableProvisioningApiUserDetails) Get() *ProvisioningApiUserDetails {
	return v.value
}

func (v *NullableProvisioningApiUserDetails) Set(val *ProvisioningApiUserDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningApiUserDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningApiUserDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningApiUserDetails(val *ProvisioningApiUserDetails) *NullableProvisioningApiUserDetails {
	return &NullableProvisioningApiUserDetails{value: val, isSet: true}
}

func (v NullableProvisioningApiUserDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningApiUserDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


