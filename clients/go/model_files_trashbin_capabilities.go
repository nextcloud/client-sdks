/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesTrashbinCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesTrashbinCapabilities{}

// FilesTrashbinCapabilities struct for FilesTrashbinCapabilities
type FilesTrashbinCapabilities struct {
	Files FilesTrashbinCapabilitiesFiles `json:"files"`
	AdditionalProperties map[string]interface{}
}

type _FilesTrashbinCapabilities FilesTrashbinCapabilities

// NewFilesTrashbinCapabilities instantiates a new FilesTrashbinCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesTrashbinCapabilities(files FilesTrashbinCapabilitiesFiles) *FilesTrashbinCapabilities {
	this := FilesTrashbinCapabilities{}
	this.Files = files
	return &this
}

// NewFilesTrashbinCapabilitiesWithDefaults instantiates a new FilesTrashbinCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesTrashbinCapabilitiesWithDefaults() *FilesTrashbinCapabilities {
	this := FilesTrashbinCapabilities{}
	return &this
}

// GetFiles returns the Files field value
func (o *FilesTrashbinCapabilities) GetFiles() FilesTrashbinCapabilitiesFiles {
	if o == nil {
		var ret FilesTrashbinCapabilitiesFiles
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *FilesTrashbinCapabilities) GetFilesOk() (*FilesTrashbinCapabilitiesFiles, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Files, true
}

// SetFiles sets field value
func (o *FilesTrashbinCapabilities) SetFiles(v FilesTrashbinCapabilitiesFiles) {
	o.Files = v
}

func (o FilesTrashbinCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesTrashbinCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files"] = o.Files

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesTrashbinCapabilities) UnmarshalJSON(bytes []byte) (err error) {
	varFilesTrashbinCapabilities := _FilesTrashbinCapabilities{}

	if err = json.Unmarshal(bytes, &varFilesTrashbinCapabilities); err == nil {
		*o = FilesTrashbinCapabilities(varFilesTrashbinCapabilities)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesTrashbinCapabilities struct {
	value *FilesTrashbinCapabilities
	isSet bool
}

func (v NullableFilesTrashbinCapabilities) Get() *FilesTrashbinCapabilities {
	return v.value
}

func (v *NullableFilesTrashbinCapabilities) Set(val *FilesTrashbinCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesTrashbinCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesTrashbinCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesTrashbinCapabilities(val *FilesTrashbinCapabilities) *NullableFilesTrashbinCapabilities {
	return &NullableFilesTrashbinCapabilities{value: val, isSet: true}
}

func (v NullableFilesTrashbinCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesTrashbinCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


