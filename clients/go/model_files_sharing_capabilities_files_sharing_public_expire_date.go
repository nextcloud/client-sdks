/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingCapabilitiesFilesSharingPublicExpireDate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingCapabilitiesFilesSharingPublicExpireDate{}

// FilesSharingCapabilitiesFilesSharingPublicExpireDate struct for FilesSharingCapabilitiesFilesSharingPublicExpireDate
type FilesSharingCapabilitiesFilesSharingPublicExpireDate struct {
	Enabled bool `json:"enabled"`
	Days *int64 `json:"days,omitempty"`
	Enforced *bool `json:"enforced,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingCapabilitiesFilesSharingPublicExpireDate FilesSharingCapabilitiesFilesSharingPublicExpireDate

// NewFilesSharingCapabilitiesFilesSharingPublicExpireDate instantiates a new FilesSharingCapabilitiesFilesSharingPublicExpireDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingCapabilitiesFilesSharingPublicExpireDate(enabled bool) *FilesSharingCapabilitiesFilesSharingPublicExpireDate {
	this := FilesSharingCapabilitiesFilesSharingPublicExpireDate{}
	this.Enabled = enabled
	return &this
}

// NewFilesSharingCapabilitiesFilesSharingPublicExpireDateWithDefaults instantiates a new FilesSharingCapabilitiesFilesSharingPublicExpireDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingCapabilitiesFilesSharingPublicExpireDateWithDefaults() *FilesSharingCapabilitiesFilesSharingPublicExpireDate {
	this := FilesSharingCapabilitiesFilesSharingPublicExpireDate{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetDays() int64 {
	if o == nil || IsNil(o.Days) {
		var ret int64
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int64 and assigns it to the Days field.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) SetDays(v int64) {
	o.Days = &v
}

// GetEnforced returns the Enforced field value if set, zero value otherwise.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetEnforced() bool {
	if o == nil || IsNil(o.Enforced) {
		var ret bool
		return ret
	}
	return *o.Enforced
}

// GetEnforcedOk returns a tuple with the Enforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) GetEnforcedOk() (*bool, bool) {
	if o == nil || IsNil(o.Enforced) {
		return nil, false
	}
	return o.Enforced, true
}

// HasEnforced returns a boolean if a field has been set.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) HasEnforced() bool {
	if o != nil && !IsNil(o.Enforced) {
		return true
	}

	return false
}

// SetEnforced gets a reference to the given bool and assigns it to the Enforced field.
func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) SetEnforced(v bool) {
	o.Enforced = &v
}

func (o FilesSharingCapabilitiesFilesSharingPublicExpireDate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingCapabilitiesFilesSharingPublicExpireDate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Enforced) {
		toSerialize["enforced"] = o.Enforced
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingCapabilitiesFilesSharingPublicExpireDate) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingCapabilitiesFilesSharingPublicExpireDate := _FilesSharingCapabilitiesFilesSharingPublicExpireDate{}

	if err = json.Unmarshal(bytes, &varFilesSharingCapabilitiesFilesSharingPublicExpireDate); err == nil {
		*o = FilesSharingCapabilitiesFilesSharingPublicExpireDate(varFilesSharingCapabilitiesFilesSharingPublicExpireDate)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "days")
		delete(additionalProperties, "enforced")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate struct {
	value *FilesSharingCapabilitiesFilesSharingPublicExpireDate
	isSet bool
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) Get() *FilesSharingCapabilitiesFilesSharingPublicExpireDate {
	return v.value
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) Set(val *FilesSharingCapabilitiesFilesSharingPublicExpireDate) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingCapabilitiesFilesSharingPublicExpireDate(val *FilesSharingCapabilitiesFilesSharingPublicExpireDate) *NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate {
	return &NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate{value: val, isSet: true}
}

func (v NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingCapabilitiesFilesSharingPublicExpireDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


