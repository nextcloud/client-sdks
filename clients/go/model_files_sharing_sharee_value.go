/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingShareeValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareeValue{}

// FilesSharingShareeValue struct for FilesSharingShareeValue
type FilesSharingShareeValue struct {
	ShareType int64 `json:"shareType"`
	ShareWith string `json:"shareWith"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingShareeValue FilesSharingShareeValue

// NewFilesSharingShareeValue instantiates a new FilesSharingShareeValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareeValue(shareType int64, shareWith string) *FilesSharingShareeValue {
	this := FilesSharingShareeValue{}
	this.ShareType = shareType
	this.ShareWith = shareWith
	return &this
}

// NewFilesSharingShareeValueWithDefaults instantiates a new FilesSharingShareeValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareeValueWithDefaults() *FilesSharingShareeValue {
	this := FilesSharingShareeValue{}
	return &this
}

// GetShareType returns the ShareType field value
func (o *FilesSharingShareeValue) GetShareType() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShareType
}

// GetShareTypeOk returns a tuple with the ShareType field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeValue) GetShareTypeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareType, true
}

// SetShareType sets field value
func (o *FilesSharingShareeValue) SetShareType(v int64) {
	o.ShareType = v
}

// GetShareWith returns the ShareWith field value
func (o *FilesSharingShareeValue) GetShareWith() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareWith
}

// GetShareWithOk returns a tuple with the ShareWith field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareeValue) GetShareWithOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareWith, true
}

// SetShareWith sets field value
func (o *FilesSharingShareeValue) SetShareWith(v string) {
	o.ShareWith = v
}

func (o FilesSharingShareeValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareeValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shareType"] = o.ShareType
	toSerialize["shareWith"] = o.ShareWith

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingShareeValue) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingShareeValue := _FilesSharingShareeValue{}

	if err = json.Unmarshal(bytes, &varFilesSharingShareeValue); err == nil {
		*o = FilesSharingShareeValue(varFilesSharingShareeValue)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "shareType")
		delete(additionalProperties, "shareWith")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingShareeValue struct {
	value *FilesSharingShareeValue
	isSet bool
}

func (v NullableFilesSharingShareeValue) Get() *FilesSharingShareeValue {
	return v.value
}

func (v *NullableFilesSharingShareeValue) Set(val *FilesSharingShareeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareeValue(val *FilesSharingShareeValue) *NullableFilesSharingShareeValue {
	return &NullableFilesSharingShareeValue{value: val, isSet: true}
}

func (v NullableFilesSharingShareeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


