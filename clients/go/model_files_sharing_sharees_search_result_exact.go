/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingShareesSearchResultExact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingShareesSearchResultExact{}

// FilesSharingShareesSearchResultExact struct for FilesSharingShareesSearchResultExact
type FilesSharingShareesSearchResultExact struct {
	Circles []FilesSharingShareeCircle `json:"circles"`
	Emails []FilesSharingShareeEmail `json:"emails"`
	Groups []FilesSharingSharee `json:"groups"`
	RemoteGroups []FilesSharingShareeRemoteGroup `json:"remote_groups"`
	Remotes []FilesSharingShareeRemote `json:"remotes"`
	Rooms []FilesSharingSharee `json:"rooms"`
	Users []FilesSharingShareeUser `json:"users"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingShareesSearchResultExact FilesSharingShareesSearchResultExact

// NewFilesSharingShareesSearchResultExact instantiates a new FilesSharingShareesSearchResultExact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingShareesSearchResultExact(circles []FilesSharingShareeCircle, emails []FilesSharingShareeEmail, groups []FilesSharingSharee, remoteGroups []FilesSharingShareeRemoteGroup, remotes []FilesSharingShareeRemote, rooms []FilesSharingSharee, users []FilesSharingShareeUser) *FilesSharingShareesSearchResultExact {
	this := FilesSharingShareesSearchResultExact{}
	this.Circles = circles
	this.Emails = emails
	this.Groups = groups
	this.RemoteGroups = remoteGroups
	this.Remotes = remotes
	this.Rooms = rooms
	this.Users = users
	return &this
}

// NewFilesSharingShareesSearchResultExactWithDefaults instantiates a new FilesSharingShareesSearchResultExact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingShareesSearchResultExactWithDefaults() *FilesSharingShareesSearchResultExact {
	this := FilesSharingShareesSearchResultExact{}
	return &this
}

// GetCircles returns the Circles field value
func (o *FilesSharingShareesSearchResultExact) GetCircles() []FilesSharingShareeCircle {
	if o == nil {
		var ret []FilesSharingShareeCircle
		return ret
	}

	return o.Circles
}

// GetCirclesOk returns a tuple with the Circles field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetCirclesOk() ([]FilesSharingShareeCircle, bool) {
	if o == nil {
		return nil, false
	}
	return o.Circles, true
}

// SetCircles sets field value
func (o *FilesSharingShareesSearchResultExact) SetCircles(v []FilesSharingShareeCircle) {
	o.Circles = v
}

// GetEmails returns the Emails field value
func (o *FilesSharingShareesSearchResultExact) GetEmails() []FilesSharingShareeEmail {
	if o == nil {
		var ret []FilesSharingShareeEmail
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetEmailsOk() ([]FilesSharingShareeEmail, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *FilesSharingShareesSearchResultExact) SetEmails(v []FilesSharingShareeEmail) {
	o.Emails = v
}

// GetGroups returns the Groups field value
func (o *FilesSharingShareesSearchResultExact) GetGroups() []FilesSharingSharee {
	if o == nil {
		var ret []FilesSharingSharee
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetGroupsOk() ([]FilesSharingSharee, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *FilesSharingShareesSearchResultExact) SetGroups(v []FilesSharingSharee) {
	o.Groups = v
}

// GetRemoteGroups returns the RemoteGroups field value
func (o *FilesSharingShareesSearchResultExact) GetRemoteGroups() []FilesSharingShareeRemoteGroup {
	if o == nil {
		var ret []FilesSharingShareeRemoteGroup
		return ret
	}

	return o.RemoteGroups
}

// GetRemoteGroupsOk returns a tuple with the RemoteGroups field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetRemoteGroupsOk() ([]FilesSharingShareeRemoteGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteGroups, true
}

// SetRemoteGroups sets field value
func (o *FilesSharingShareesSearchResultExact) SetRemoteGroups(v []FilesSharingShareeRemoteGroup) {
	o.RemoteGroups = v
}

// GetRemotes returns the Remotes field value
func (o *FilesSharingShareesSearchResultExact) GetRemotes() []FilesSharingShareeRemote {
	if o == nil {
		var ret []FilesSharingShareeRemote
		return ret
	}

	return o.Remotes
}

// GetRemotesOk returns a tuple with the Remotes field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetRemotesOk() ([]FilesSharingShareeRemote, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remotes, true
}

// SetRemotes sets field value
func (o *FilesSharingShareesSearchResultExact) SetRemotes(v []FilesSharingShareeRemote) {
	o.Remotes = v
}

// GetRooms returns the Rooms field value
func (o *FilesSharingShareesSearchResultExact) GetRooms() []FilesSharingSharee {
	if o == nil {
		var ret []FilesSharingSharee
		return ret
	}

	return o.Rooms
}

// GetRoomsOk returns a tuple with the Rooms field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetRoomsOk() ([]FilesSharingSharee, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rooms, true
}

// SetRooms sets field value
func (o *FilesSharingShareesSearchResultExact) SetRooms(v []FilesSharingSharee) {
	o.Rooms = v
}

// GetUsers returns the Users field value
func (o *FilesSharingShareesSearchResultExact) GetUsers() []FilesSharingShareeUser {
	if o == nil {
		var ret []FilesSharingShareeUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *FilesSharingShareesSearchResultExact) GetUsersOk() ([]FilesSharingShareeUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *FilesSharingShareesSearchResultExact) SetUsers(v []FilesSharingShareeUser) {
	o.Users = v
}

func (o FilesSharingShareesSearchResultExact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingShareesSearchResultExact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["circles"] = o.Circles
	toSerialize["emails"] = o.Emails
	toSerialize["groups"] = o.Groups
	toSerialize["remote_groups"] = o.RemoteGroups
	toSerialize["remotes"] = o.Remotes
	toSerialize["rooms"] = o.Rooms
	toSerialize["users"] = o.Users

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingShareesSearchResultExact) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingShareesSearchResultExact := _FilesSharingShareesSearchResultExact{}

	if err = json.Unmarshal(bytes, &varFilesSharingShareesSearchResultExact); err == nil {
		*o = FilesSharingShareesSearchResultExact(varFilesSharingShareesSearchResultExact)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "circles")
		delete(additionalProperties, "emails")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "remote_groups")
		delete(additionalProperties, "remotes")
		delete(additionalProperties, "rooms")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingShareesSearchResultExact struct {
	value *FilesSharingShareesSearchResultExact
	isSet bool
}

func (v NullableFilesSharingShareesSearchResultExact) Get() *FilesSharingShareesSearchResultExact {
	return v.value
}

func (v *NullableFilesSharingShareesSearchResultExact) Set(val *FilesSharingShareesSearchResultExact) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingShareesSearchResultExact) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingShareesSearchResultExact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingShareesSearchResultExact(val *FilesSharingShareesSearchResultExact) *NullableFilesSharingShareesSearchResultExact {
	return &NullableFilesSharingShareesSearchResultExact{value: val, isSet: true}
}

func (v NullableFilesSharingShareesSearchResultExact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingShareesSearchResultExact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


