/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the OCSMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OCSMeta{}

// OCSMeta struct for OCSMeta
type OCSMeta struct {
	Status string `json:"status"`
	Statuscode int32 `json:"statuscode"`
	Message *string `json:"message,omitempty"`
	Totalitems *string `json:"totalitems,omitempty"`
	Itemsperpage *string `json:"itemsperpage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OCSMeta OCSMeta

// NewOCSMeta instantiates a new OCSMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOCSMeta(status string, statuscode int32) *OCSMeta {
	this := OCSMeta{}
	this.Status = status
	this.Statuscode = statuscode
	return &this
}

// NewOCSMetaWithDefaults instantiates a new OCSMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCSMetaWithDefaults() *OCSMeta {
	this := OCSMeta{}
	return &this
}

// GetStatus returns the Status field value
func (o *OCSMeta) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OCSMeta) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OCSMeta) SetStatus(v string) {
	o.Status = v
}

// GetStatuscode returns the Statuscode field value
func (o *OCSMeta) GetStatuscode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Statuscode
}

// GetStatuscodeOk returns a tuple with the Statuscode field value
// and a boolean to check if the value has been set.
func (o *OCSMeta) GetStatuscodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statuscode, true
}

// SetStatuscode sets field value
func (o *OCSMeta) SetStatuscode(v int32) {
	o.Statuscode = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OCSMeta) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OCSMeta) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OCSMeta) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OCSMeta) SetMessage(v string) {
	o.Message = &v
}

// GetTotalitems returns the Totalitems field value if set, zero value otherwise.
func (o *OCSMeta) GetTotalitems() string {
	if o == nil || IsNil(o.Totalitems) {
		var ret string
		return ret
	}
	return *o.Totalitems
}

// GetTotalitemsOk returns a tuple with the Totalitems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OCSMeta) GetTotalitemsOk() (*string, bool) {
	if o == nil || IsNil(o.Totalitems) {
		return nil, false
	}
	return o.Totalitems, true
}

// HasTotalitems returns a boolean if a field has been set.
func (o *OCSMeta) HasTotalitems() bool {
	if o != nil && !IsNil(o.Totalitems) {
		return true
	}

	return false
}

// SetTotalitems gets a reference to the given string and assigns it to the Totalitems field.
func (o *OCSMeta) SetTotalitems(v string) {
	o.Totalitems = &v
}

// GetItemsperpage returns the Itemsperpage field value if set, zero value otherwise.
func (o *OCSMeta) GetItemsperpage() string {
	if o == nil || IsNil(o.Itemsperpage) {
		var ret string
		return ret
	}
	return *o.Itemsperpage
}

// GetItemsperpageOk returns a tuple with the Itemsperpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OCSMeta) GetItemsperpageOk() (*string, bool) {
	if o == nil || IsNil(o.Itemsperpage) {
		return nil, false
	}
	return o.Itemsperpage, true
}

// HasItemsperpage returns a boolean if a field has been set.
func (o *OCSMeta) HasItemsperpage() bool {
	if o != nil && !IsNil(o.Itemsperpage) {
		return true
	}

	return false
}

// SetItemsperpage gets a reference to the given string and assigns it to the Itemsperpage field.
func (o *OCSMeta) SetItemsperpage(v string) {
	o.Itemsperpage = &v
}

func (o OCSMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OCSMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["statuscode"] = o.Statuscode
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Totalitems) {
		toSerialize["totalitems"] = o.Totalitems
	}
	if !IsNil(o.Itemsperpage) {
		toSerialize["itemsperpage"] = o.Itemsperpage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OCSMeta) UnmarshalJSON(bytes []byte) (err error) {
	varOCSMeta := _OCSMeta{}

	if err = json.Unmarshal(bytes, &varOCSMeta); err == nil {
		*o = OCSMeta(varOCSMeta)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "statuscode")
		delete(additionalProperties, "message")
		delete(additionalProperties, "totalitems")
		delete(additionalProperties, "itemsperpage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOCSMeta struct {
	value *OCSMeta
	isSet bool
}

func (v NullableOCSMeta) Get() *OCSMeta {
	return v.value
}

func (v *NullableOCSMeta) Set(val *OCSMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableOCSMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableOCSMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOCSMeta(val *OCSMeta) *NullableOCSMeta {
	return &NullableOCSMeta{value: val, isSet: true}
}

func (v NullableOCSMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOCSMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


