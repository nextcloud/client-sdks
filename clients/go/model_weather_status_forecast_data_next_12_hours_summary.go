/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the WeatherStatusForecastDataNext12HoursSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeatherStatusForecastDataNext12HoursSummary{}

// WeatherStatusForecastDataNext12HoursSummary struct for WeatherStatusForecastDataNext12HoursSummary
type WeatherStatusForecastDataNext12HoursSummary struct {
	SymbolCode string `json:"symbol_code"`
	AdditionalProperties map[string]interface{}
}

type _WeatherStatusForecastDataNext12HoursSummary WeatherStatusForecastDataNext12HoursSummary

// NewWeatherStatusForecastDataNext12HoursSummary instantiates a new WeatherStatusForecastDataNext12HoursSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeatherStatusForecastDataNext12HoursSummary(symbolCode string) *WeatherStatusForecastDataNext12HoursSummary {
	this := WeatherStatusForecastDataNext12HoursSummary{}
	this.SymbolCode = symbolCode
	return &this
}

// NewWeatherStatusForecastDataNext12HoursSummaryWithDefaults instantiates a new WeatherStatusForecastDataNext12HoursSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeatherStatusForecastDataNext12HoursSummaryWithDefaults() *WeatherStatusForecastDataNext12HoursSummary {
	this := WeatherStatusForecastDataNext12HoursSummary{}
	return &this
}

// GetSymbolCode returns the SymbolCode field value
func (o *WeatherStatusForecastDataNext12HoursSummary) GetSymbolCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SymbolCode
}

// GetSymbolCodeOk returns a tuple with the SymbolCode field value
// and a boolean to check if the value has been set.
func (o *WeatherStatusForecastDataNext12HoursSummary) GetSymbolCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SymbolCode, true
}

// SetSymbolCode sets field value
func (o *WeatherStatusForecastDataNext12HoursSummary) SetSymbolCode(v string) {
	o.SymbolCode = v
}

func (o WeatherStatusForecastDataNext12HoursSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeatherStatusForecastDataNext12HoursSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol_code"] = o.SymbolCode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WeatherStatusForecastDataNext12HoursSummary) UnmarshalJSON(bytes []byte) (err error) {
	varWeatherStatusForecastDataNext12HoursSummary := _WeatherStatusForecastDataNext12HoursSummary{}

	if err = json.Unmarshal(bytes, &varWeatherStatusForecastDataNext12HoursSummary); err == nil {
		*o = WeatherStatusForecastDataNext12HoursSummary(varWeatherStatusForecastDataNext12HoursSummary)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "symbol_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWeatherStatusForecastDataNext12HoursSummary struct {
	value *WeatherStatusForecastDataNext12HoursSummary
	isSet bool
}

func (v NullableWeatherStatusForecastDataNext12HoursSummary) Get() *WeatherStatusForecastDataNext12HoursSummary {
	return v.value
}

func (v *NullableWeatherStatusForecastDataNext12HoursSummary) Set(val *WeatherStatusForecastDataNext12HoursSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableWeatherStatusForecastDataNext12HoursSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableWeatherStatusForecastDataNext12HoursSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeatherStatusForecastDataNext12HoursSummary(val *WeatherStatusForecastDataNext12HoursSummary) *NullableWeatherStatusForecastDataNext12HoursSummary {
	return &NullableWeatherStatusForecastDataNext12HoursSummary{value: val, isSet: true}
}

func (v NullableWeatherStatusForecastDataNext12HoursSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeatherStatusForecastDataNext12HoursSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


