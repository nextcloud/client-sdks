/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesOpenLocalEditorCreate200ResponseOcsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesOpenLocalEditorCreate200ResponseOcsData{}

// FilesOpenLocalEditorCreate200ResponseOcsData struct for FilesOpenLocalEditorCreate200ResponseOcsData
type FilesOpenLocalEditorCreate200ResponseOcsData struct {
	UserId NullableString `json:"userId"`
	PathHash string `json:"pathHash"`
	ExpirationTime int64 `json:"expirationTime"`
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _FilesOpenLocalEditorCreate200ResponseOcsData FilesOpenLocalEditorCreate200ResponseOcsData

// NewFilesOpenLocalEditorCreate200ResponseOcsData instantiates a new FilesOpenLocalEditorCreate200ResponseOcsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesOpenLocalEditorCreate200ResponseOcsData(userId NullableString, pathHash string, expirationTime int64, token string) *FilesOpenLocalEditorCreate200ResponseOcsData {
	this := FilesOpenLocalEditorCreate200ResponseOcsData{}
	this.UserId = userId
	this.PathHash = pathHash
	this.ExpirationTime = expirationTime
	this.Token = token
	return &this
}

// NewFilesOpenLocalEditorCreate200ResponseOcsDataWithDefaults instantiates a new FilesOpenLocalEditorCreate200ResponseOcsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesOpenLocalEditorCreate200ResponseOcsDataWithDefaults() *FilesOpenLocalEditorCreate200ResponseOcsData {
	this := FilesOpenLocalEditorCreate200ResponseOcsData{}
	return &this
}

// GetUserId returns the UserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// SetUserId sets field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) SetUserId(v string) {
	o.UserId.Set(&v)
}

// GetPathHash returns the PathHash field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetPathHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PathHash
}

// GetPathHashOk returns a tuple with the PathHash field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetPathHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathHash, true
}

// SetPathHash sets field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) SetPathHash(v string) {
	o.PathHash = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetExpirationTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetExpirationTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) SetExpirationTime(v int64) {
	o.ExpirationTime = v
}

// GetToken returns the Token field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FilesOpenLocalEditorCreate200ResponseOcsData) SetToken(v string) {
	o.Token = v
}

func (o FilesOpenLocalEditorCreate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesOpenLocalEditorCreate200ResponseOcsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId.Get()
	toSerialize["pathHash"] = o.PathHash
	toSerialize["expirationTime"] = o.ExpirationTime
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesOpenLocalEditorCreate200ResponseOcsData) UnmarshalJSON(bytes []byte) (err error) {
	varFilesOpenLocalEditorCreate200ResponseOcsData := _FilesOpenLocalEditorCreate200ResponseOcsData{}

	if err = json.Unmarshal(bytes, &varFilesOpenLocalEditorCreate200ResponseOcsData); err == nil {
		*o = FilesOpenLocalEditorCreate200ResponseOcsData(varFilesOpenLocalEditorCreate200ResponseOcsData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "userId")
		delete(additionalProperties, "pathHash")
		delete(additionalProperties, "expirationTime")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesOpenLocalEditorCreate200ResponseOcsData struct {
	value *FilesOpenLocalEditorCreate200ResponseOcsData
	isSet bool
}

func (v NullableFilesOpenLocalEditorCreate200ResponseOcsData) Get() *FilesOpenLocalEditorCreate200ResponseOcsData {
	return v.value
}

func (v *NullableFilesOpenLocalEditorCreate200ResponseOcsData) Set(val *FilesOpenLocalEditorCreate200ResponseOcsData) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesOpenLocalEditorCreate200ResponseOcsData) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesOpenLocalEditorCreate200ResponseOcsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesOpenLocalEditorCreate200ResponseOcsData(val *FilesOpenLocalEditorCreate200ResponseOcsData) *NullableFilesOpenLocalEditorCreate200ResponseOcsData {
	return &NullableFilesOpenLocalEditorCreate200ResponseOcsData{value: val, isSet: true}
}

func (v NullableFilesOpenLocalEditorCreate200ResponseOcsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesOpenLocalEditorCreate200ResponseOcsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


