/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesSharingCapabilitiesFilesSharingUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesSharingCapabilitiesFilesSharingUser{}

// FilesSharingCapabilitiesFilesSharingUser struct for FilesSharingCapabilitiesFilesSharingUser
type FilesSharingCapabilitiesFilesSharingUser struct {
	SendMail bool `json:"send_mail"`
	ExpireDate *FilesSharingCapabilitiesFilesSharingUserExpireDate `json:"expire_date,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FilesSharingCapabilitiesFilesSharingUser FilesSharingCapabilitiesFilesSharingUser

// NewFilesSharingCapabilitiesFilesSharingUser instantiates a new FilesSharingCapabilitiesFilesSharingUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesSharingCapabilitiesFilesSharingUser(sendMail bool) *FilesSharingCapabilitiesFilesSharingUser {
	this := FilesSharingCapabilitiesFilesSharingUser{}
	this.SendMail = sendMail
	return &this
}

// NewFilesSharingCapabilitiesFilesSharingUserWithDefaults instantiates a new FilesSharingCapabilitiesFilesSharingUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesSharingCapabilitiesFilesSharingUserWithDefaults() *FilesSharingCapabilitiesFilesSharingUser {
	this := FilesSharingCapabilitiesFilesSharingUser{}
	return &this
}

// GetSendMail returns the SendMail field value
func (o *FilesSharingCapabilitiesFilesSharingUser) GetSendMail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SendMail
}

// GetSendMailOk returns a tuple with the SendMail field value
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingUser) GetSendMailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SendMail, true
}

// SetSendMail sets field value
func (o *FilesSharingCapabilitiesFilesSharingUser) SetSendMail(v bool) {
	o.SendMail = v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *FilesSharingCapabilitiesFilesSharingUser) GetExpireDate() FilesSharingCapabilitiesFilesSharingUserExpireDate {
	if o == nil || IsNil(o.ExpireDate) {
		var ret FilesSharingCapabilitiesFilesSharingUserExpireDate
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesSharingCapabilitiesFilesSharingUser) GetExpireDateOk() (*FilesSharingCapabilitiesFilesSharingUserExpireDate, bool) {
	if o == nil || IsNil(o.ExpireDate) {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *FilesSharingCapabilitiesFilesSharingUser) HasExpireDate() bool {
	if o != nil && !IsNil(o.ExpireDate) {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given FilesSharingCapabilitiesFilesSharingUserExpireDate and assigns it to the ExpireDate field.
func (o *FilesSharingCapabilitiesFilesSharingUser) SetExpireDate(v FilesSharingCapabilitiesFilesSharingUserExpireDate) {
	o.ExpireDate = &v
}

func (o FilesSharingCapabilitiesFilesSharingUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesSharingCapabilitiesFilesSharingUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["send_mail"] = o.SendMail
	if !IsNil(o.ExpireDate) {
		toSerialize["expire_date"] = o.ExpireDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesSharingCapabilitiesFilesSharingUser) UnmarshalJSON(bytes []byte) (err error) {
	varFilesSharingCapabilitiesFilesSharingUser := _FilesSharingCapabilitiesFilesSharingUser{}

	if err = json.Unmarshal(bytes, &varFilesSharingCapabilitiesFilesSharingUser); err == nil {
		*o = FilesSharingCapabilitiesFilesSharingUser(varFilesSharingCapabilitiesFilesSharingUser)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "send_mail")
		delete(additionalProperties, "expire_date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesSharingCapabilitiesFilesSharingUser struct {
	value *FilesSharingCapabilitiesFilesSharingUser
	isSet bool
}

func (v NullableFilesSharingCapabilitiesFilesSharingUser) Get() *FilesSharingCapabilitiesFilesSharingUser {
	return v.value
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUser) Set(val *FilesSharingCapabilitiesFilesSharingUser) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesSharingCapabilitiesFilesSharingUser) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesSharingCapabilitiesFilesSharingUser(val *FilesSharingCapabilitiesFilesSharingUser) *NullableFilesSharingCapabilitiesFilesSharingUser {
	return &NullableFilesSharingCapabilitiesFilesSharingUser{value: val, isSet: true}
}

func (v NullableFilesSharingCapabilitiesFilesSharingUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesSharingCapabilitiesFilesSharingUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


