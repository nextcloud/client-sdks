/*
nextcloud

Nextcloud APIs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client_sdk

import (
	"encoding/json"
)

// checks if the FilesVersionsCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesVersionsCapabilities{}

// FilesVersionsCapabilities struct for FilesVersionsCapabilities
type FilesVersionsCapabilities struct {
	Files FilesVersionsCapabilitiesFiles `json:"files"`
	AdditionalProperties map[string]interface{}
}

type _FilesVersionsCapabilities FilesVersionsCapabilities

// NewFilesVersionsCapabilities instantiates a new FilesVersionsCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesVersionsCapabilities(files FilesVersionsCapabilitiesFiles) *FilesVersionsCapabilities {
	this := FilesVersionsCapabilities{}
	this.Files = files
	return &this
}

// NewFilesVersionsCapabilitiesWithDefaults instantiates a new FilesVersionsCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesVersionsCapabilitiesWithDefaults() *FilesVersionsCapabilities {
	this := FilesVersionsCapabilities{}
	return &this
}

// GetFiles returns the Files field value
func (o *FilesVersionsCapabilities) GetFiles() FilesVersionsCapabilitiesFiles {
	if o == nil {
		var ret FilesVersionsCapabilitiesFiles
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *FilesVersionsCapabilities) GetFilesOk() (*FilesVersionsCapabilitiesFiles, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Files, true
}

// SetFiles sets field value
func (o *FilesVersionsCapabilities) SetFiles(v FilesVersionsCapabilitiesFiles) {
	o.Files = v
}

func (o FilesVersionsCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesVersionsCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files"] = o.Files

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FilesVersionsCapabilities) UnmarshalJSON(bytes []byte) (err error) {
	varFilesVersionsCapabilities := _FilesVersionsCapabilities{}

	if err = json.Unmarshal(bytes, &varFilesVersionsCapabilities); err == nil {
		*o = FilesVersionsCapabilities(varFilesVersionsCapabilities)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFilesVersionsCapabilities struct {
	value *FilesVersionsCapabilities
	isSet bool
}

func (v NullableFilesVersionsCapabilities) Get() *FilesVersionsCapabilities {
	return v.value
}

func (v *NullableFilesVersionsCapabilities) Set(val *FilesVersionsCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesVersionsCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesVersionsCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesVersionsCapabilities(val *FilesVersionsCapabilities) *NullableFilesVersionsCapabilities {
	return &NullableFilesVersionsCapabilities{value: val, isSet: true}
}

func (v NullableFilesVersionsCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesVersionsCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


