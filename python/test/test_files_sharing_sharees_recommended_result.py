# coding: utf-8

"""
    nextcloud

    Nextcloud APIs  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import openapi_client
from openapi_client.models.files_sharing_sharees_recommended_result import FilesSharingShareesRecommendedResult  # noqa: E501
from openapi_client.rest import ApiException

class TestFilesSharingShareesRecommendedResult(unittest.TestCase):
    """FilesSharingShareesRecommendedResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FilesSharingShareesRecommendedResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilesSharingShareesRecommendedResult`
        """
        model = openapi_client.models.files_sharing_sharees_recommended_result.FilesSharingShareesRecommendedResult()  # noqa: E501
        if include_optional :
            return FilesSharingShareesRecommendedResult(
                exact = openapi_client.models.files_sharing_sharees_recommended_result_exact.FilesSharingShareesRecommendedResult_exact(
                    emails = [
                        null
                        ], 
                    groups = [
                        openapi_client.models.files_sharing_sharee.FilesSharingSharee(
                            count = 56, 
                            label = '', )
                        ], 
                    remote_groups = [
                        null
                        ], 
                    remotes = [
                        null
                        ], 
                    users = [
                        null
                        ], ), 
                emails = [
                    null
                    ], 
                groups = [
                    openapi_client.models.files_sharing_sharee.FilesSharingSharee(
                        count = 56, 
                        label = '', )
                    ], 
                remote_groups = [
                    null
                    ], 
                remotes = [
                    null
                    ], 
                users = [
                    null
                    ]
            )
        else :
            return FilesSharingShareesRecommendedResult(
                exact = openapi_client.models.files_sharing_sharees_recommended_result_exact.FilesSharingShareesRecommendedResult_exact(
                    emails = [
                        null
                        ], 
                    groups = [
                        openapi_client.models.files_sharing_sharee.FilesSharingSharee(
                            count = 56, 
                            label = '', )
                        ], 
                    remote_groups = [
                        null
                        ], 
                    remotes = [
                        null
                        ], 
                    users = [
                        null
                        ], ),
                emails = [
                    null
                    ],
                groups = [
                    openapi_client.models.files_sharing_sharee.FilesSharingSharee(
                        count = 56, 
                        label = '', )
                    ],
                remote_groups = [
                    null
                    ],
                remotes = [
                    null
                    ],
                users = [
                    null
                    ],
        )
        """

    def testFilesSharingShareesRecommendedResult(self):
        """Test FilesSharingShareesRecommendedResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
