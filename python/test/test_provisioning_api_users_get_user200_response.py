# coding: utf-8

"""
    nextcloud

    Nextcloud APIs  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import openapi_client
from openapi_client.models.provisioning_api_users_get_user200_response import ProvisioningApiUsersGetUser200Response  # noqa: E501
from openapi_client.rest import ApiException

class TestProvisioningApiUsersGetUser200Response(unittest.TestCase):
    """ProvisioningApiUsersGetUser200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProvisioningApiUsersGetUser200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProvisioningApiUsersGetUser200Response`
        """
        model = openapi_client.models.provisioning_api_users_get_user200_response.ProvisioningApiUsersGetUser200Response()  # noqa: E501
        if include_optional :
            return ProvisioningApiUsersGetUser200Response(
                ocs = openapi_client.models.provisioning_api_users_get_user_200_response_ocs.provisioning_api_users_get_user_200_response_ocs(
                    meta = openapi_client.models.ocs_meta.OCSMeta(
                        status = '', 
                        statuscode = 56, 
                        message = '', 
                        totalitems = '', 
                        itemsperpage = '', ), 
                    data = openapi_client.models.provisioning_api_user_details.ProvisioningApiUserDetails(
                        additional_mail = [
                            ''
                            ], 
                        additional_mail_scope = [
                            ''
                            ], 
                        address = '', 
                        address_scope = '', 
                        avatar_scope = '', 
                        backend = '', 
                        backend_capabilities = openapi_client.models.provisioning_api_user_details_backend_capabilities.ProvisioningApiUserDetails_backendCapabilities(
                            set_display_name = True, 
                            set_password = True, ), 
                        biography = '', 
                        biography_scope = '', 
                        displayname = '', 
                        display_name = '', 
                        displayname_scope = '', 
                        email = '', 
                        email_scope = '', 
                        enabled = True, 
                        fediverse = '', 
                        fediverse_scope = '', 
                        groups = [
                            ''
                            ], 
                        headline = '', 
                        headline_scope = '', 
                        id = '', 
                        language = '', 
                        last_login = 56, 
                        locale = '', 
                        notify_email = '', 
                        organisation = '', 
                        organisation_scope = '', 
                        phone = '', 
                        phone_scope = '', 
                        profile_enabled = '', 
                        profile_enabled_scope = '', 
                        quota = openapi_client.models.provisioning_api_user_details_quota.ProvisioningApiUserDetails_quota(
                            free = 56, 
                            quota = null, 
                            relative = 1.337, 
                            total = 56, 
                            used = 56, ), 
                        role = '', 
                        role_scope = '', 
                        storage_location = '', 
                        subadmin = [
                            ''
                            ], 
                        twitter = '', 
                        twitter_scope = '', 
                        website = '', 
                        website_scope = '', ), )
            )
        else :
            return ProvisioningApiUsersGetUser200Response(
                ocs = openapi_client.models.provisioning_api_users_get_user_200_response_ocs.provisioning_api_users_get_user_200_response_ocs(
                    meta = openapi_client.models.ocs_meta.OCSMeta(
                        status = '', 
                        statuscode = 56, 
                        message = '', 
                        totalitems = '', 
                        itemsperpage = '', ), 
                    data = openapi_client.models.provisioning_api_user_details.ProvisioningApiUserDetails(
                        additional_mail = [
                            ''
                            ], 
                        additional_mail_scope = [
                            ''
                            ], 
                        address = '', 
                        address_scope = '', 
                        avatar_scope = '', 
                        backend = '', 
                        backend_capabilities = openapi_client.models.provisioning_api_user_details_backend_capabilities.ProvisioningApiUserDetails_backendCapabilities(
                            set_display_name = True, 
                            set_password = True, ), 
                        biography = '', 
                        biography_scope = '', 
                        displayname = '', 
                        display_name = '', 
                        displayname_scope = '', 
                        email = '', 
                        email_scope = '', 
                        enabled = True, 
                        fediverse = '', 
                        fediverse_scope = '', 
                        groups = [
                            ''
                            ], 
                        headline = '', 
                        headline_scope = '', 
                        id = '', 
                        language = '', 
                        last_login = 56, 
                        locale = '', 
                        notify_email = '', 
                        organisation = '', 
                        organisation_scope = '', 
                        phone = '', 
                        phone_scope = '', 
                        profile_enabled = '', 
                        profile_enabled_scope = '', 
                        quota = openapi_client.models.provisioning_api_user_details_quota.ProvisioningApiUserDetails_quota(
                            free = 56, 
                            quota = null, 
                            relative = 1.337, 
                            total = 56, 
                            used = 56, ), 
                        role = '', 
                        role_scope = '', 
                        storage_location = '', 
                        subadmin = [
                            ''
                            ], 
                        twitter = '', 
                        twitter_scope = '', 
                        website = '', 
                        website_scope = '', ), ),
        )
        """

    def testProvisioningApiUsersGetUser200Response(self):
        """Test ProvisioningApiUsersGetUser200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
